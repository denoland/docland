[{"kind":"namespace","name":"Deno","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":6,"col":0},"declarationKind":"declare","namespaceDef":{"elements":[{"kind":"function","name":"umask","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":22,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.  This API is under consideration to\ndetermine if permissions are required to call it.\n\nRetrieve the process umask.  If `mask` is provided, sets the process umask.\nThis call always returns what the umask was before the call.\n\n```ts\nconsole.log(Deno.umask());  // e.g. 18 (0o022)\nconst prevUmaskValue = Deno.umask(0o077);  // e.g. 18 (0o022)\nconsole.log(Deno.umask());  // e.g. 63 (0o077)\n```\n\nNOTE:  This API is not implemented on Windows"},"functionDef":{"params":[{"kind":"identifier","name":"mask","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"consoleSize","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":32,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\n\nGets the size of the console as columns/rows.\n\n```ts\nconst { columns, rows } = Deno.consoleSize(Deno.stdout.rid);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"columns","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"rows","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"loadavg","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":54,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable**  There are questions around which permission this needs. And\nmaybe should be renamed (loadAverage?)\n\nReturns an array containing the 1, 5, and 15 minute load averages. The\nload average is a measure of CPU and IO utilization of the last one, five,\nand 15 minute periods expressed as a fractional number.  Zero means there\nis no load. On Windows, the three values are always the same and represent\nthe current load, not the 1, 5 and 15 minute load averages.\n\n```ts\nconsole.log(Deno.loadavg());  // e.g. [ 0.71, 0.44, 0.44 ]\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"osRelease","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":68,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted. Under consideration to possibly move to\nDeno.build or Deno.versions and if it should depend sys-info, which may not\nbe desireable.\n\nReturns the release version of the Operating System.\n\n```ts\nconsole.log(Deno.osRelease());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"systemMemoryInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":83,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted.\n\nDisplays the total amount of free and used physical and swap memory in the\nsystem, as well as the buffers and caches used by the kernel.\n\nThis is similar to the `free` command in Linux\n\n```ts\nconsole.log(Deno.systemMemoryInfo());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"SystemMemoryInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SystemMemoryInfo"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"SystemMemoryInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":85,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"total","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":87,"col":4},"jsDoc":{"doc":"Total installed memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"free","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":89,"col":4},"jsDoc":{"doc":"Unused memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"available","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":95,"col":4},"jsDoc":{"doc":"Estimation of how much memory is available  for  starting  new\napplications, without  swapping. Unlike the data provided by the cache or\nfree fields, this field takes into account page cache and also that not\nall reclaimable memory slabs will be reclaimed due to items being in use"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"buffers","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":97,"col":4},"jsDoc":{"doc":"Memory used by kernel buffers"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"cached","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":99,"col":4},"jsDoc":{"doc":"Memory  used  by  the  page  cache  and  slabs"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"swapTotal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":101,"col":4},"jsDoc":{"doc":"Total swap memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"swapFree","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":103,"col":4},"jsDoc":{"doc":"Unused swap memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"NativeType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":107,"col":2},"declarationKind":"export","jsDoc":{"doc":"All possible types for interfacing with foreign functions"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"literal","literal":{"kind":"string","string":"void"}},{"repr":"u8","kind":"literal","literal":{"kind":"string","string":"u8"}},{"repr":"i8","kind":"literal","literal":{"kind":"string","string":"i8"}},{"repr":"u16","kind":"literal","literal":{"kind":"string","string":"u16"}},{"repr":"i16","kind":"literal","literal":{"kind":"string","string":"i16"}},{"repr":"u32","kind":"literal","literal":{"kind":"string","string":"u32"}},{"repr":"i32","kind":"literal","literal":{"kind":"string","string":"i32"}},{"repr":"u64","kind":"literal","literal":{"kind":"string","string":"u64"}},{"repr":"i64","kind":"literal","literal":{"kind":"string","string":"i64"}},{"repr":"usize","kind":"literal","literal":{"kind":"string","string":"usize"}},{"repr":"isize","kind":"literal","literal":{"kind":"string","string":"isize"}},{"repr":"f32","kind":"literal","literal":{"kind":"string","string":"f32"}},{"repr":"f64","kind":"literal","literal":{"kind":"string","string":"f64"}}]},"typeParams":[]}},{"kind":"interface","name":"ForeignFunction","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":123,"col":2},"declarationKind":"export","jsDoc":{"doc":"A foreign function as defined by its parameter and result types"},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"parameters","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":124,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}},"typeParams":[]},{"name":"result","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":125,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"DynamicLibrary","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":129,"col":2},"declarationKind":"export","jsDoc":{"doc":"A dynamic library resource"},"interfaceDef":{"extends":[],"methods":[{"name":"close","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":133,"col":4},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[{"name":"symbols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":131,"col":4},"jsDoc":{"doc":"All of the registered symbols along with functions for calling them"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"mapped","mappedType":{"typeParam":{"name":"K","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"keyof","tsType":{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}}}},"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"S","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}}],"typeName":"Record"}}}]}},{"kind":"function","name":"dlopen","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":140,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API\n\nOpens a dynamic library and registers symbols"},"functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"symbols","optional":false,"tsType":{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}}],"returnType":{"repr":"DynamicLibrary","kind":"typeRef","typeRef":{"typeParams":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}],"typeName":"DynamicLibrary"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"S","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}}],"typeName":"Record"}}}]}},{"kind":"enum","name":"DiagnosticCategory","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":146,"col":2},"declarationKind":"export","jsDoc":{"doc":"The log category for a diagnostic message."},"enumDef":{"members":[{"name":"Warning","init":{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":147,"col":4}},{"name":"Error","init":{"repr":"1","kind":"literal","literal":{"kind":"number","number":1}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":148,"col":4}},{"name":"Suggestion","init":{"repr":"2","kind":"literal","literal":{"kind":"number","number":2}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":149,"col":4}},{"name":"Message","init":{"repr":"3","kind":"literal","literal":{"kind":"number","number":3}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":150,"col":4}}]}},{"kind":"interface","name":"DiagnosticMessageChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":153,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"messageText","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":154,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"category","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":155,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"DiagnosticCategory","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticCategory"}},"typeParams":[]},{"name":"code","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":156,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"next","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":157,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"DiagnosticMessageChain","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticMessageChain"}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"Diagnostic","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":160,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"messageText","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":162,"col":4},"jsDoc":{"doc":"A string message summarizing the diagnostic."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"messageChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":164,"col":4},"jsDoc":{"doc":"An ordered array of further diagnostics."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"DiagnosticMessageChain","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticMessageChain"}},"typeParams":[]},{"name":"relatedInformation","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":167,"col":4},"jsDoc":{"doc":"Information related to the diagnostic. This is present when there is a\nsuggestion or other additional diagnostic information"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"Diagnostic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Diagnostic"}}},"typeParams":[]},{"name":"sourceLine","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":169,"col":4},"jsDoc":{"doc":"The text of the source line related to the diagnostic."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"source","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":170,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"start","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":172,"col":4},"jsDoc":{"doc":"The start position of the error. Zero based index."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"line","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"character","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]},{"name":"end","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":177,"col":4},"jsDoc":{"doc":"The end position of the error.  Zero based index."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"line","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"character","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]},{"name":"fileName","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":182,"col":4},"jsDoc":{"doc":"The filename of the resource related to the diagnostic message."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"category","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":184,"col":4},"jsDoc":{"doc":"The category of the diagnostic."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"DiagnosticCategory","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticCategory"}},"typeParams":[]},{"name":"code","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":186,"col":4},"jsDoc":{"doc":"A number identifier."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"formatDiagnostics","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":204,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nFormat an array of diagnostic items and return them as a single string in a\nuser friendly format. If there are no diagnostics then it will return an\nempty string.\n\n```ts\nconst { diagnostics } = await Deno.emit(\"file_with_compile_issues.ts\");\nconsole.table(diagnostics);  // Prints raw diagnostic data\nconsole.log(Deno.formatDiagnostics(diagnostics));  // User friendly output of diagnostics\nconsole.log(Deno.formatDiagnostics([]));  // An empty string\n```\n","tags":[{"kind":"param","name":"diagnostics","doc":"An array of diagnostic items to format"}]},"functionDef":{"params":[{"kind":"identifier","name":"diagnostics","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"Diagnostic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Diagnostic"}}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"CompilerOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":210,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nA specific subset TypeScript compiler options that can be supported by the\nDeno TypeScript compiler."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"allowJs","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":212,"col":4},"jsDoc":{"doc":"Allow JavaScript files to be compiled. Defaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"allowSyntheticDefaultImports","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":215,"col":4},"jsDoc":{"doc":"Allow default imports from modules with no default export. This does not\naffect code emit, just typechecking. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"allowUmdGlobalAccess","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":217,"col":4},"jsDoc":{"doc":"Allow accessing UMD globals from modules. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"allowUnreachableCode","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":219,"col":4},"jsDoc":{"doc":"Do not report errors on unreachable code. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"allowUnusedLabels","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":221,"col":4},"jsDoc":{"doc":"Do not report errors on unused labels. Defaults to `false`"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"alwaysStrict","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":224,"col":4},"jsDoc":{"doc":"Parse in strict mode and emit `\"use strict\"` for each source file.\nDefaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"baseUrl","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":227,"col":4},"jsDoc":{"doc":"Base directory to resolve non-relative module names. Defaults to\n`undefined`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"charset","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":229,"col":4},"jsDoc":{"doc":"The character set of the input files. Defaults to `\"utf8\"`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"checkJs","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":232,"col":4},"jsDoc":{"doc":"Report errors in `.js` files. Use in conjunction with `allowJs`. Defaults\nto `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"declaration","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":234,"col":4},"jsDoc":{"doc":"Generates corresponding `.d.ts` file. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"declarationDir","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":236,"col":4},"jsDoc":{"doc":"Output directory for generated declaration files."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"declarationMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":239,"col":4},"jsDoc":{"doc":"Generates a source map for each corresponding `.d.ts` file. Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"downlevelIteration","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":242,"col":4},"jsDoc":{"doc":"Provide full support for iterables in `for..of`, spread and\ndestructuring when targeting ES5 or ES3. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"emitDeclarationOnly","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":244,"col":4},"jsDoc":{"doc":"Only emit `.d.ts` declaration files. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"emitDecoratorMetadata","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":248,"col":4},"jsDoc":{"doc":"Emit design-type metadata for decorated declarations in source. See issue\n[microsoft/TypeScript#2577](https://github.com/Microsoft/TypeScript/issues/2577)\nfor details. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"esModuleInterop","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":252,"col":4},"jsDoc":{"doc":"Emit `__importStar` and `__importDefault` helpers for runtime babel\necosystem compatibility and enable `allowSyntheticDefaultImports` for type\nsystem compatibility. Defaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"experimentalDecorators","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":254,"col":4},"jsDoc":{"doc":"Enables experimental support for ES decorators. Defaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"importHelpers","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":257,"col":4},"jsDoc":{"doc":"Import emit helpers (e.g. `__extends`, `__rest`, etc..) from\n[tslib](https://www.npmjs.com/package/tslib)."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"importsNotUsedAsValues","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":271,"col":4},"jsDoc":{"doc":"This flag controls how `import` works, there are 3 different options:\n\n- `remove`: The default behavior of dropping import statements which only\n  reference types.\n- `preserve`: Preserves all `import` statements whose values or types are\n  never used. This can cause imports/side-effects to be preserved.\n- `error`: This preserves all imports (the same as the preserve option),\n  but will error when a value import is only used as a type. This might\n  be useful if you want to ensure no values are being accidentally\n  imported, but still make side-effect imports explicit.\n\nThis flag works because you can use `import type` to explicitly create an\n`import` statement which should never be emitted into JavaScript."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"remove","kind":"literal","literal":{"kind":"string","string":"remove"}},{"repr":"preserve","kind":"literal","literal":{"kind":"string","string":"preserve"}},{"repr":"error","kind":"literal","literal":{"kind":"string","string":"error"}}]},"typeParams":[]},{"name":"inlineSourceMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":274,"col":4},"jsDoc":{"doc":"Emit a single file with source maps instead of having a separate file.\nDefaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"inlineSources","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":277,"col":4},"jsDoc":{"doc":"Emit the source alongside the source maps within a single file; requires\n`inlineSourceMap` or `sourceMap` to be set. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"jsx","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":280,"col":4},"jsDoc":{"doc":"Support JSX in `.tsx` files: `\"react\"`, `\"preserve\"`, `\"react-native\"`.\nDefaults to `\"react\"`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"react","kind":"literal","literal":{"kind":"string","string":"react"}},{"repr":"preserve","kind":"literal","literal":{"kind":"string","string":"preserve"}},{"repr":"react-native","kind":"literal","literal":{"kind":"string","string":"react-native"}}]},"typeParams":[]},{"name":"jsxFactory","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":283,"col":4},"jsDoc":{"doc":"Specify the JSX factory function to use when targeting react JSX emit,\ne.g. `React.createElement` or `h`. Defaults to `React.createElement`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"jsxFragmentFactory","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":286,"col":4},"jsDoc":{"doc":"Specify the JSX fragment factory function to use when targeting react\nJSX emit, e.g. `Fragment`. Defaults to `React.Fragment`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"keyofStringsOnly","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":289,"col":4},"jsDoc":{"doc":"Resolve keyof to string valued property names only (no numbers or\nsymbols). Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"lib","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":292,"col":4},"jsDoc":{"doc":"List of library files to be included in the compilation. If omitted,\nthen the Deno main runtime libs are used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"locale","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":294,"col":4},"jsDoc":{"doc":"The locale to use to show error messages."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"mapRoot","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":300,"col":4},"jsDoc":{"doc":"Specifies the location where debugger should locate map files instead of\ngenerated locations. Use this flag if the `.map` files will be located at\nrun-time in a different location than the `.js` files. The location\nspecified will be embedded in the source map to direct the debugger where\nthe map files will be located. Defaults to `undefined`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"module","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":303,"col":4},"jsDoc":{"doc":"Specify the module format for the emitted code. Defaults to\n`\"esnext\"`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"none","kind":"literal","literal":{"kind":"string","string":"none"}},{"repr":"commonjs","kind":"literal","literal":{"kind":"string","string":"commonjs"}},{"repr":"amd","kind":"literal","literal":{"kind":"string","string":"amd"}},{"repr":"system","kind":"literal","literal":{"kind":"string","string":"system"}},{"repr":"umd","kind":"literal","literal":{"kind":"string","string":"umd"}},{"repr":"es6","kind":"literal","literal":{"kind":"string","string":"es6"}},{"repr":"es2015","kind":"literal","literal":{"kind":"string","string":"es2015"}},{"repr":"es2020","kind":"literal","literal":{"kind":"string","string":"es2020"}},{"repr":"esnext","kind":"literal","literal":{"kind":"string","string":"esnext"}}]},"typeParams":[]},{"name":"noEmitHelpers","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":315,"col":4},"jsDoc":{"doc":"Do not generate custom helper functions like `__extends` in compiled\noutput. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noFallthroughCasesInSwitch","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":318,"col":4},"jsDoc":{"doc":"Report errors for fallthrough cases in switch statement. Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noImplicitAny","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":321,"col":4},"jsDoc":{"doc":"Raise error on expressions and declarations with an implied any type.\nDefaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noImplicitReturns","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":324,"col":4},"jsDoc":{"doc":"Report an error when not all code paths in function return a value.\nDefaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noImplicitThis","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":327,"col":4},"jsDoc":{"doc":"Raise error on `this` expressions with an implied `any` type. Defaults to\n`true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noImplicitUseStrict","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":330,"col":4},"jsDoc":{"doc":"Do not emit `\"use strict\"` directives in module output. Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noLib","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":333,"col":4},"jsDoc":{"doc":"Do not include the default library file (`lib.d.ts`). Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noResolve","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":336,"col":4},"jsDoc":{"doc":"Do not add triple-slash references or module import targets to the list of\ncompiled files. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noStrictGenericChecks","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":339,"col":4},"jsDoc":{"doc":"Disable strict checking of generic signatures in function types. Defaults\nto `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noUncheckedIndexedAccess","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":341,"col":4},"jsDoc":{"doc":"Include 'undefined' in index signature results. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noUnusedLocals","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":343,"col":4},"jsDoc":{"doc":"Report errors on unused locals. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"noUnusedParameters","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":345,"col":4},"jsDoc":{"doc":"Report errors on unused parameters. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"paths","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":348,"col":4},"jsDoc":{"doc":"List of path mapping entries for module names to locations relative to the\n`baseUrl`. Defaults to `undefined`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeName":"Record"}},"typeParams":[]},{"name":"preserveConstEnums","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":351,"col":4},"jsDoc":{"doc":"Do not erase const enum declarations in generated code. Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"removeComments","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":354,"col":4},"jsDoc":{"doc":"Remove all comments except copy-right header comments beginning with\n`/*!`. Defaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"rootDir","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":357,"col":4},"jsDoc":{"doc":"Specifies the root directory of input files. Only use to control the\noutput directory structure with `outDir`. Defaults to `undefined`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"rootDirs","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":360,"col":4},"jsDoc":{"doc":"List of _root_ folders whose combined content represent the structure of\nthe project at runtime. Defaults to `undefined`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"sourceMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":362,"col":4},"jsDoc":{"doc":"Generates corresponding `.map` file. Defaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"sourceRoot","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":368,"col":4},"jsDoc":{"doc":"Specifies the location where debugger should locate TypeScript files\ninstead of source locations. Use this flag if the sources will be located\nat run-time in a different location than that at design-time. The location\nspecified will be embedded in the sourceMap to direct the debugger where\nthe source files will be located. Defaults to `undefined`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"skipLibCheck","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":370,"col":4},"jsDoc":{"doc":"Skip type checking of all declaration files (`*.d.ts`)."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"strict","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":375,"col":4},"jsDoc":{"doc":"Enable all strict type checking options. Enabling `strict` enables\n`noImplicitAny`, `noImplicitThis`, `alwaysStrict`, `strictBindCallApply`,\n`strictNullChecks`, `strictFunctionTypes` and\n`strictPropertyInitialization`. Defaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"strictBindCallApply","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":378,"col":4},"jsDoc":{"doc":"Enable stricter checking of the `bind`, `call`, and `apply` methods on\nfunctions. Defaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"strictFunctionTypes","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":381,"col":4},"jsDoc":{"doc":"Disable bivariant parameter checking for function types. Defaults to\n`true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"strictPropertyInitialization","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":385,"col":4},"jsDoc":{"doc":"Ensure non-undefined class properties are initialized in the constructor.\nThis option requires `strictNullChecks` be enabled in order to take effect.\nDefaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"strictNullChecks","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":389,"col":4},"jsDoc":{"doc":"In strict null checking mode, the `null` and `undefined` values are not in\nthe domain of every type and are only assignable to themselves and `any`\n(the one exception being that `undefined` is also assignable to `void`)."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"suppressExcessPropertyErrors","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":392,"col":4},"jsDoc":{"doc":"Suppress excess property checks for object literals. Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"suppressImplicitAnyIndexErrors","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":395,"col":4},"jsDoc":{"doc":"Suppress `noImplicitAny` errors for indexing objects lacking index\nsignatures."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"target","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":397,"col":4},"jsDoc":{"doc":"Specify ECMAScript target version. Defaults to `esnext`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"es3","kind":"literal","literal":{"kind":"string","string":"es3"}},{"repr":"es5","kind":"literal","literal":{"kind":"string","string":"es5"}},{"repr":"es6","kind":"literal","literal":{"kind":"string","string":"es6"}},{"repr":"es2015","kind":"literal","literal":{"kind":"string","string":"es2015"}},{"repr":"es2016","kind":"literal","literal":{"kind":"string","string":"es2016"}},{"repr":"es2017","kind":"literal","literal":{"kind":"string","string":"es2017"}},{"repr":"es2018","kind":"literal","literal":{"kind":"string","string":"es2018"}},{"repr":"es2019","kind":"literal","literal":{"kind":"string","string":"es2019"}},{"repr":"es2020","kind":"literal","literal":{"kind":"string","string":"es2020"}},{"repr":"esnext","kind":"literal","literal":{"kind":"string","string":"esnext"}}]},"typeParams":[]},{"name":"types","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":428,"col":4},"jsDoc":{"doc":"List of names of type definitions to include when type checking.\nDefaults to `undefined`.\n\nThe type definitions are resolved according to the normal Deno resolution\nirrespective of if sources are provided on the call. In addition, unlike\npassing the `--config` option on startup, there is no base to resolve\nrelative specifiers, so the specifiers here have to be fully qualified\nURLs or paths.  For example:\n\n```ts\nDeno.emit(\"./a.ts\", {\n  compilerOptions: {\n    types: [\n      \"https://deno.land/x/pkg/types.d.ts\",\n      \"/Users/me/pkg/types.d.ts\",\n    ]\n  }\n});\n```"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"useDefineForClassFields","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":431,"col":4},"jsDoc":{"doc":"Emit class fields with ECMAScript-standard semantics. Defaults to\n`false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"ImportMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":434,"col":2},"declarationKind":"private","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"imports","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":435,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"typeParams":[]},{"name":"scopes","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":436,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}}],"typeName":"Record"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"EmitOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":444,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nThe options for `Deno.emit()` API."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"bundle","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":449,"col":4},"jsDoc":{"doc":"Indicate that the source code should be emitted to a single file\nJavaScript bundle that is a single ES module (`\"module\"`) or a single\nfile self contained script we executes in an immediately invoked function\nwhen loaded (`\"classic\"`)."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"module","kind":"literal","literal":{"kind":"string","string":"module"}},{"repr":"classic","kind":"literal","literal":{"kind":"string","string":"classic"}}]},"typeParams":[]},{"name":"check","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":457,"col":4},"jsDoc":{"doc":"If `true` then the sources will be typed checked, returning any\ndiagnostic errors in the result.  If `false` type checking will be\nskipped.  Defaults to `true`.\n\n*Note* by default, only TypeScript will be type checked, just like on\nthe command line.  Use the `compilerOptions` options of `checkJs` to\nenable type checking of JavaScript."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"compilerOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":460,"col":4},"jsDoc":{"doc":"A set of options that are aligned to TypeScript compiler options that\nare supported by Deno."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"CompilerOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CompilerOptions"}},"typeParams":[]},{"name":"importMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":463,"col":4},"jsDoc":{"doc":"An [import-map](https://deno.land/manual/linking_to_external_code/import_maps#import-maps)\nwhich will be applied to the imports."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"ImportMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ImportMap"}},"typeParams":[]},{"name":"importMapPath","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":471,"col":4},"jsDoc":{"doc":"An absolute path to an [import-map](https://deno.land/manual/linking_to_external_code/import_maps#import-maps).\nRequired to be specified if an `importMap` is specified to be able to\ndetermine resolution of relative paths. If a `importMap` is not\nspecified, then it will assumed the file path points to an import map on\ndisk and will be attempted to be loaded based on current runtime\npermissions."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"sources","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":474,"col":4},"jsDoc":{"doc":"A record of sources to use when doing the emit.  If provided, Deno will\nuse these sources instead of trying to resolve the modules externally."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"EmitResult","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":482,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nThe result of `Deno.emit()` API."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"diagnostics","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":487,"col":4},"jsDoc":{"doc":"Diagnostic messages returned from the type checker (`tsc`).\n\nCan be used with `Deno.formatDiagnostics` to display a user\nfriendly string."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"Diagnostic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Diagnostic"}}},"typeParams":[]},{"name":"files","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":491,"col":4},"jsDoc":{"doc":"Any emitted files.  If bundled, then the JavaScript will have the\nkey of `deno:///bundle.js` with an optional map (based on\n`compilerOptions`) in `deno:///bundle.js.map`."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"typeParams":[]},{"name":"ignoredOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":493,"col":4},"jsDoc":{"doc":"An optional array of any compiler options that were ignored by Deno."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"stats","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":496,"col":4},"jsDoc":{"doc":"An array of internal statistics related to the emit, for diagnostic\npurposes."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"}]}],"typeName":"Array"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"emit","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":521,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nSimilar to the command line functionality of `deno run` or `deno cache`,\n`Deno.emit()` provides a way to provide Deno arbitrary JavaScript\nor TypeScript and have it return JavaScript based on the options and\nsettings provided. The source code can either be provided or the modules\ncan be fetched and resolved in line with the behavior of the command line.\n\nRequires `allow-read` and/or `allow-net` if sources are not provided.\n","tags":[{"kind":"param","name":"rootSpecifier","doc":"The specifier that will be used as the entry point.\nIf no sources are provided, then the specifier would\nbe the same as if you typed it on the command line for\n`deno run`. If sources are provided, it should match\none of the names of the sources."},{"kind":"param","name":"options","doc":"A set of options to be used with the emit.\n"},{"kind":"return","doc":"The result of the emit. If diagnostics are found, they can be used\nwith `Deno.formatDiagnostics` to construct a user friendly string, which\nhas the same format as CLI diagnostics."}]},"functionDef":{"params":[{"kind":"identifier","name":"rootSpecifier","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"EmitOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EmitOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"EmitResult","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EmitResult"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"Location","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":527,"col":2},"declarationKind":"private","jsDoc":{"doc":"**UNSTABLE**: Should not have same name as `window.location` type."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"fileName","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":530,"col":4},"jsDoc":{"doc":"The full url for the module, e.g. `file://some/file.ts` or\n`https://some/file.ts`."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"lineNumber","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":532,"col":4},"jsDoc":{"doc":"The line number in the file. It is assumed to be 1-indexed."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"columnNumber","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":534,"col":4},"jsDoc":{"doc":"The column number in the file. It is assumed to be 1-indexed."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"applySourceMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":563,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nGiven a current location in a module, lookup the source location and return\nit.\n\nWhen Deno transpiles code, it keep source maps of the transpiled code. This\nfunction can be used to lookup the original location. This is\nautomatically done when accessing the `.stack` of an error, or when an\nuncaught error is logged. This function can be used to perform the lookup\nfor creating better error handling.\n\n**Note:** `lineNumber` and `columnNumber` are 1 indexed, which matches display\nexpectations, but is not typical of most index numbers in Deno.\n\nAn example:\n\n```ts\nconst origin = Deno.applySourceMap({\n  fileName: \"file://my/module.ts\",\n  lineNumber: 5,\n  columnNumber: 15\n});\n\nconsole.log(`${origin.fileName}:${origin.lineNumber}:${origin.columnNumber}`);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"location","optional":false,"tsType":{"repr":"Location","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Location"}}}],"returnType":{"repr":"Location","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Location"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"Signal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":565,"col":2},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"SIGABRT","kind":"literal","literal":{"kind":"string","string":"SIGABRT"}},{"repr":"SIGALRM","kind":"literal","literal":{"kind":"string","string":"SIGALRM"}},{"repr":"SIGBUS","kind":"literal","literal":{"kind":"string","string":"SIGBUS"}},{"repr":"SIGCHLD","kind":"literal","literal":{"kind":"string","string":"SIGCHLD"}},{"repr":"SIGCONT","kind":"literal","literal":{"kind":"string","string":"SIGCONT"}},{"repr":"SIGEMT","kind":"literal","literal":{"kind":"string","string":"SIGEMT"}},{"repr":"SIGFPE","kind":"literal","literal":{"kind":"string","string":"SIGFPE"}},{"repr":"SIGHUP","kind":"literal","literal":{"kind":"string","string":"SIGHUP"}},{"repr":"SIGILL","kind":"literal","literal":{"kind":"string","string":"SIGILL"}},{"repr":"SIGINFO","kind":"literal","literal":{"kind":"string","string":"SIGINFO"}},{"repr":"SIGINT","kind":"literal","literal":{"kind":"string","string":"SIGINT"}},{"repr":"SIGIO","kind":"literal","literal":{"kind":"string","string":"SIGIO"}},{"repr":"SIGKILL","kind":"literal","literal":{"kind":"string","string":"SIGKILL"}},{"repr":"SIGPIPE","kind":"literal","literal":{"kind":"string","string":"SIGPIPE"}},{"repr":"SIGPROF","kind":"literal","literal":{"kind":"string","string":"SIGPROF"}},{"repr":"SIGPWR","kind":"literal","literal":{"kind":"string","string":"SIGPWR"}},{"repr":"SIGQUIT","kind":"literal","literal":{"kind":"string","string":"SIGQUIT"}},{"repr":"SIGSEGV","kind":"literal","literal":{"kind":"string","string":"SIGSEGV"}},{"repr":"SIGSTKFLT","kind":"literal","literal":{"kind":"string","string":"SIGSTKFLT"}},{"repr":"SIGSTOP","kind":"literal","literal":{"kind":"string","string":"SIGSTOP"}},{"repr":"SIGSYS","kind":"literal","literal":{"kind":"string","string":"SIGSYS"}},{"repr":"SIGTERM","kind":"literal","literal":{"kind":"string","string":"SIGTERM"}},{"repr":"SIGTRAP","kind":"literal","literal":{"kind":"string","string":"SIGTRAP"}},{"repr":"SIGTSTP","kind":"literal","literal":{"kind":"string","string":"SIGTSTP"}},{"repr":"SIGTTIN","kind":"literal","literal":{"kind":"string","string":"SIGTTIN"}},{"repr":"SIGTTOU","kind":"literal","literal":{"kind":"string","string":"SIGTTOU"}},{"repr":"SIGURG","kind":"literal","literal":{"kind":"string","string":"SIGURG"}},{"repr":"SIGUSR1","kind":"literal","literal":{"kind":"string","string":"SIGUSR1"}},{"repr":"SIGUSR2","kind":"literal","literal":{"kind":"string","string":"SIGUSR2"}},{"repr":"SIGVTALRM","kind":"literal","literal":{"kind":"string","string":"SIGVTALRM"}},{"repr":"SIGWINCH","kind":"literal","literal":{"kind":"string","string":"SIGWINCH"}},{"repr":"SIGXCPU","kind":"literal","literal":{"kind":"string","string":"SIGXCPU"}},{"repr":"SIGXFSZ","kind":"literal","literal":{"kind":"string","string":"SIGXFSZ"}}]},"typeParams":[]}},{"kind":"class","name":"SignalStream","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":604,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nRepresents the stream of signals, implements both `AsyncIterator` and\n`PromiseLike`."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"signal","optional":false,"tsType":{"repr":"Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Signal"}}}],"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":606,"col":4}}],"properties":[],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"then","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"f","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Promise"}}]},"params":[{"kind":"identifier","name":"v","optional":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"}}],"typeParams":[]}}},{"kind":"identifier","name":"g","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}],"typeName":"Promise"}}]},"params":[{"kind":"identifier","name":"v","optional":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"}}],"typeParams":[]}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}]}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"S"}]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":607,"col":4}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"next","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"IteratorResult","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"IteratorResult"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":611,"col":4}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[Symbol.asyncIterator]","kind":"method","functionDef":{"params":[],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"AsyncIterableIterator"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":612,"col":4}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"dispose","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":613,"col":4}}],"extends":null,"implements":[{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"AsyncIterableIterator"}},{"repr":"PromiseLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"PromiseLike"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"signal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":651,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nReturns the stream of the given signal number. You can use it as an async\niterator.\n\n```ts\nfor await (const _ of Deno.signal(\"SIGTERM\")) {\n  console.log(\"got SIGTERM!\");\n}\n```\n\nYou can also use it as a promise. In this case you can only receive the\nfirst one.\n\n```ts\nawait Deno.signal(\"SIGTERM\");\nconsole.log(\"SIGTERM received!\")\n```\n\nIf you want to stop receiving the signals, you can use `.dispose()` method\nof the signal stream object.\n\n```ts\nconst sig = Deno.signal(\"SIGTERM\");\nsetTimeout(() => { sig.dispose(); }, 5000);\nfor await (const _ of sig) {\n  console.log(\"SIGTERM!\")\n}\n```\n\nThe above for-await loop exits after 5 seconds when `sig.dispose()` is\ncalled.\n\nNOTE: This functionality is not yet implemented on Windows."},"functionDef":{"params":[{"kind":"identifier","name":"sig","optional":false,"tsType":{"repr":"Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Signal"}}}],"returnType":{"repr":"SignalStream","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SignalStream"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"SetRawOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":653,"col":2},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"cbreak","params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"function","name":"setRaw","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":673,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted\n\nSet TTY to be under raw mode or not. In raw mode, characters are read and\nreturned as is, without being processed. All special processing of\ncharacters by the terminal is disabled, including echoing input characters.\nReading from a TTY device in raw mode is faster than reading from a TTY\ndevice in canonical mode.\n\nThe `cbreak` option can be used to indicate that characters that correspond\nto a signal should still be generated. When disabling raw mode, this option\nis ignored. This functionality currently only works on Linux and Mac OS.\n\n```ts\nDeno.setRaw(Deno.stdin.rid, true, { cbreak: true });\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"mode","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"SetRawOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SetRawOptions"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"utimeSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":690,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nSynchronously changes the access (`atime`) and modification (`mtime`) times\nof a file system object referenced by `path`. Given times are either in\nseconds (UNIX epoch time) or as `Date` objects.\n\n```ts\nDeno.utimeSync(\"myfile.txt\", 1556495550, new Date());\n```\n\nRequires `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"utime","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":707,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nChanges the access (`atime`) and modification (`mtime`) times of a file\nsystem object referenced by `path`. Given times are either in seconds\n(UNIX epoch time) or as `Date` objects.\n\n```ts\nawait Deno.utime(\"myfile.txt\", 1556495550, new Date());\n```\n\nRequires `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"run","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":713,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"opt","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"Process","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Process"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"","kind":"intersection","intersection":[{"repr":"RunOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RunOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"clearEnv","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"gid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"uid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"default":{"repr":"","kind":"intersection","intersection":[{"repr":"RunOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RunOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"clearEnv","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"gid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"uid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}]}},{"kind":"function","name":"kill","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":738,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: Send a signal to process under given `pid`. This\nfunctionality only works on Linux and Mac OS.\n\nIf `pid` is negative, the signal will be sent to the process group\nidentified by `pid`.\n\n     const p = Deno.run({\n       cmd: [\"sleep\", \"10000\"]\n     });\n\n     Deno.kill(p.pid, \"SIGINT\");\n\nRequires `allow-run` permission."},"functionDef":{"params":[{"kind":"identifier","name":"pid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"signo","optional":false,"tsType":{"repr":"Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Signal"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"hostname","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":751,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.  Additional consideration is still\nnecessary around the permissions required.\n\nGet the `hostname` of the machine the Deno process is running on.\n\n```ts\nconsole.log(Deno.hostname());\n```\n\n Requires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"HttpClient","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":761,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\nA custom HttpClient for use with `fetch`.\n\n```ts\nconst client = Deno.createHttpClient({ caData: await Deno.readTextFile(\"./ca.pem\") });\nconst req = await fetch(\"https://myserver.com\", { client });\n```"},"classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"rid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":762,"col":4}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":763,"col":4}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"interface","name":"CreateHttpClientOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":769,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\nThe options used when creating a [HttpClient]."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"caData","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":772,"col":4},"jsDoc":{"doc":"A certificate authority to use when validating TLS certificates. Certificate data must be PEM encoded."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"proxy","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":773,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Proxy","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Proxy"}},"typeParams":[]},{"name":"certChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":774,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"privateKey","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":775,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"Proxy","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":778,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"url","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":779,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"basicAuth","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":780,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"BasicAuth","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BasicAuth"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BasicAuth","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":783,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"username","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":784,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"password","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":785,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"createHttpClient","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":801,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\nCreate a custom HttpClient for to use with `fetch`.\n\n```ts\nconst client = Deno.createHttpClient({ caData: await Deno.readTextFile(\"./ca.pem\") });\nconst response = await fetch(\"https://myserver.com\", { client });\n```\n\n```ts\nconst client = Deno.createHttpClient({ proxy: { url: \"http://myproxy.com:8080\" } });\nconst response = await fetch(\"https://myserver.com\", { client });\n```"},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"CreateHttpClientOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CreateHttpClientOptions"}}}],"returnType":{"repr":"HttpClient","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HttpClient"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"futimeSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":816,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nSynchronously changes the access (`atime`) and modification (`mtime`) times\nof a file stream resource referenced by `rid`. Given times are either in\nseconds (UNIX epoch time) or as `Date` objects.\n\n```ts\nconst file = Deno.openSync(\"file.txt\", { create: true, write: true });\nDeno.futimeSync(file.rid, 1556495550, new Date());\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"futime","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":833,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nChanges the access (`atime`) and modification (`mtime`) times of a file\nstream resource referenced by `rid`. Given times are either in seconds\n(UNIX epoch time) or as `Date` objects.\n\n```ts\nconst file = await Deno.open(\"file.txt\", { create: true, write: true });\nawait Deno.futime(file.rid, 1556495550, new Date());\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"sleepSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":848,"col":2},"declarationKind":"export","jsDoc":{"doc":"*UNSTABLE**: new API, yet to be vetted.\n\nSleepSync puts the main thread to sleep synchronously for a given amount of\ntime in milliseconds.\n\n```ts\nDeno.sleepSync(10);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"millis","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"Metrics","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":850,"col":2},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"OpMetrics","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OpMetrics"}}],"methods":[],"properties":[{"name":"ops","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":851,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"OpMetrics","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OpMetrics"}}],"typeName":"Record"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"OpMetrics","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":854,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"opsDispatched","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":855,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsDispatchedSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":856,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsDispatchedAsync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":857,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsDispatchedAsyncUnref","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":858,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsCompleted","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":859,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsCompletedSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":860,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsCompletedAsync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":861,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"opsCompletedAsyncUnref","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":862,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"bytesSentControl","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":863,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"bytesSentData","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":864,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"bytesReceived","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":865,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TestDefinition","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":869,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New option, yet to be vetted."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"permissions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":876,"col":4},"jsDoc":{"doc":"Specifies the permissions that should be used to run the test.\nSet this to \"inherit\" to keep the calling thread's permissions.\nSet this to \"none\" to revoke all permissions.\n\nDefaults to \"inherit\"."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"none","kind":"literal","literal":{"kind":"string","string":"none"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"env","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]},"typeParams":[]},{"name":"hrtime","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"}]},"typeParams":[]},{"name":"net","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]},"typeParams":[]},{"name":"ffi","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"}]},"typeParams":[]},{"name":"read","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}],"typeName":"Array"}}]},"typeParams":[]},{"name":"run","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}],"typeName":"Array"}}]},"typeParams":[]},{"name":"write","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}],"typeName":"Array"}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"RecordType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1012,"col":2},"declarationKind":"export","jsDoc":{"doc":"The type of the resource record.\nOnly the listed types are supported currently."},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"A","kind":"literal","literal":{"kind":"string","string":"A"}},{"repr":"AAAA","kind":"literal","literal":{"kind":"string","string":"AAAA"}},{"repr":"ANAME","kind":"literal","literal":{"kind":"string","string":"ANAME"}},{"repr":"CNAME","kind":"literal","literal":{"kind":"string","string":"CNAME"}},{"repr":"MX","kind":"literal","literal":{"kind":"string","string":"MX"}},{"repr":"PTR","kind":"literal","literal":{"kind":"string","string":"PTR"}},{"repr":"SRV","kind":"literal","literal":{"kind":"string","string":"SRV"}},{"repr":"TXT","kind":"literal","literal":{"kind":"string","string":"TXT"}}]},"typeParams":[]}},{"kind":"interface","name":"ResolveDnsOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1022,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"nameServer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1025,"col":4},"jsDoc":{"doc":"The name server to be used for lookups.\nIf not specified, defaults to the system configuration e.g. `/etc/resolv.conf` on Unix."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"ipAddr","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"port","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"MXRecord","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1035,"col":2},"declarationKind":"export","jsDoc":{"doc":"If `resolveDns` is called with \"MX\" record type specified, it will return an array of this interface."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"preference","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1036,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"exchange","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1037,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"SRVRecord","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1041,"col":2},"declarationKind":"export","jsDoc":{"doc":"If `resolveDns` is called with \"SRV\" record type specified, it will return an array of this interface."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"priority","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1042,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"weight","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1043,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"port","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1044,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"target","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1045,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"resolveDns","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1048,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"query","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"recordType","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"A","kind":"literal","literal":{"kind":"string","string":"A"}},{"repr":"AAAA","kind":"literal","literal":{"kind":"string","string":"AAAA"}},{"repr":"ANAME","kind":"literal","literal":{"kind":"string","string":"ANAME"}},{"repr":"CNAME","kind":"literal","literal":{"kind":"string","string":"CNAME"}},{"repr":"PTR","kind":"literal","literal":{"kind":"string","string":"PTR"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ResolveDnsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResolveDnsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"resolveDns","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1054,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"query","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"recordType","optional":false,"tsType":{"repr":"MX","kind":"literal","literal":{"kind":"string","string":"MX"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ResolveDnsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResolveDnsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"MXRecord","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MXRecord"}}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"resolveDns","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1060,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"query","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"recordType","optional":false,"tsType":{"repr":"SRV","kind":"literal","literal":{"kind":"string","string":"SRV"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ResolveDnsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResolveDnsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"SRVRecord","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SRVRecord"}}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"resolveDns","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1066,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"query","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"recordType","optional":false,"tsType":{"repr":"TXT","kind":"literal","literal":{"kind":"string","string":"TXT"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ResolveDnsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResolveDnsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"resolveDns","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1090,"col":2},"declarationKind":"export","jsDoc":{"doc":"** UNSTABLE**: new API, yet to be vetted.\n\nPerforms DNS resolution against the given query, returning resolved records.\nFails in the cases such as:\n- the query is in invalid format\n- the options have an invalid parameter, e.g. `nameServer.port` is beyond the range of 16-bit unsigned integer\n- timed out\n\n```ts\nconst a = await Deno.resolveDns(\"example.com\", \"A\");\n\nconst aaaa = await Deno.resolveDns(\"example.com\", \"AAAA\", {\n  nameServer: { ipAddr: \"8.8.8.8\", port: 1234 },\n});\n```\n\nRequires `allow-net` permission."},"functionDef":{"params":[{"kind":"identifier","name":"query","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"recordType","optional":false,"tsType":{"repr":"RecordType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RecordType"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ResolveDnsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResolveDnsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"","kind":"array","array":{"repr":"MXRecord","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MXRecord"}}},{"repr":"","kind":"array","array":{"repr":"SRVRecord","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SRVRecord"}}},{"repr":"","kind":"array","array":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}]}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"DatagramConn","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1099,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nA generic transport listener for message-oriented protocols."},"interfaceDef":{"extends":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}]}],"typeName":"AsyncIterable"}}],"methods":[{"name":"receive","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1103,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nWaits for and resolves to the next message to the `UDPConn`."},"optional":false,"params":[{"kind":"identifier","name":"p","optional":true,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}]}],"typeName":"Promise"}},"typeParams":[]},{"name":"send","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1107,"col":4},"jsDoc":{"doc":"UNSTABLE: new API, yet to be vetted.\n\nSends a message to the target."},"optional":false,"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"addr","optional":false,"tsType":{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"typeParams":[]},{"name":"close","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1112,"col":4},"jsDoc":{"doc":"UNSTABLE: new API, yet to be vetted.\n\nClose closes the socket. Any pending message promises will be rejected\nwith errors."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]},{"name":"[Symbol.asyncIterator]","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1115,"col":4},"computed":true,"optional":false,"params":[],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}]}],"typeName":"AsyncIterableIterator"}},"typeParams":[]}],"properties":[{"name":"addr","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1114,"col":4},"jsDoc":{"doc":"Return the address of the `UDPConn`."},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"UnixListenOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1118,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"path","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1120,"col":4},"jsDoc":{"doc":"A Path to the Unix Socket."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"listen","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1132,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nListen announces on the local transport address.\n\n```ts\nconst listener = Deno.listen({ path: \"/foo/bar.sock\", transport: \"unix\" })\n```\n\nRequires `allow-read` and `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"UnixListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixListenOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"transport","params":[],"computed":false,"optional":false,"tsType":{"repr":"unix","kind":"literal","literal":{"kind":"string","string":"unix"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"Listener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Listener"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"listenDatagram","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1153,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted\n\nListen announces on the local transport address.\n\n```ts\nconst listener1 = Deno.listenDatagram({\n  port: 80,\n  transport: \"udp\"\n});\nconst listener2 = Deno.listenDatagram({\n  hostname: \"golang.org\",\n  port: 80,\n  transport: \"udp\"\n});\n```\n\nRequires `allow-net` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"ListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ListenOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"transport","params":[],"computed":false,"optional":false,"tsType":{"repr":"udp","kind":"literal","literal":{"kind":"string","string":"udp"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"DatagramConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DatagramConn"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"listenDatagram","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1169,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted\n\nListen announces on the local transport address.\n\n```ts\nconst listener = Deno.listenDatagram({\n  path: \"/foo/bar.sock\",\n  transport: \"unixpacket\"\n});\n```\n\nRequires `allow-read` and `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"UnixListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixListenOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"transport","params":[],"computed":false,"optional":false,"tsType":{"repr":"unixpacket","kind":"literal","literal":{"kind":"string","string":"unixpacket"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"DatagramConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DatagramConn"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"UnixConnectOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1173,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"transport","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1174,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"unix","kind":"literal","literal":{"kind":"string","string":"unix"}},"typeParams":[]},{"name":"path","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1175,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"connect","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1193,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**:  The unix socket transport is unstable as a new API yet to\nbe vetted.  The TCP transport is considered stable.\n\nConnects to the hostname (default is \"127.0.0.1\") and port on the named\ntransport (default is \"tcp\"), and resolves to the connection (`Conn`).\n\n```ts\nconst conn1 = await Deno.connect({ port: 80 });\nconst conn2 = await Deno.connect({ hostname: \"192.0.2.1\", port: 80 });\nconst conn3 = await Deno.connect({ hostname: \"[2001:db8::1]\", port: 80 });\nconst conn4 = await Deno.connect({ hostname: \"golang.org\", port: 80, transport: \"tcp\" });\nconst conn5 = await Deno.connect({ path: \"/foo/bar.sock\", transport: \"unix\" });\n```\n\nRequires `allow-net` permission for \"tcp\" and `allow-read` for \"unix\"."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"ConnectOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectOptions"}},{"repr":"UnixConnectOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixConnectOptions"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Conn"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"ConnectTlsClientCertOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1197,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"certChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1199,"col":4},"jsDoc":{"doc":"PEM formatted client certificate chain."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"privateKey","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1201,"col":4},"jsDoc":{"doc":"PEM formatted (RSA or PKCS8) private key of client certificate."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"connectTls","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1219,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE** New API, yet to be vetted.\n\nCreate a TLS connection with an attached client certificate.\n\n```ts\nconst conn = await Deno.connectTls({\n  hostname: \"deno.land\",\n  port: 443,\n  certChain: \"---- BEGIN CERTIFICATE ----\\n ...\",\n  privateKey: \"---- BEGIN PRIVATE KEY ----\\n ...\",\n});\n```\n\nRequires `allow-net` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"ConnectTlsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectTlsOptions"}},{"repr":"ConnectTlsClientCertOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectTlsClientCertOptions"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Conn"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"StartTlsOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1223,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"hostname","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1226,"col":4},"jsDoc":{"doc":"A literal IP address or host name that can be resolved to an IP address.\nIf not specified, defaults to `127.0.0.1`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"certFile","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1228,"col":4},"jsDoc":{"doc":"Server certificate file."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"startTls","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1247,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nStart TLS handshake from an existing connection using\nan optional cert file, hostname (default is \"127.0.0.1\").  The\ncert file is optional and if not included Mozilla's root certificates will\nbe used (see also https://github.com/ctz/webpki-roots for specifics)\nUsing this function requires that the other end of the connection is\nprepared for TLS handshake.\n\n```ts\nconst conn = await Deno.connect({ port: 80, hostname: \"127.0.0.1\" });\nconst tlsConn = await Deno.startTls(conn, { certFile: \"./certs/my_custom_root_CA.pem\", hostname: \"localhost\" });\n```\n\nRequires `allow-net` permission."},"functionDef":{"params":[{"kind":"identifier","name":"conn","optional":false,"tsType":{"repr":"Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Conn"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"StartTlsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"StartTlsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Conn"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"ListenTlsOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1252,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"alpnProtocols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1259,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nApplication-Layer Protocol Negotiation (ALPN) protocols to announce to\nthe client. If not specified, no ALPN extension will be included in the\nTLS handshake."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"flock","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1267,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nAcquire an advisory file-system lock for the provided file. `exclusive`\ndefaults to `false`."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"exclusive","optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"flockSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1274,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nAcquire an advisory file-system lock for the provided file. `exclusive`\ndefaults to `false`."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"exclusive","optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"funlock","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1280,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nRelease an advisory file-system lock for the provided file."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"funlockSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1286,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nRelease an advisory file-system lock for the provided file."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}}]}},{"kind":"function","name":"fetch","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1289,"col":0},"declarationKind":"declare","functionDef":{"params":[{"kind":"identifier","name":"input","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Request","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Request"}},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"init","optional":true,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"RequestInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RequestInit"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"client","params":[],"computed":false,"optional":false,"tsType":{"repr":"Deno.HttpClient","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.HttpClient"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Response","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Response"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"WorkerOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1294,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"deno","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1328,"col":2},"jsDoc":{"doc":"UNSTABLE: New API.\n\nSet deno.namespace to `true` to make `Deno` namespace and all of its\nmethods available to the worker environment. Defaults to `false`.\n\nConfigure deno.permissions options to change the level of access the worker will\nhave. By default it will inherit the permissions of its parent thread. The permissions\nof a worker can't be extended beyond its parent's permissions reach.\n- \"inherit\" will take the permissions of the thread the worker is created in\n- You can disable/enable permissions all together by passing a boolean\n- You can provide a list of routes relative to the file the worker\n  is created in to limit the access of the worker (read/write permissions only)\n\nExample:\n\n```ts\n// mod.ts\nconst worker = new Worker(\n  new URL(\"deno_worker.ts\", import.meta.url).href, {\n    type: \"module\",\n    deno: {\n      namespace: true,\n      permissions: {\n        read: true,\n      },\n    },\n  }\n);\n```"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"namespace","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"permissions","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"none","kind":"literal","literal":{"kind":"string","string":"none"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"env","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]},"typeParams":[]},{"name":"hrtime","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"}]},"typeParams":[]},{"name":"net","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]},"typeParams":[]},{"name":"ffi","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"}]},"typeParams":[]},{"name":"read","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}],"typeName":"Array"}}]},"typeParams":[]},{"name":"run","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}],"typeName":"Array"}}]},"typeParams":[]},{"name":"write","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}],"typeName":"Array"}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocketStreamOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1348,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"protocols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1349,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"signal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1350,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"AbortSignal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AbortSignal"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocketConnection","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1353,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"readable","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1354,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}],"typeName":"ReadableStream"}},"typeParams":[]},{"name":"writable","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1355,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"WritableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}],"typeName":"WritableStream"}},"typeParams":[]},{"name":"extensions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1356,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"protocol","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1357,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocketCloseInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1360,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"code","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1361,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"reason","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1362,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"WebSocketStream","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1365,"col":0},"declarationKind":"declare","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"url","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"WebSocketStreamOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketStreamOptions"}}}],"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1366,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"url","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1367,"col":2}},{"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketConnection","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketConnection"}}],"typeName":"Promise"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connection","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1368,"col":2}},{"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketCloseInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketCloseInfo"}}],"typeName":"Promise"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"closed","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1369,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"closeInfo","optional":true,"tsType":{"repr":"WebSocketCloseInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketCloseInfo"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.14.2/cli/dts/lib.deno.unstable.d.ts","line":1370,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}}]