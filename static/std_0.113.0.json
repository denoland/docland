{"structure":{"":["/version.ts"],"/archive":["/archive/tar.ts"],"/async":["/async/mod.ts"],"/bytes":["/bytes/mod.ts"],"/collections":["/collections/mod.ts"],"/crypto":["/crypto/mod.ts"],"/datetime":["/datetime/mod.ts"],"/encoding":["/encoding/ascii85.ts","/encoding/base32.ts","/encoding/base64.ts","/encoding/base64url.ts","/encoding/binary.ts","/encoding/csv.ts","/encoding/csv_stringify.ts","/encoding/hex.ts","/encoding/toml.ts","/encoding/yaml.ts"],"/examples":["/examples/cat.ts","/examples/catj.ts","/examples/colors.ts","/examples/curl.ts","/examples/echo_server.ts","/examples/flags.ts","/examples/gist.ts","/examples/welcome.ts","/examples/xeval.ts"],"/examples/chat":["/examples/chat/server.ts"],"/flags":["/flags/mod.ts"],"/fmt":["/fmt/colors.ts","/fmt/printf.ts"],"/fs":["/fs/mod.ts"],"/hash":["/hash/mod.ts"],"/http":["/http/mod.ts"],"/io":["/io/mod.ts"],"/log":["/log/mod.ts"],"/mime":["/mime/mod.ts"],"/node":["/node/assert.ts","/node/assertion_error.ts","/node/async_hooks.ts","/node/buffer.ts","/node/child_process.ts","/node/cli.ts","/node/cluster.ts","/node/console.ts","/node/constants.ts","/node/crypto.ts","/node/dgram.ts","/node/dns.ts","/node/domain.ts","/node/events.ts","/node/fs.ts","/node/global.ts","/node/http.ts","/node/https.ts","/node/module.ts","/node/module_all.ts","/node/module_esm.ts","/node/net.ts","/node/os.ts","/node/path.ts","/node/perf_hooks.ts","/node/process.ts","/node/querystring.ts","/node/readline.ts","/node/stream.ts","/node/string_decoder.ts","/node/sys.ts","/node/timers.ts","/node/tls.ts","/node/tty.ts","/node/url.ts","/node/util.ts","/node/v8.ts","/node/vm.ts","/node/zlib.ts"],"/node/assert":["/node/assert/strict.ts"],"/node/fs":["/node/fs/promises.ts"],"/node/internal_binding":["/node/internal_binding/async_wrap.ts","/node/internal_binding/cares_wrap.ts","/node/internal_binding/connection_wrap.ts","/node/internal_binding/handle_wrap.ts","/node/internal_binding/node_file.ts","/node/internal_binding/node_options.ts","/node/internal_binding/pipe_wrap.ts","/node/internal_binding/stream_wrap.ts","/node/internal_binding/symbols.ts","/node/internal_binding/tcp_wrap.ts","/node/internal_binding/util.ts","/node/internal_binding/uv.ts"],"/node/path":["/node/path/posix.ts","/node/path/win32.ts"],"/node/stream":["/node/stream/promises.ts","/node/stream/web.ts"],"/node/timers":["/node/timers/promises.ts"],"/node/util":["/node/util/types.ts"],"/path":["/path/mod.ts"],"/permissions":["/permissions/mod.ts"],"/signal":["/signal/mod.ts"],"/streams":["/streams/mod.ts"],"/testing":["/testing/asserts.ts","/testing/bench.ts","/testing/bench_example.ts","/testing/chai_example.ts","/testing/fast_check_example.ts","/testing/sinon_example.ts"],"/textproto":["/textproto/mod.ts"],"/uuid":["/uuid/mod.ts"],"/wasi":["/wasi/snapshot_preview1.ts","/wasi/snapshot_preview1_test_runner.ts"],"/ws":["/ws/mod.ts"]},"entries":{"/version.ts":[{"kind":"variable","name":"VERSION","location":{"filename":"https://deno.land/std@0.113.0/version.ts","line":8,"col":0},"declarationKind":"export","jsDoc":{"doc":"Version of the Deno standard modules\n\nDeno std is versioned differently than Deno cli because it is still unstable;\nthe cli's API is stable. In the future when std becomes stable, likely we\nwill match versions with cli as we have in the past."},"variableDef":{"tsType":{"repr":"0.113.0","kind":"literal","literal":{"kind":"string","string":"0.113.0"}},"kind":"const"}}],"/archive/tar.ts":[{"kind":"interface","name":"TarData","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":243,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"fileName","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":244,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"fileNamePrefix","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":245,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"fileMode","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":246,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"uid","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":247,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"gid","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":248,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"fileSize","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":249,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"mtime","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":250,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"checksum","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":251,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"type","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":252,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"ustar","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":253,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"owner","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":254,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"group","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":255,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TarDataWithSource","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":258,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"TarData","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarData"}}],"methods":[],"properties":[{"name":"filePath","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":262,"col":2},"jsDoc":{"doc":"file to read"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"reader","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":266,"col":2},"jsDoc":{"doc":"buffer to read"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TarInfo","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":269,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"fileMode","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":270,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"mtime","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":271,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"uid","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":272,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"gid","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":273,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"owner","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":274,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"group","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":275,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"type","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":276,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TarOptions","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":279,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"TarInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarInfo"}}],"methods":[],"properties":[{"name":"filePath","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":283,"col":2},"jsDoc":{"doc":"append file"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"reader","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":288,"col":2},"jsDoc":{"doc":"append any arbitrary content"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}},"typeParams":[]},{"name":"contentSize","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":293,"col":2},"jsDoc":{"doc":"size of the content to be appended"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TarMeta","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":296,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"TarInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarInfo"}}],"methods":[],"properties":[{"name":"fileName","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":297,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"fileSize","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":298,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"Tar","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":307,"col":0},"declarationKind":"export","jsDoc":{"doc":"A class to create a tar archive"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":310,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"array","array":{"repr":"TarDataWithSource","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarDataWithSource"}}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"data","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":308,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Append a file to this tar archive","tags":[{"kind":"param","name":"fn","doc":"file name\ne.g., test.txt; use slash for directory separators"},{"kind":"param","name":"opts","doc":"options"}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"append","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"opts","optional":false,"tsType":{"repr":"TarOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarOptions"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":320,"col":2}},{"jsDoc":{"doc":"Get a Reader instance for this tar data"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getReader","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":422,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"Untar","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":531,"col":0},"declarationKind":"export","jsDoc":{"doc":"A class to extract a tar archive"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}}],"location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":536,"col":2}}],"properties":[{"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reader","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":532,"col":2}},{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"block","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":533,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"extract","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"TarEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarEntry"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":614,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[Symbol.asyncIterator]","kind":"method","functionDef":{"params":[],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"TarEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TarEntry"}}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":631,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"MultiReader","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":29,"col":0},"declarationKind":"private","jsDoc":{"doc":"Ported and modified from: https://github.com/beatgammit/tar-js and\nlicensed as:\n\n(The MIT License)\n\nCopyright (c) 2011 T. Jameson Little\nCopyright (c) 2019 Jun Kato\nCopyright (c) 2018-2021 the Deno authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."},"importDef":{"src":"https://deno.land/std@0.113.0/io/readers.ts","imported":"MultiReader"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"PartialReadError","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"PartialReadError"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"readAll","location":{"filename":"https://deno.land/std@0.113.0/archive/tar.ts","line":32,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readAll"}}],"/async/mod.ts":[{"kind":"function","name":"pooledMap","location":{"filename":"https://deno.land/std@0.113.0/async/pool.ts","line":17,"col":0},"declarationKind":"export","jsDoc":{"doc":"pooledMap transforms values from an (async) iterable into another async\niterable. The transforms are done concurrently, with a max concurrency\ndefined by the poolLimit.\n\nIf an error is thrown from `iterableFn`, no new transformations will begin.\nAll currently executing transformations are allowed to finish and still\nyielded on success. After that, the rejections among them are gathered and\nthrown by the iterator in an `AggregateError`.\n","tags":[{"kind":"param","name":"poolLimit","doc":"The maximum count of items being processed concurrently."},{"kind":"param","name":"array","doc":"The input array for mapping."},{"kind":"param","name":"iteratorFn","doc":"The function to call for every item of the array."}]},"functionDef":{"params":[{"kind":"identifier","name":"poolLimit","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Iterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Iterable"}},{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterable"}}]}},{"kind":"identifier","name":"iteratorFn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"R","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"R"}}],"typeName":"Promise"}},"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"R","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"R"}}],"typeName":"AsyncIterableIterator"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"R"}]}},{"kind":"class","name":"DeadlineError","location":{"filename":"https://deno.land/std@0.113.0/async/deadline.ts","line":3,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/async/deadline.ts","line":4,"col":2}}],"properties":[],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"deadline","location":{"filename":"https://deno.land/std@0.113.0/async/deadline.ts","line":13,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a promise which will be rejected with DeadlineError when a given delay is exceeded."},"functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Promise"}}},{"kind":"identifier","name":"delay","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"import","name":"deferred","location":{"filename":"https://deno.land/std@0.113.0/async/deadline.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"deferred"}},{"kind":"interface","name":"DebouncedFunction","location":{"filename":"https://deno.land/std@0.113.0/async/debounce.ts","line":8,"col":0},"declarationKind":"export","jsDoc":{"doc":"A debounced function that will be delayed by a given `wait`\ntime in milliseconds. If the method is called again before\nthe timeout expires, the previous call will be aborted."},"interfaceDef":{"extends":[],"methods":[{"name":"clear","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/async/debounce.ts","line":11,"col":2},"jsDoc":{"doc":"Clears the debounce timeout and omits calling the debounced function."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]},{"name":"flush","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/async/debounce.ts","line":13,"col":2},"jsDoc":{"doc":"Clears the debounce timeout and calls the debounced function immediately."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[{"name":"pending","location":{"filename":"https://deno.land/std@0.113.0/async/debounce.ts","line":15,"col":2},"jsDoc":{"doc":"Returns a boolean wether a debounce call is pending or not."},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[{"location":{"filename":"https://deno.land/std@0.113.0/async/debounce.ts","line":9,"col":2},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"indexSignatures":[],"typeParams":[{"name":"T","constraint":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Array"}}}]}},{"kind":"function","name":"debounce","location":{"filename":"https://deno.land/std@0.113.0/async/debounce.ts","line":42,"col":0},"declarationKind":"export","jsDoc":{"doc":"Creates a debounced function that delays the given `func`\nby a given `wait` time in milliseconds. If the method is called\nagain before the timeout expires, the previous call will be\naborted.\n\n```\nimport { debounce } from \"./debounce.ts\";\n\nconst log = debounce(\n  (event: Deno.FsEvent) =>\n    console.log(\"[%s] %s\", event.kind, event.paths[0]),\n  200,\n);\n\nfor await (const event of Deno.watchFs(\"./\")) {\n  log(event);\n}\n```\n","tags":[{"kind":"param","name":"fn","doc":"The function to debounce."},{"kind":"param","name":"wait","doc":"The time in milliseconds to delay the function."}]},"functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"this","optional":false,"tsType":{"repr":"DebouncedFunction","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"DebouncedFunction"}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"kind":"identifier","name":"wait","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"DebouncedFunction","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"DebouncedFunction"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Array"}}}]}},{"kind":"class","name":"MuxAsyncIterator","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":14,"col":0},"declarationKind":"export","jsDoc":{"doc":"The MuxAsyncIterator class multiplexes multiple async iterators into a\nsingle stream. It currently makes an assumption:\n- The final result (the value returned and not yielded from the iterator)\n  does not matter; if there is any, it is discarded."},"classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"iteratorCount","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":15,"col":2}},{"tsType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"TaggedYieldedValue","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"TaggedYieldedValue"}}],"typeName":"Array"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"yields","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":16,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"throws","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":18,"col":2}},{"tsType":{"repr":"Deferred","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Deferred"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"signal","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":19,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"add","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"iterable","optional":false,"tsType":{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterable"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":21,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"callIteratorNext","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"iterator","optional":false,"tsType":{"repr":"AsyncIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterator"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":26,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"iterate","kind":"method","functionDef":{"params":[],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":42,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[Symbol.asyncIterator]","kind":"method","functionDef":{"params":[],"returnType":{"repr":"AsyncIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterator"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":66,"col":2}}],"extends":null,"implements":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterable"}}],"typeParams":[{"name":"T"}],"superTypeParams":[]}},{"kind":"import","name":"Deferred","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"Deferred"}},{"kind":"import","name":"deferred","location":{"filename":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"deferred"}},{"kind":"interface","name":"Deferred","location":{"filename":"https://deno.land/std@0.113.0/async/deferred.ts","line":7,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Promise"}}],"methods":[{"name":"resolve","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/async/deferred.ts","line":9,"col":2},"optional":false,"params":[{"kind":"identifier","name":"value","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"PromiseLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"PromiseLike"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]},{"name":"reject","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/async/deferred.ts","line":11,"col":2},"optional":false,"params":[{"kind":"identifier","name":"reason","optional":true,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[{"name":"state","location":{"filename":"https://deno.land/std@0.113.0/async/deferred.ts","line":8,"col":2},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"pending","kind":"literal","literal":{"kind":"string","string":"pending"}},{"repr":"fulfilled","kind":"literal","literal":{"kind":"string","string":"fulfilled"}},{"repr":"rejected","kind":"literal","literal":{"kind":"string","string":"rejected"}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"T"}]}},{"kind":"function","name":"deferred","location":{"filename":"https://deno.land/std@0.113.0/async/deferred.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Creates a Promise with the `reject` and `resolve` functions\nplaced as methods on the promise object itself. It allows you to do:\n\n```ts\n    import { deferred } from \"./deferred.ts\";\n\n    const p = deferred<number>();\n    // ...\n    p.resolve(42);\n```"},"functionDef":{"params":[],"returnType":{"repr":"Deferred","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Deferred"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"tee","location":{"filename":"https://deno.land/std@0.113.0/async/tee.ts","line":77,"col":0},"declarationKind":"export","jsDoc":{"doc":"Branches the given async iterable into the n branches.\n\nExample:\n\n```ts\n    import { tee } from \"./tee.ts\";\n\n    const gen = async function* gen() {\n      yield 1;\n      yield 2;\n      yield 3;\n    }\n\n    const [branch1, branch2] = tee(gen());\n\n    (async () => {\n      for await (const n of branch1) {\n        console.log(n); // => 1, 2, 3\n      }\n    })();\n\n    (async () => {\n      for await (const n of branch2) {\n        console.log(n); // => 1, 2, 3\n      }\n    })();\n```"},"functionDef":{"params":[{"kind":"identifier","name":"iterable","optional":false,"tsType":{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterable"}}},{"kind":"assign","left":{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"N","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"N"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Tuple","kind":"typeRef","typeRef":{"typeParams":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterable"}},{"repr":"N","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"N"}}],"typeName":"Tuple"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"N","constraint":{"repr":"number","kind":"keyword","keyword":"number"},"default":{"repr":"2","kind":"literal","literal":{"kind":"number","number":2}}}]}},{"kind":"interface","name":"DelayOptions","location":{"filename":"https://deno.land/std@0.113.0/async/delay.ts","line":3,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"signal","location":{"filename":"https://deno.land/std@0.113.0/async/delay.ts","line":4,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"AbortSignal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AbortSignal"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"delay","location":{"filename":"https://deno.land/std@0.113.0/async/delay.ts","line":8,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"ms","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"DelayOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DelayOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/bytes/mod.ts":[{"kind":"function","name":"equals","location":{"filename":"https://deno.land/std@0.113.0/bytes/equals.ts","line":38,"col":0},"declarationKind":"export","jsDoc":{"doc":"Check whether binary arrays are equal to each other.","tags":[{"kind":"param","name":"a","doc":"first array to check equality"},{"kind":"param","name":"b","doc":"second array to check equality"}]},"functionDef":{"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"indexOf","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":5,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the index of the first occurrence of the pattern array in the source\narray, or -1 if it is not present."},"functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"pattern","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"fromIndex","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lastIndexOf","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":41,"col":0},"declarationKind":"export","jsDoc":{"doc":"Find last index of binary pattern from source. If not found, then return -1.","tags":[{"kind":"param","name":"source","doc":"source array"},{"kind":"param","name":"pat","doc":"pattern to find in source array"},{"kind":"param","name":"start","doc":"the index to start looking in the source"}]},"functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"pat","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"start","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"startsWith","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":76,"col":0},"declarationKind":"export","jsDoc":{"doc":"Check whether binary array starts with prefix.","tags":[{"kind":"param","name":"source","doc":"source array"},{"kind":"param","name":"prefix","doc":"prefix array to check in source"}]},"functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"prefix","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"endsWith","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":87,"col":0},"declarationKind":"export","jsDoc":{"doc":"Check whether binary array ends with suffix.","tags":[{"kind":"param","name":"source","doc":"source array"},{"kind":"param","name":"suffix","doc":"suffix array to check in source"}]},"functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"suffix","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"repeat","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":103,"col":0},"declarationKind":"export","jsDoc":{"doc":"Repeat bytes. returns a new byte slice consisting of `count` copies of `b`.","tags":[{"kind":"param","name":"origin","doc":"The origin bytes"},{"kind":"param","name":"count","doc":"The count you want to repeat."},{"kind":"unsupported","value":"@throws `RangeError` When count is negative"}]},"functionDef":{"params":[{"kind":"identifier","name":"origin","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"count","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"concat","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":134,"col":0},"declarationKind":"export","jsDoc":{"doc":"Concatenate multiple binary arrays and return new one.","tags":[{"kind":"param","name":"buf","doc":"binary arrays to concatenate"}]},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"buf","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"includes","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":151,"col":0},"declarationKind":"export","jsDoc":{"doc":"Determines whether the source array includes the pattern array."},"functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"pattern","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"fromIndex","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":168,"col":0},"declarationKind":"export","jsDoc":{"doc":"Copy bytes from one Uint8Array to another.  Bytes from `src` which don't fit\ninto `dst` will not be copied.\n","tags":[{"kind":"param","name":"src","doc":"Source byte array"},{"kind":"param","name":"dst","doc":"Destination byte array"},{"kind":"param","name":"off","doc":"Offset into `dst` at which to begin writing values from `src`."},{"kind":"return","doc":"number of bytes copied"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"dst","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"off","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"contains","location":{"filename":"https://deno.land/std@0.113.0/bytes/mod.ts","line":151,"col":0},"declarationKind":"export","jsDoc":{"doc":"Determines whether the source array includes the pattern array."},"functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"pattern","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"fromIndex","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/collections/mod.ts":[{"kind":"function","name":"maxBy","location":{"filename":"https://deno.land/std@0.113.0/collections/max_by.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the first element that is the largest value of the given function or undefined if there are no elements.\n\nExample:\n\n```ts\nimport { maxBy } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst people = [\n    { name: 'Anna', age: 34 },\n    { name: 'Kim', age: 42 },\n    { name: 'John', age: 23 },\n];\n\nconst personWithMaxAge = maxBy(people, i => i.age);\n\nassertEquals(personWithMaxAge, { name: 'Kim', age: 42 });\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxBy","location":{"filename":"https://deno.land/std@0.113.0/collections/max_by.ts","line":28,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxBy","location":{"filename":"https://deno.land/std@0.113.0/collections/max_by.ts","line":32,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxBy","location":{"filename":"https://deno.land/std@0.113.0/collections/max_by.ts","line":36,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxBy","location":{"filename":"https://deno.land/std@0.113.0/collections/max_by.ts","line":40,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}]}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"chunk","location":{"filename":"https://deno.land/std@0.113.0/collections/chunk.ts","line":23,"col":0},"declarationKind":"export","jsDoc":{"doc":"Splits the given array into chunks of the given size and returns them\n\nExample:\n\n```ts\nimport { chunk } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst words = [ 'lorem', 'ipsum', 'dolor', 'sit', 'amet', 'consetetur', 'sadipscing' ]\nconst chunks = chunk(words, 3)\n\nassertEquals(chunks, [\n    [ 'lorem', 'ipsum', 'dolor' ],\n    [ 'sit', 'amet', 'consetetur' ],\n    [ 'sadipscing' ],\n])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"array","array":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minOf","location":{"filename":"https://deno.land/std@0.113.0/collections/min_of.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given selector to all elements of the given collection and\nreturns the min value of all elements. If an empty array is provided the\nfunction will return undefined\n\nExample:\n\n```ts\nimport { minOf } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\"\n\nconst inventory = [\n     { name: \"mustard\", count: 2 },\n     { name: \"soy\", count: 4 },\n     { name: \"tomato\", count: 32 },\n];\nconst minCount = minOf(inventory, (i) => i.count);\n\nassertEquals(minCount, 2);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minOf","location":{"filename":"https://deno.land/std@0.113.0/collections/min_of.ts","line":30,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"bigint","kind":"keyword","keyword":"bigint"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minOf","location":{"filename":"https://deno.land/std@0.113.0/collections/min_of.ts","line":35,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"ReturnType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}],"typeName":"ReturnType"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"S","constraint":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}]}}]}},{"kind":"function","name":"groupBy","location":{"filename":"https://deno.land/std@0.113.0/collections/group_by.ts","line":31,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given selector to each element in the given array, returning a Record containing the results as keys\nand all values that produced that key as values.\n\nExample:\n\n```ts\nimport { groupBy } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\ntype Person = {\n  name: string;\n};\n\nconst people: Person[] = [\n    { name: 'Anna' },\n    { name: 'Arnold' },\n    { name: 'Kim' },\n];\nconst peopleByFirstLetter = groupBy(people, it => it.name.charAt(0))\n\nassertEquals(peopleByFirstLetter, {\n    'A': [ { name: 'Anna' }, { name: 'Arnold' } ],\n    'K': [ { name: 'Kim' } ],\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"typeAlias","name":"JoinToStringOptions","location":{"filename":"https://deno.land/std@0.113.0/collections/join_to_string.ts","line":6,"col":0},"declarationKind":"export","jsDoc":{"doc":"Options for joinToString"},"typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"separator","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"prefix","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"suffix","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"limit","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"truncated","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"function","name":"joinToString","location":{"filename":"https://deno.land/std@0.113.0/collections/join_to_string.ts","line":43,"col":0},"declarationKind":"export","jsDoc":{"doc":"Transforms the elements in the given array to strings using the given selector.\nJoins the produced strings into one using the given `separator` and applying the given `prefix` and `suffix` to the whole string afterwards.\nIf the array could be huge, you can specify a non-negative value of `limit`, in which case only the first `limit` elements will be appended, followed by the `truncated` string.\nReturns the resulting string.\n\nExample:\n\n```ts\nimport { joinToString } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst users = [\n  { name: \"Kim\" },\n  { name: \"Anna\" },\n  { name: \"Tim\" },\n];\n\n const message = joinToString(users, (it) => it.name, {\n  suffix: \" are winners\",\n  prefix: \"result: \",\n  separator: \" and \",\n  limit: 1,\n  truncated: \"others\",\n});\n\nassertEquals(message, \"result: Kim and others are winners\");\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"separator","value":"[UNSUPPORTED]"},{"kind":"assign","key":"prefix","value":"[UNSUPPORTED]"},{"kind":"assign","key":"suffix","value":"[UNSUPPORTED]"},{"kind":"assign","key":"limit","value":"[UNSUPPORTED]"},{"kind":"assign","key":"truncated","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"JoinToStringOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"JoinToStringOptions"}}],"typeName":"Readonly"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"partition","location":{"filename":"https://deno.land/std@0.113.0/collections/partition.ts","line":21,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a tuple of two arrays with the first one containing all elements in the given array that match the given predicate\nand the second one containing all that do not\n\nExample:\n\n```ts\nimport { partition } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 5, 6, 7, 8, 9 ]\nconst [ even, odd ] = partition(numbers, it => it % 2 == 0)\n\nassertEquals(even, [ 6, 8 ])\nassertEquals(odd, [ 5, 7, 9 ])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"filterKeys","location":{"filename":"https://deno.land/std@0.113.0/collections/filter_keys.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a new record with all entries of the given record except the ones that have a key that does not match the given predicate\n\nExample:\n\n```ts\nimport { filterKeys } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst menu = {\n    'Salad': 11,\n    'Soup': 8,\n    'Pasta': 13,\n}\nconst menuWithoutSalad = filterKeys(menu, it => it !== 'Salad')\n\nassertEquals(menuWithoutSalad, {\n    'Soup': 8,\n    'Pasta': 13,\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"zip","location":{"filename":"https://deno.land/std@0.113.0/collections/zip.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Builds 2-tuples of elements from the given array with matching indices, stopping when the smaller array's end is reached\n\nExample:\n\n```ts\nimport { zip } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 1, 2, 3, 4 ]\nconst letters = [ 'a', 'b', 'c', 'd' ]\nconst pairs = zip(numbers, letters)\n\nassertEquals(pairs, [\n    [ 1, 'a' ],\n    [ 2, 'b' ],\n    [ 3, 'c' ],\n    [ 4, 'd' ],\n])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"withArray","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}]}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"U"}]}},{"kind":"function","name":"takeWhile","location":{"filename":"https://deno.land/std@0.113.0/collections/take_while.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all elements in the given collection until the first element that does not match the given predicate.\n\nExample:\n```ts\nimport { takeWhile } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst arr = [1, 2, 3, 4, 5, 6];\n\nassertEquals(\n  takeWhile(arr, (i) => i !== 4),\n  [1, 2, 3],\n);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"sample","location":{"filename":"https://deno.land/std@0.113.0/collections/sample.ts","line":21,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a random element from the given array.\n\nExample:\n\n```ts\nimport { sample } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assert } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [1, 2, 3, 4];\nconst random = sample(numbers);\n\nassert(numbers.includes(random as number));\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"import","name":"randomInteger","location":{"filename":"https://deno.land/std@0.113.0/collections/sample.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/collections/_utils.ts","imported":"randomInteger"}},{"kind":"function","name":"mapEntries","location":{"filename":"https://deno.land/std@0.113.0/collections/map_entries.ts","line":30,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given transformer to all entries in the given record and returns a new record containing the results\n\nExample:\n\n```ts\nimport { mapEntries } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst usersById = {\n    'a2e': { name: 'Kim', age: 22 },\n    'dfe': { name: 'Anna', age: 31 },\n    '34b': { name: 'Tim', age: 58 },\n} as const;\n\nconst agesByNames = mapEntries(usersById,\n    ([ id, { name, age } ]) => [ name, age ],\n)\n\nassertEquals(agesByNames, {\n    'Kim': 22,\n    'Anna': 31,\n    'Tim': 58,\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"transformer","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}]},"params":[{"kind":"identifier","name":"entry","optional":false,"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}]}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"O"}]}},{"kind":"function","name":"sumOf","location":{"filename":"https://deno.land/std@0.113.0/collections/sum_of.ts","line":23,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given selector to all elements in the given collection and calculates the sum of the results\n\nExample:\n\n```ts\nimport { sumOf } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\"\n\nconst people = [\n    { name: 'Anna', age: 34 },\n    { name: 'Kim', age: 42 },\n    { name: 'John', age: 23 },\n]\nconst totalAge = sumOf(people, i => i.age)\n\nassertEquals(totalAge, 99)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"filterValues","location":{"filename":"https://deno.land/std@0.113.0/collections/filter_values.ts","line":28,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a new record with all entries of the given record except the ones that have a value that does not match the given predicate\n\nExample:\n\n```ts\nimport { filterValues } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\ntype Person = { age: number };\n\nconst people: Record<string, Person> = {\n    'Arnold': { age: 37 },\n    'Sarah': { age: 7 },\n    'Kim': { age: 23 },\n};\nconst adults = filterValues(people, it => it.age >= 18)\n\nassertEquals(adults, {\n    'Arnold': { age: 37 },\n    'Kim': { age: 23 },\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"distinctBy","location":{"filename":"https://deno.land/std@0.113.0/collections/distinct_by.ts","line":19,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all elements in the given array that produce a distinct value using the given selector, preserving order by first occurrence\n\nExample:\n\n```ts\nimport { distinctBy } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst names = [ 'Anna', 'Kim', 'Arnold', 'Kate' ]\nconst exampleNamesByFirstLetter = distinctBy(names, it => it.charAt(0))\n\nassertEquals(exampleNamesByFirstLetter, [ 'Anna', 'Kim' ])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"D","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"D"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"D"}]}},{"kind":"function","name":"runningReduce","location":{"filename":"https://deno.land/std@0.113.0/collections/running_reduce.ts","line":21,"col":0},"declarationKind":"export","jsDoc":{"doc":"Calls the given reducer on each element of the given collection, passing it's\nresult as the accumulator to the next respective call, starting with the given\ninitialValue. Returns all intermediate accumulator results.\n\nExample:\n\n```ts\nimport { runningReduce } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [1, 2, 3, 4, 5];\nconst sumSteps = runningReduce(numbers, (sum, current) => sum + current, 0);\n\nassertEquals(sumSteps, [1, 3, 6, 10, 15]);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"reducer","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}},"params":[{"kind":"identifier","name":"accumulator","optional":false,"tsType":{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}},{"kind":"identifier","name":"current","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"currentIndex","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}}},{"kind":"identifier","name":"initialValue","optional":false,"tsType":{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"O"}]}},{"kind":"function","name":"distinct","location":{"filename":"https://deno.land/std@0.113.0/collections/distinct.ts","line":19,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all distinct elements in the given array, preserving order by first occurrence\n\nExample:\n\n```ts\nimport { distinct } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 3, 2, 5, 2, 5 ]\nconst distinctNumbers = distinct(numbers)\n\nassertEquals(distinctNumbers, [ 3, 2, 5 ])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"deepMerge","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":30,"col":0},"declarationKind":"export","jsDoc":{"doc":"Merges the two given Records, recursively merging any nested Records with\nthe second collection overriding the first in case of conflict\n\nFor arrays, maps and sets, a merging strategy can be specified to either\n\"replace\" values, or \"merge\" them instead.\nUse \"includeNonEnumerable\" option to include non enumerable properties too.\n\nExample:\n\n```ts\nimport { deepMerge } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst a = {foo: true}\nconst b = {foo: {bar: true}}\n\nassertEquals(deepMerge(a, b), {foo: {bar: true}});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Partial","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Readonly"}}],"typeName":"Partial"}}},{"kind":"identifier","name":"other","optional":false,"tsType":{"repr":"Partial","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Readonly"}}],"typeName":"Partial"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"DeepMergeOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DeepMergeOptions"}}],"typeName":"Readonly"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}]}},{"kind":"function","name":"deepMerge","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":38,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"other","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Options"}}],"typeName":"Readonly"}}}],"returnType":{"repr":"DeepMerge","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}},{"repr":"Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Options"}}],"typeName":"DeepMerge"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}},{"name":"U","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}},{"name":"Options","constraint":{"repr":"DeepMergeOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DeepMergeOptions"}}}]}},{"kind":"function","name":"deepMerge","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":48,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"other","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Options"}}],"typeName":"Readonly"}}}],"returnType":{"repr":"DeepMerge","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}},{"repr":"Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Options"}}],"typeName":"DeepMerge"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}},{"name":"U","constraint":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}},{"name":"Options","constraint":{"repr":"DeepMergeOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DeepMergeOptions"}},"default":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"arrays","params":[],"computed":false,"optional":false,"tsType":{"repr":"merge","kind":"literal","literal":{"kind":"string","string":"merge"}},"typeParams":[]},{"name":"sets","params":[],"computed":false,"optional":false,"tsType":{"repr":"merge","kind":"literal","literal":{"kind":"string","string":"merge"}},"typeParams":[]},{"name":"maps","params":[],"computed":false,"optional":false,"tsType":{"repr":"merge","kind":"literal","literal":{"kind":"string","string":"merge"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}]}},{"kind":"typeAlias","name":"MergingStrategy","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":180,"col":0},"declarationKind":"export","jsDoc":{"doc":"Merging strategy"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"replace","kind":"literal","literal":{"kind":"string","string":"replace"}},{"repr":"merge","kind":"literal","literal":{"kind":"string","string":"merge"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"DeepMergeOptions","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":183,"col":0},"declarationKind":"export","jsDoc":{"doc":"Deep merge options"},"typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"arrays","params":[],"computed":false,"optional":true,"tsType":{"repr":"MergingStrategy","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MergingStrategy"}},"typeParams":[]},{"name":"maps","params":[],"computed":false,"optional":true,"tsType":{"repr":"MergingStrategy","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MergingStrategy"}},"typeParams":[]},{"name":"sets","params":[],"computed":false,"optional":true,"tsType":{"repr":"MergingStrategy","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MergingStrategy"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"typeAlias","name":"DeepMerge","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":369,"col":0},"declarationKind":"export","jsDoc":{"doc":"Merge deeply two objects"},"typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}]},"extendsType":{"repr":"","kind":"tuple","tuple":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}]},"trueType":{"repr":"Merge","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}},{"repr":"Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Options"}}],"typeName":"Merge"}},"falseType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}]}}},"typeParams":[{"name":"T"},{"name":"U"},{"name":"Options","default":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"MergingStrategy","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MergingStrategy"}}],"typeName":"Record"}}}]}},{"kind":"import","name":"filterInPlace","location":{"filename":"https://deno.land/std@0.113.0/collections/deep_merge.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/collections/_utils.ts","imported":"filterInPlace"}},{"kind":"function","name":"includesValue","location":{"filename":"https://deno.land/std@0.113.0/collections/includes_value.ts","line":22,"col":0},"declarationKind":"export","jsDoc":{"doc":"If the given value is part of the given object it returns true, otherwise it\nreturns false.\nDoesn't work with non-primitive values: includesValue({x: {}}, {}) returns false.\n\nExample:\n```ts\nimport { includesValue } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst input = {\n  first: 33,\n  second: 34,\n};\n\nassertEquals(includesValue(input, 34), true);"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"takeLastWhile","location":{"filename":"https://deno.land/std@0.113.0/collections/take_last_while.ts","line":21,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all elements in the given array after the last element that does not\nmatch the given predicate.\n\nExample:\n```ts\nimport { takeLastWhile } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst arr = [1, 2, 3, 4, 5, 6];\n\nassertEquals(\n  takeLastWhile(arr, (i) => i > 4),\n  [5, 6],\n);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"associateWith","location":{"filename":"https://deno.land/std@0.113.0/collections/associate_with.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Builds a new Record using the given array as keys and choosing a value for each\nkey using the given selector. If any of two pairs would have the same value\nthe latest on will be used (overriding the ones before it).\n\nExample:\n\n```ts\nimport { associateWith } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst names = [ 'Kim', 'Lara', 'Jonathan' ]\nconst namesToLength = associateWith(names, it => it.length)\n\nassertEquals(namesToLength, {\n  'Kim': 3,\n  'Lara': 4,\n  'Jonathan': 8,\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"reduceGroups","location":{"filename":"https://deno.land/std@0.113.0/collections/reduce_groups.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given reducer to each group in the given Grouping, returning the results together with the respective group keys\n\n```ts\nimport { reduceGroups } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst votes = {\n    'Woody': [ 2, 3, 1, 4 ],\n    'Buzz': [ 5, 9 ],\n}\nconst totalVotes = reduceGroups(votes, (sum, it) => sum + it, 0)\n\nassertEquals(totalVotes, {\n    'Woody': 10,\n    'Buzz': 14,\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Array"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"reducer","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"A","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"A"}},"params":[{"kind":"identifier","name":"accumulator","optional":false,"tsType":{"repr":"A","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"A"}}},{"kind":"identifier","name":"current","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"kind":"identifier","name":"initialValue","optional":false,"tsType":{"repr":"A","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"A"}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"A","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"A"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"A"}]}},{"kind":"import","name":"mapValues","location":{"filename":"https://deno.land/std@0.113.0/collections/reduce_groups.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/collections/map_values.ts","imported":"mapValues"}},{"kind":"function","name":"firstNotNullishOf","location":{"filename":"https://deno.land/std@0.113.0/collections/first_not_nullish_of.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given selector to elements in the given array until a value is produced that is neither `null` nor `undefined` and returns that value\nReturns `undefined` if no such value is produced\n\nExample:\n\n```ts\nimport { firstNotNullishOf } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst tables = [\n    { number: 11, order: null },\n    { number: 12, order: 'Soup' },\n    { number: 13, order: 'Salad' },\n]\nconst nextOrder = firstNotNullishOf(tables, it => it.order)\n\nassertEquals(nextOrder, 'Soup')\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"},{"repr":"null","kind":"keyword","keyword":"null"}]},"params":[{"kind":"identifier","name":"item","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"NonNullable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}],"typeName":"NonNullable"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"O"}]}},{"kind":"function","name":"mapKeys","location":{"filename":"https://deno.land/std@0.113.0/collections/map_keys.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given transformer to all keys in the given record's entries and returns a new record containing the\ntransformed entries.\n\nIf the transformed entries contain the same key multiple times, only the last one will appear in the returned record.\n\nExample:\n\n```ts\nimport { mapKeys } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst counts = { a: 5, b: 3, c: 8 }\n\nassertEquals(mapKeys(counts, it => it.toUpperCase()), {\n    A: 5,\n    B: 3,\n    C: 8,\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"transformer","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"mapNotNullish","location":{"filename":"https://deno.land/std@0.113.0/collections/map_not_nullish.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a new array, containing all elements in the given array transformed using the given transformer, except the ones\nthat were transformed to `null` or `undefined`\n\nExample:\n\n```ts\nimport { mapNotNullish } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst people = [\n    { middleName: null },\n    { middleName: 'William' },\n    { middleName: undefined },\n    { middleName: 'Martha' },\n]\nconst foundMiddleNames = mapNotNullish(people, it => it.middleName)\n\nassertEquals(foundMiddleNames, [ 'William', 'Martha' ])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"transformer","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"NonNullable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}],"typeName":"NonNullable"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"O"}]}},{"kind":"function","name":"dropWhile","location":{"filename":"https://deno.land/std@0.113.0/collections/drop_while.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a new array that drops all elements in the given collection until the\nfirst element that does not match the given predicate\n\nExample:\n\n```ts\nimport { dropWhile } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 3, 2, 5, 2, 5 ]\nconst dropWhileNumbers = dropWhile(numbers, i => i !== 2)\n\nassertEquals(dropWhileNumbers, [2, 5, 2, 5 ])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxOf","location":{"filename":"https://deno.land/std@0.113.0/collections/max_of.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given selector to all elements of the given collection and\nreturns the max value of all elements. If an empty array is provided the\nfunction will return undefined\n\nExample:\n\n```ts\nimport { maxOf } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\"\n\nconst inventory = [\n     { name: \"mustard\", count: 2 },\n     { name: \"soy\", count: 4 },\n     { name: \"tomato\", count: 32 },\n];\nconst maxCount = maxOf(inventory, (i) => i.count);\n\nassertEquals(maxCount, 32);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxOf","location":{"filename":"https://deno.land/std@0.113.0/collections/max_of.ts","line":30,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"bigint","kind":"keyword","keyword":"bigint"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxOf","location":{"filename":"https://deno.land/std@0.113.0/collections/max_of.ts","line":35,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"ReturnType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}],"typeName":"ReturnType"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"S","constraint":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}]}}]}},{"kind":"function","name":"findLast","location":{"filename":"https://deno.land/std@0.113.0/collections/find_last.ts","line":19,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the last element in the given array matching the given predicate\n\nExample:\n\n```ts\nimport { findLast } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 4, 2, 7 ]\nconst lastEvenNumber = findLast(numbers, it => it % 2 === 0)\n\nassertEquals(lastEvenNumber, 2)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"slidingWindows","location":{"filename":"https://deno.land/std@0.113.0/collections/sliding_windows.ts","line":45,"col":0},"declarationKind":"export","jsDoc":{"doc":"Generates sliding views of the given array of the given size and returns a new\narray containing all of them.\n\nIf step is set, each window will start that many elements after the last\nwindow's start. (Default: 1)\n\nIf partial is set, windows will be generated for the last elements of the\ncollection, resulting in some undefined values if size is greater than 1.\n(Default: false)\n\nExample:\n\n```ts\nimport { slidingWindows } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\nconst numbers = [1, 2, 3, 4, 5];\n\nconst windows = slidingWindows(numbers, 3);\nassertEquals(windows, [\n  [1, 2, 3],\n  [2, 3, 4],\n  [3, 4, 5],\n]);\n\nconst windowsWithStep = slidingWindows(numbers, 3, { step: 2 });\nassertEquals(windowsWithStep, [\n  [1, 2, 3],\n  [3, 4, 5],\n]);\n\nconst windowsWithPartial = slidingWindows(numbers, 3, { partial: true });\nassertEquals(windowsWithPartial, [\n  [1, 2, 3],\n  [2, 3, 4],\n  [3, 4, 5],\n  [4, 5],\n  [5],\n]);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"step","value":"[UNSUPPORTED]"},{"kind":"assign","key":"partial","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"step","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"partial","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"array","array":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"filterEntries","location":{"filename":"https://deno.land/std@0.113.0/collections/filter_entries.ts","line":27,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a new record with all entries of the given record except the ones that do not match the given predicate\n\nExample:\n\n```ts\nimport { filterEntries } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst menu = {\n    'Salad': 11,\n    'Soup': 8,\n    'Pasta': 13,\n} as const;\nconst myOptions = filterEntries(menu,\n    ([ item, price ]) => item !== 'Pasta' && price < 10,\n)\n\nassertEquals(myOptions, {\n    'Soup': 8,\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"entry","optional":false,"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}]}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"permutations","location":{"filename":"https://deno.land/std@0.113.0/collections/permutations.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"Builds all possible orders of all elements in the given array\nIgnores equality of elements, meaning this will always return the same\nnumber of permutations for a given length of input.\n\nExample:\n\n```ts\nimport { permutations } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 1, 2 ]\nconst windows = permutations(numbers)\n\nassertEquals(windows, [\n    [ 1, 2 ],\n    [ 2, 1 ],\n])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"inputArray","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minWith","location":{"filename":"https://deno.land/std@0.113.0/collections/min_with.ts","line":19,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the first element having the smallest value according to the provided comparator or undefined if there are no elements\n\nExample:\n\n```ts\nimport { minWith } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst people = [\"Kim\", \"Anna\", \"John\"];\nconst smallestName = minWith(people, (a, b) => a.length - b.length);\n\nassertEquals(smallestName, \"Kim\");\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"comparator","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"withoutAll","location":{"filename":"https://deno.land/std@0.113.0/collections/without_all.ts","line":18,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns an array excluding all given values.\n\nExample:\n\n```ts\nimport { withoutAll } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst withoutList = withoutAll([2, 1, 2, 3], [1, 2]);\n\nassertEquals(withoutList, [3]);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"values","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"dropLastWhile","location":{"filename":"https://deno.land/std@0.113.0/collections/drop_last_while.ts","line":23,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a new array that drops all elements in the given collection until the\nlast element that does not match the given predicate\n\nExample:\n```ts\nimport { dropLastWhile } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [22, 30, 44];\n\nconst notFortyFour = dropLastWhile(numbers, i => i != 44);\n\nassertEquals(\n  notFortyFour,\n  [22, 30]\n);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"maxWith","location":{"filename":"https://deno.land/std@0.113.0/collections/max_with.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the first element having the largest value according to the provided\ncomparator or undefined if there are no elements.\n\nThe comparator is expected to work exactly like one passed to `Array.sort`, which means\nthat `comparator(a, b)` should return a negative number if `a < b`, a positive number if `a > b`\nand `0` if `a == b`.\n\nExample:\n\n```ts\nimport { maxWith } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst people = [\"Kim\", \"Anna\", \"John\", \"Arthur\"];\nconst largestName = maxWith(people, (a, b) => a.length - b.length);\n\nassertEquals(largestName, \"Arthur\");\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"comparator","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"union","location":{"filename":"https://deno.land/std@0.113.0/collections/union.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all distinct elements that appear in any of the given arrays\n\nExample:\n\n```ts\nimport { union } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst soupIngredients = [ 'Pepper', 'Carrots', 'Leek' ]\nconst saladIngredients = [ 'Carrots', 'Radicchio', 'Pepper' ]\nconst shoppingList = union(soupIngredients, saladIngredients)\n\nassertEquals(shoppingList, [ 'Pepper', 'Carrots', 'Leek', 'Radicchio' ])\n```"},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"arrays","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"sortBy","location":{"filename":"https://deno.land/std@0.113.0/collections/sort_by.ts","line":27,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all elements in the given collection, sorted stably by their result using the given selector. The selector function is called only once for each element.\n\nExample:\n\n```ts\nimport { sortBy } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst people = [\n    { name: 'Anna', age: 34 },\n    { name: 'Kim', age: 42 },\n    { name: 'John', age: 23 },\n]\nconst sortedByAge = sortBy(people, it => it.age)\n\nassertEquals(sortedByAge, [\n    { name: 'John', age: 23 },\n    { name: 'Anna', age: 34 },\n    { name: 'Kim', age: 42 },\n])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"sortBy","location":{"filename":"https://deno.land/std@0.113.0/collections/sort_by.ts","line":31,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"sortBy","location":{"filename":"https://deno.land/std@0.113.0/collections/sort_by.ts","line":35,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"sortBy","location":{"filename":"https://deno.land/std@0.113.0/collections/sort_by.ts","line":39,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"sortBy","location":{"filename":"https://deno.land/std@0.113.0/collections/sort_by.ts","line":43,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}]}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"findLastIndex","location":{"filename":"https://deno.land/std@0.113.0/collections/find_last_index.ts","line":19,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the index of the last element in the given array matching the given predicate\n\nExample:\n\n```ts\nimport { findLastIndex } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst numbers = [ 4, 2, 7 ]\nconst lastIndexNumber = findLastIndex(numbers, it => it % 2 === 0)\n\nassertEquals(lastIndexNumber, 1)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"intersect","location":{"filename":"https://deno.land/std@0.113.0/collections/intersect.ts","line":22,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns all distinct elements that appear at least once in each of the given arrays\n\nExample:\n\n```ts\nimport { intersect } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst lisaInterests = [ 'Cooking', 'Music', 'Hiking' ]\nconst kimInterests = [ 'Music', 'Tennis', 'Cooking' ]\nconst commonInterests = intersect(lisaInterests, kimInterests)\n\nassertEquals(commonInterests, [ 'Cooking', 'Music' ])\n```"},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"arrays","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"import","name":"filterInPlace","location":{"filename":"https://deno.land/std@0.113.0/collections/intersect.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/collections/_utils.ts","imported":"filterInPlace"}},{"kind":"function","name":"associateBy","location":{"filename":"https://deno.land/std@0.113.0/collections/associate_by.ts","line":29,"col":0},"declarationKind":"export","jsDoc":{"doc":"Transforms the given array into a Record, extracting the key of each element using the given selector.\nIf the selector produces the same key for multiple elements, the latest one will be used (overriding the\nones before it).\n\nExample:\n\n```ts\nimport { associateBy } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\"\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst users = [\n    { id: 'a2e', userName: 'Anna' },\n    { id: '5f8', userName: 'Arnold' },\n    { id: 'd2c', userName: 'Kim' },\n]\nconst usersById = associateBy(users, it => it.id)\n\nassertEquals(usersById, {\n    'a2e': { id: 'a2e', userName: 'Anna' },\n    '5f8': { id: '5f8', userName: 'Arnold' },\n    'd2c': { id: 'd2c', userName: 'Kim' },\n})\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"mapValues","location":{"filename":"https://deno.land/std@0.113.0/collections/map_values.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"doc":"Applies the given transformer to all values in the given record and returns a new record containing the resulting keys\nassociated to the last value that produced them.\n\nExample:\n\n```ts\nimport { mapValues } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst usersById = {\n    'a5ec': { name: 'Mischa' },\n    'de4f': { name: 'Kim' },\n}\nconst namesById = mapValues(usersById, it => it.name)\n\nassertEquals(namesById, {\n    'a5ec': 'Mischa',\n    'de4f': 'Kim',\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"record","optional":false,"tsType":{"repr":"Readonly","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Record"}}],"typeName":"Readonly"}}},{"kind":"identifier","name":"transformer","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}},"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"O","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"O"}}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"O"}]}},{"kind":"function","name":"unzip","location":{"filename":"https://deno.land/std@0.113.0/collections/unzip.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"doc":"Builds two separate arrays from the given array of 2-tuples, with the first returned array holding all first\ntuple elements and the second one holding all the second elements\n\nExample:\n\n```ts\nimport { unzip } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst parents = [\n    [ 'Maria', 'Jeff' ],\n    [ 'Anna', 'Kim' ],\n    [ 'John', 'Leroy' ],\n] as [string, string][];\n\nconst [ moms, dads ] = unzip(parents)\n\nassertEquals(moms, [ 'Maria', 'Anna', 'John' ])\nassertEquals(moms, [ 'Jeff', 'Kim', 'Leroy' ])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"pairs","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}]}}}}}],"returnType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"repr":"","kind":"array","array":{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}}}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"U"}]}},{"kind":"function","name":"findSingle","location":{"filename":"https://deno.land/std@0.113.0/collections/find_single.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns an element if and only if that element is the only one matching the given condition. Returns `undefined` otherwise.\n\nExample:\n\n```ts\nimport { findSingle } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\";\n\nconst bookings = [\n    { month: 'January', active: false },\n    { month: 'March', active: false },\n    { month: 'June', active: true },\n];\nconst activeBooking = findSingle(bookings, (it) => it.active);\nconst inactiveBooking = findSingle(bookings, (it) => !it.active);\n\nassertEquals(activeBooking, { month: \"June\", active: true });\nassertEquals(inactiveBooking, undefined); // there are two applicable items\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"assign","left":{"kind":"identifier","name":"predicate","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minBy","location":{"filename":"https://deno.land/std@0.113.0/collections/min_by.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the first element that is the smallest value of the given function or undefined if there are no elements.\n\nExample:\n\n```ts\nimport { minBy } from \"https://deno.land/std@$STD_VERSION/collections/mod.ts\";\nimport { assertEquals } from \"https://deno.land/std@$STD_VERSION/testing/asserts.ts\"\n\nconst people = [\n    { name: 'Anna', age: 34 },\n    { name: 'Kim', age: 42 },\n    { name: 'John', age: 23 },\n];\n\nconst personWithMinAge = minBy(people, i => i.age);\n\nassertEquals(personWithMinAge, { name: 'John', age: 23 });\n```"},"functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minBy","location":{"filename":"https://deno.land/std@0.113.0/collections/min_by.ts","line":28,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minBy","location":{"filename":"https://deno.land/std@0.113.0/collections/min_by.ts","line":32,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minBy","location":{"filename":"https://deno.land/std@0.113.0/collections/min_by.ts","line":36,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"minBy","location":{"filename":"https://deno.land/std@0.113.0/collections/min_by.ts","line":40,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}}},{"kind":"identifier","name":"selector","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"params":[{"kind":"identifier","name":"el","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}}]}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}}],"/crypto/mod.ts":[{"kind":"variable","name":"crypto","location":{"filename":"https://deno.land/std@0.113.0/crypto/mod.ts","line":155,"col":0},"declarationKind":"export","jsDoc":{"doc":"An wrapper for WebCrypto adding support for additional non-standard\nalgorithms, but delegating to the runtime WebCrypto implementation whenever\npossible."},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"wasmCrypto","location":{"filename":"https://deno.land/std@0.113.0/crypto/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_wasm_crypto/mod.ts","imported":"crypto"}},{"kind":"import","name":"WasmDigestAlgorithm","location":{"filename":"https://deno.land/std@0.113.0/crypto/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_wasm_crypto/mod.ts","imported":"DigestAlgorithm"}},{"kind":"import","name":"wasmDigestAlgorithms","location":{"filename":"https://deno.land/std@0.113.0/crypto/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_wasm_crypto/mod.ts","imported":"digestAlgorithms"}}],"/datetime/mod.ts":[{"kind":"variable","name":"SECOND","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":5,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"1000","kind":"literal","literal":{"kind":"number","number":1000}},"kind":"const"}},{"kind":"variable","name":"MINUTE","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"HOUR","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"DAY","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":8,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"WEEK","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":9,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":28,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse date from string using format string","tags":[{"kind":"param","name":"dateString","doc":"Date string"},{"kind":"param","name":"format","doc":"Format string"},{"kind":"return","doc":"Parsed date"}]},"functionDef":{"params":[{"kind":"identifier","name":"dateString","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"formatString","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"format","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":41,"col":0},"declarationKind":"export","jsDoc":{"doc":"Format date using format string","tags":[{"kind":"param","name":"date","doc":"Date"},{"kind":"param","name":"format","doc":"Format string"},{"kind":"return","doc":"formatted date string"}]},"functionDef":{"params":[{"kind":"identifier","name":"date","optional":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}},{"kind":"identifier","name":"formatString","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"dayOfYear","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":50,"col":0},"declarationKind":"export","jsDoc":{"doc":"Get number of the day in the year","tags":[{"kind":"return","doc":"Number of the day in year"}]},"functionDef":{"params":[{"kind":"identifier","name":"date","optional":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"weekOfYear","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":66,"col":0},"declarationKind":"export","jsDoc":{"doc":"Get number of the week in the year (ISO-8601)","tags":[{"kind":"return","doc":"Number of the week in year"}]},"functionDef":{"params":[{"kind":"identifier","name":"date","optional":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"toIMF","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":95,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse a date to return a IMF formatted string date\nRFC: https://tools.ietf.org/html/rfc7231#section-7.1.1.1\nIMF is the time format to use when generating times in HTTP\nheaders. The time being formatted must be in UTC for Format to\ngenerate the correct format.","tags":[{"kind":"param","name":"date","doc":"Date to parse"},{"kind":"return","doc":"IMF date formatted string"}]},"functionDef":{"params":[{"kind":"identifier","name":"date","optional":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isLeap","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":129,"col":0},"declarationKind":"export","jsDoc":{"doc":"Check given year is a leap year or not.\nbased on : https://docs.microsoft.com/en-us/office/troubleshoot/excel/determine-a-leap-year","tags":[{"kind":"param","name":"year","doc":"year in number or Date format"}]},"functionDef":{"params":[{"kind":"identifier","name":"year","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},{"repr":"number","kind":"keyword","keyword":"number"}]}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"Unit","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":136,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"milliseconds","kind":"literal","literal":{"kind":"string","string":"milliseconds"}},{"repr":"seconds","kind":"literal","literal":{"kind":"string","string":"seconds"}},{"repr":"minutes","kind":"literal","literal":{"kind":"string","string":"minutes"}},{"repr":"hours","kind":"literal","literal":{"kind":"string","string":"hours"}},{"repr":"days","kind":"literal","literal":{"kind":"string","string":"days"}},{"repr":"weeks","kind":"literal","literal":{"kind":"string","string":"weeks"}},{"repr":"months","kind":"literal","literal":{"kind":"string","string":"months"}},{"repr":"quarters","kind":"literal","literal":{"kind":"string","string":"quarters"}},{"repr":"years","kind":"literal","literal":{"kind":"string","string":"years"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"DifferenceFormat","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":147,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"Partial","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Unit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Unit"}},{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Record"}}],"typeName":"Partial"}},"typeParams":[]}},{"kind":"typeAlias","name":"DifferenceOptions","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":149,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"units","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"Unit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Unit"}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"function","name":"difference","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":167,"col":0},"declarationKind":"export","jsDoc":{"doc":"Calculate difference between two dates.","tags":[{"kind":"param","name":"from","doc":"Year to calculate difference"},{"kind":"param","name":"to","doc":"Year to calculate difference with"},{"kind":"param","name":"options","doc":"Options for determining how to respond\n\nexample :\n\n```typescript\nimport * as datetime from \"./mod.ts\";\n\ndatetime.difference(new Date(\"2020/1/1\"),new Date(\"2020/2/2\"),{ units : [\"days\",\"months\"] })\n```"}]},"functionDef":{"params":[{"kind":"identifier","name":"from","optional":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}},{"kind":"identifier","name":"to","optional":false,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"DifferenceOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DifferenceOptions"}}}],"returnType":{"repr":"DifferenceFormat","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DifferenceFormat"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"DateTimeFormatter","location":{"filename":"https://deno.land/std@0.113.0/datetime/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/datetime/formatter.ts","imported":"DateTimeFormatter"}}],"/encoding/ascii85.ts":[{"kind":"typeAlias","name":"Ascii85Standard","location":{"filename":"https://deno.land/std@0.113.0/encoding/ascii85.ts","line":4,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"Adobe","kind":"literal","literal":{"kind":"string","string":"Adobe"}},{"repr":"btoa","kind":"literal","literal":{"kind":"string","string":"btoa"}},{"repr":"RFC 1924","kind":"literal","literal":{"kind":"string","string":"RFC 1924"}},{"repr":"Z85","kind":"literal","literal":{"kind":"string","string":"Z85"}}]},"typeParams":[]}},{"kind":"interface","name":"Ascii85Options","location":{"filename":"https://deno.land/std@0.113.0/encoding/ascii85.ts","line":10,"col":0},"declarationKind":"export","jsDoc":{"doc":"encoding/decoding options","tags":[{"kind":"unsupported","value":"@property standard - characterset and delimiter (if supported and used). Defaults to Adobe"},{"kind":"unsupported","value":"@property delimiter - whether to use a delimiter (if supported) - \"<~\" and \"~>\" by default"}]},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"standard","location":{"filename":"https://deno.land/std@0.113.0/encoding/ascii85.ts","line":11,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Ascii85Standard","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Ascii85Standard"}},"typeParams":[]},{"name":"delimiter","location":{"filename":"https://deno.land/std@0.113.0/encoding/ascii85.ts","line":12,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"encode","location":{"filename":"https://deno.land/std@0.113.0/encoding/ascii85.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes a given Uint8Array into ascii85, supports multiple standards","tags":[{"kind":"param","name":"uint8","doc":"input to encode"},{"kind":"unsupported","value":"@param [options] encoding options"},{"kind":"unsupported","value":"@param [options.standard=Adobe] encoding standard (Adobe, btoa, RFC 1924 or Z85)"},{"kind":"unsupported","value":"@param [options.delimiter] whether to use a delimiter, if supported by encoding standard"}]},"functionDef":{"params":[{"kind":"identifier","name":"uint8","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"Ascii85Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Ascii85Options"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"decode","location":{"filename":"https://deno.land/std@0.113.0/encoding/ascii85.ts","line":90,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a given ascii85 encoded string.","tags":[{"kind":"param","name":"ascii85","doc":"input to decode"},{"kind":"unsupported","value":"@param [options] decoding options"},{"kind":"unsupported","value":"@param [options.standard=Adobe] encoding standard used in the input string (Adobe, btoa, RFC 1924 or Z85)"}]},"functionDef":{"params":[{"kind":"identifier","name":"ascii85","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"Ascii85Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Ascii85Options"}}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/encoding/base32.ts":[{"kind":"function","name":"byteLength","location":{"filename":"https://deno.land/std@0.113.0/encoding/base32.ts","line":42,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns number of bytes encoded in the given RFC4648 base32 string input.","tags":[{"kind":"param","name":"b32"}]},"functionDef":{"params":[{"kind":"identifier","name":"b32","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"decode","location":{"filename":"https://deno.land/std@0.113.0/encoding/base32.ts","line":55,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a given RFC4648 base32 encoded string.","tags":[{"kind":"param","name":"b32"}]},"functionDef":{"params":[{"kind":"identifier","name":"b32","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"encode","location":{"filename":"https://deno.land/std@0.113.0/encoding/base32.ts","line":149,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes a given Uint8Array into RFC4648 base32 representation","tags":[{"kind":"param","name":"uint8"}]},"functionDef":{"params":[{"kind":"identifier","name":"uint8","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/encoding/base64.ts":[{"kind":"function","name":"encode","location":{"filename":"https://deno.land/std@0.113.0/encoding/base64.ts","line":75,"col":0},"declarationKind":"export","jsDoc":{"doc":"CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\nEncodes a given Uint8Array, ArrayBuffer or string into RFC4648 base64 representation","tags":[{"kind":"param","name":"data"}]},"functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}},{"repr":"string","kind":"keyword","keyword":"string"}]}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"decode","location":{"filename":"https://deno.land/std@0.113.0/encoding/base64.ts","line":110,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a given RFC4648 base64 encoded string","tags":[{"kind":"param","name":"b64"}]},"functionDef":{"params":[{"kind":"identifier","name":"b64","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/encoding/base64url.ts":[{"kind":"function","name":"addPaddingToBase64url","location":{"filename":"https://deno.land/std@0.113.0/encoding/base64url.ts","line":10,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"base64url","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"encode","location":{"filename":"https://deno.land/std@0.113.0/encoding/base64url.ts","line":35,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes a given ArrayBuffer or string into a base64url representation","tags":[{"kind":"param","name":"data"}]},"functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}},{"repr":"string","kind":"keyword","keyword":"string"}]}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"decode","location":{"filename":"https://deno.land/std@0.113.0/encoding/base64url.ts","line":43,"col":0},"declarationKind":"export","jsDoc":{"doc":"Converts given base64url encoded data back to original","tags":[{"kind":"param","name":"b64url"}]},"functionDef":{"params":[{"kind":"identifier","name":"b64url","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"base64","location":{"filename":"https://deno.land/std@0.113.0/encoding/base64url.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/encoding/base64.ts","imported":null}}],"/encoding/binary.ts":[{"kind":"typeAlias","name":"DataType","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":6,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"RawNumberType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RawNumberType"}},{"repr":"RawBigType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RawBigType"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"Endianness","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":9,"col":0},"declarationKind":"export","jsDoc":{"doc":"How encoded binary data is ordered."},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"little","kind":"literal","literal":{"kind":"string","string":"little"}},{"repr":"big","kind":"literal","literal":{"kind":"string","string":"big"}}]},"typeParams":[]}},{"kind":"interface","name":"VarnumOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":12,"col":0},"declarationKind":"export","jsDoc":{"doc":"Options for working with the `number` type."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"dataType","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":14,"col":2},"jsDoc":{"doc":"The binary format used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"RawNumberType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RawNumberType"}},"typeParams":[]},{"name":"endian","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":16,"col":2},"jsDoc":{"doc":"The binary encoding order used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Endianness","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Endianness"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"VarbigOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"doc":"Options for working with the `bigint` type."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"dataType","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":22,"col":2},"jsDoc":{"doc":"The binary format used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"RawBigType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RawBigType"}},"typeParams":[]},{"name":"endian","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":24,"col":2},"jsDoc":{"doc":"The binary encoding order used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Endianness","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Endianness"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"sizeof","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":41,"col":0},"declarationKind":"export","jsDoc":{"doc":"Number of bytes required to store `dataType`."},"functionDef":{"params":[{"kind":"identifier","name":"dataType","optional":false,"tsType":{"repr":"DataType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DataType"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readExact","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":48,"col":0},"declarationKind":"export","jsDoc":{"doc":"Reads the exact number of bytes from `r` required to fill `b`.\n\nThrows `Deno.errors.UnexpectedEof` if `n` bytes cannot be read."},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getNBytes","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":65,"col":0},"declarationKind":"export","jsDoc":{"doc":"Reads exactly `n` bytes from `r`.\n\nResolves it in a `Uint8Array`, or throws `Deno.errors.UnexpectedEof` if `n` bytes cannot be read."},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"varnum","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":77,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a number from `b`. If `o.bytes` is shorter than `sizeof(o.dataType)`, returns `null`.\n\n`o.dataType` defaults to `\"int32\"`."},"functionDef":{"params":[{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarnumOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarnumOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"varbig","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":105,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a bigint from `b`. If `o.bytes` is shorter than `sizeof(o.dataType)`, returns `null`.\n\n`o.dataType` defaults to `\"int64\"`."},"functionDef":{"params":[{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarbigOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarbigOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"union","union":[{"repr":"bigint","kind":"keyword","keyword":"bigint"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"putVarnum","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":133,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes number `x` into `b`. Returns the number of bytes used, or `0` if `b` is shorter than `sizeof(o.dataType)`.\n\n`o.dataType` defaults to `\"int32\"`."},"functionDef":{"params":[{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarnumOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarnumOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"putVarbig","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":174,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes bigint `x` into `b`. Returns the number of bytes used, or `0` if `b` is shorter than `sizeof(o.dataType)`.\n\n`o.dataType` defaults to `\"int64\"`."},"functionDef":{"params":[{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarbigOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarbigOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readVarnum","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":215,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a number from `r`, consuming `sizeof(o.dataType)` bytes. If less than `sizeof(o.dataType)` bytes were read, throws `Deno.errors.unexpectedEof`.\n\n`o.dataType` defaults to `\"int32\"`."},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarnumOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarnumOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readVarbig","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":227,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes a bigint from `r`, consuming `sizeof(o.dataType)` bytes. If less than `sizeof(o.dataType)` bytes were read, throws `Deno.errors.unexpectedEof`.\n\n`o.dataType` defaults to `\"int64\"`."},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarbigOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarbigOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"bigint","kind":"keyword","keyword":"bigint"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeVarnum","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":239,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes and writes `x` to `w`. Resolves to the number of bytes written.\n\n`o.dataType` defaults to `\"int32\"`."},"functionDef":{"params":[{"kind":"identifier","name":"w","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}},{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarnumOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarnumOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeVarbig","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":253,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes and writes `x` to `w`. Resolves to the number of bytes written.\n\n`o.dataType` defaults to `\"int64\"`."},"functionDef":{"params":[{"kind":"identifier","name":"w","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}},{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarbigOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarbigOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"varnumBytes","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":267,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes `x` into a new `Uint8Array`.\n\n`o.dataType` defaults to `\"int32\"`"},"functionDef":{"params":[{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarnumOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarnumOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"varbigBytes","location":{"filename":"https://deno.land/std@0.113.0/encoding/binary.ts","line":277,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes `x` into a new `Uint8Array`.\n\n`o.dataType` defaults to `\"int64\"`"},"functionDef":{"params":[{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"o","optional":false,"tsType":{"repr":"VarbigOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"VarbigOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/encoding/csv.ts":[{"kind":"variable","name":"NEWLINE","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"\r\n","kind":"literal","literal":{"kind":"string","string":"\r\n"}},"kind":"const"}},{"kind":"function","name":"stringify","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":134,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"data","doc":"The array of objects to encode"},{"kind":"param","name":"columns","doc":"Array of values specifying which data to include in the output"},{"kind":"param","name":"options","doc":"Output formatting options"}]},"functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"DataItem","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DataItem"}}}},{"kind":"identifier","name":"columns","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"Column","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Column"}}}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"StringifyOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"StringifyOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"StringifyError","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":9,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"name","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":10,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"typeAlias","name":"Column","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":47,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"ColumnDetails","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ColumnDetails"}},{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}},{"repr":"","kind":"array","array":{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}}}]},"typeParams":[]}},{"kind":"typeAlias","name":"ColumnDetails","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":39,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"fn","doc":"Optional callback for transforming the value\n"},{"kind":"param","name":"header","doc":"Explicit column header name. If omitted,\nthe (final) property accessor is used for this value.\n"},{"kind":"param","name":"prop","doc":"Property accessor(s) used to access the value on the object"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"fn","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Promise"}}]},"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}},"typeParams":[]},{"name":"header","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"prop","params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}},{"repr":"","kind":"array","array":{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"typeAlias","name":"DataItem","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":81,"col":0},"declarationKind":"export","jsDoc":{"doc":"An object (plain or array)"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"ObjectWithStringPropertyKeys","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ObjectWithStringPropertyKeys"}},{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"StringifyOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":124,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"headers","doc":"Whether or not to include the row of headers.\nDefault: `true`\n"},{"kind":"param","name":"separator","doc":"Delimiter used to separate values. Examples:\n- `\",\"` _comma_ (Default)\n- `\"\\t\"` _tab_\n- `\"|\"` _pipe_\n- etc."}]},"typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"headers","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"separator","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"variable","name":"ERR_BARE_QUOTE","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":23,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"bare \" in non-quoted-field","kind":"literal","literal":{"kind":"string","string":"bare \" in non-quoted-field"}},"kind":"const"}},{"kind":"variable","name":"ERR_QUOTE","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":24,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"extraneous or missing \" in quoted-field","kind":"literal","literal":{"kind":"string","string":"extraneous or missing \" in quoted-field"}},"kind":"const"}},{"kind":"variable","name":"ERR_INVALID_DELIM","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":25,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Invalid Delimiter","kind":"literal","literal":{"kind":"string","string":"Invalid Delimiter"}},"kind":"const"}},{"kind":"variable","name":"ERR_FIELD_COUNT","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":26,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"wrong number of fields","kind":"literal","literal":{"kind":"string","string":"wrong number of fields"}},"kind":"const"}},{"kind":"class","name":"ParseError","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":32,"col":0},"declarationKind":"export","jsDoc":{"doc":"A ParseError is returned for parsing errors.\nLine numbers are 1-indexed and columns are 0-indexed."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"start","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"line","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"column","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"message","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":40,"col":2}}],"properties":[{"jsDoc":{"doc":"Line where the record starts"},"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"startLine","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":34,"col":2}},{"jsDoc":{"doc":"Line where the error occurred"},"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"line","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":36,"col":2}},{"jsDoc":{"doc":"Column (rune index) where the error occurred"},"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"column","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":38,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"interface","name":"ReadOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":73,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"unsupported","value":"@property separator - Character which separates values. Default: ','"},{"kind":"unsupported","value":"@property comment - Character to start a comment. Default: '#'"},{"kind":"unsupported","value":"@property trimLeadingSpace - Flag to trim the leading space of the value.\nDefault: 'false'"},{"kind":"unsupported","value":"@property lazyQuotes - Allow unquoted quote in a quoted field or non double\nquoted quotes in quoted field. Default: 'false'"},{"kind":"unsupported","value":"@property fieldsPerRecord - Enabling the check of fields for each row.\nIf == 0, first row is used as referral for the number of fields."}]},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"separator","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":74,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"comment","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":75,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"trimLeadingSpace","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":76,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"lazyQuotes","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":77,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"fieldsPerRecord","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":78,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"readMatrix","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":290,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse the CSV from the `reader` with the options provided and return `string[][]`.\n","tags":[{"kind":"param","name":"reader","doc":"provides the CSV data to parse"},{"kind":"param","name":"opt","doc":"controls the parsing behavior"}]},"functionDef":{"params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}},{"kind":"assign","left":{"kind":"identifier","name":"opt","optional":false,"tsType":{"repr":"ReadOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"ColumnOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":340,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse the CSV string/buffer with the options provided.\n\nColumnOptions provides the column definition\nand the parse function for each entry of the\ncolumn."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":344,"col":2},"jsDoc":{"doc":"Name of the column to be used as property"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"parse","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":350,"col":2},"jsDoc":{"doc":"Parse function for the column.\nThis is executed on each entry of the header.\nThis can be combined with the Parse function of the rows."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"input","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeParams":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"ParseOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":353,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"ReadOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadOptions"}}],"methods":[],"properties":[{"name":"skipFirstRow","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":358,"col":2},"jsDoc":{"doc":"If you provide `skipFirstRow: true` and `columns`, the first line will be skipped.\nIf you provide `skipFirstRow: true` but not `columns`, the first line will be skipped and used as header definitions."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"columns","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":363,"col":2},"jsDoc":{"doc":"If you provide `string[]` or `ColumnOptions[]`, those names will be used for header definition."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"","kind":"array","array":{"repr":"ColumnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ColumnOptions"}}}]},"typeParams":[]},{"name":"parse","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":383,"col":2},"jsDoc":{"doc":"Parse function for rows.\nExample:\n```ts\n    import { parse } from \"./csv.ts\";\n    const r = await parse('a,b,c\\ne,f,g\\n', {\n     columns: [\"this\", \"is\", \"sparta\"],\n      parse: (_e: unknown) => {\n        const e = _e as { this: unknown, is: unknown, sparta: unknown };\n        return { super: e.this, street: e.is, fighter: e.sparta };\n      }\n    });\n// output\n// [\n//   { super: \"a\", street: \"b\", fighter: \"c\" },\n//   { super: \"e\", street: \"f\", fighter: \"g\" }\n// ]\n```"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"input","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"typeParams":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":396,"col":0},"declarationKind":"export","jsDoc":{"doc":"Csv parse helper to manipulate data.\nProvides an auto/custom mapper for columns and parse function\nfor columns and rows.","tags":[{"kind":"param","name":"input","doc":"Input to parse. Can be a string or BufReader."},{"kind":"param","name":"opt","doc":"options of the parser."},{"kind":"return","doc":"If you don't provide `opt.skipFirstRow`, `opt.parse`, and `opt.columns`, it returns `string[][]`.\nIf you provide `opt.skipFirstRow` or `opt.columns` but not `opt.parse`, it returns `object[]`.\nIf you provide `opt.parse`, it returns an array where each element is the value returned from `opt.parse`."}]},"functionDef":{"params":[{"kind":"identifier","name":"input","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}]}},{"kind":"assign","left":{"kind":"identifier","name":"opt","optional":false,"tsType":{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"BufReader","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"BufReader"}},{"kind":"import","name":"TextProtoReader","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/textproto/mod.ts","imported":"TextProtoReader"}},{"kind":"import","name":"StringReader","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/readers.ts","imported":"StringReader"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}}],"/encoding/csv_stringify.ts":[{"kind":"variable","name":"NEWLINE","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"\r\n","kind":"literal","literal":{"kind":"string","string":"\r\n"}},"kind":"const"}},{"kind":"class","name":"StringifyError","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":9,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"name","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":10,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"typeAlias","name":"ColumnDetails","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":39,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"fn","doc":"Optional callback for transforming the value\n"},{"kind":"param","name":"header","doc":"Explicit column header name. If omitted,\nthe (final) property accessor is used for this value.\n"},{"kind":"param","name":"prop","doc":"Property accessor(s) used to access the value on the object"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"fn","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Promise"}}]},"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}},"typeParams":[]},{"name":"header","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"prop","params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}},{"repr":"","kind":"array","array":{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"typeAlias","name":"Column","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":47,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"ColumnDetails","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ColumnDetails"}},{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}},{"repr":"","kind":"array","array":{"repr":"PropertyAccessor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyAccessor"}}}]},"typeParams":[]}},{"kind":"typeAlias","name":"DataItem","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":81,"col":0},"declarationKind":"export","jsDoc":{"doc":"An object (plain or array)"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"ObjectWithStringPropertyKeys","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ObjectWithStringPropertyKeys"}},{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"StringifyOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":124,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"headers","doc":"Whether or not to include the row of headers.\nDefault: `true`\n"},{"kind":"param","name":"separator","doc":"Delimiter used to separate values. Examples:\n- `\",\"` _comma_ (Default)\n- `\"\\t\"` _tab_\n- `\"|\"` _pipe_\n- etc."}]},"typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"headers","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"separator","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"function","name":"stringify","location":{"filename":"https://deno.land/std@0.113.0/encoding/csv_stringify.ts","line":134,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"data","doc":"The array of objects to encode"},{"kind":"param","name":"columns","doc":"Array of values specifying which data to include in the output"},{"kind":"param","name":"options","doc":"Output formatting options"}]},"functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"DataItem","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DataItem"}}}},{"kind":"identifier","name":"columns","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"Column","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Column"}}}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"StringifyOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"StringifyOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}}],"/encoding/hex.ts":[{"kind":"function","name":"encode","location":{"filename":"https://deno.land/std@0.113.0/encoding/hex.ts","line":31,"col":0},"declarationKind":"export","jsDoc":{"doc":"Encodes `src` into `src.length * 2` bytes."},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"decode","location":{"filename":"https://deno.land/std@0.113.0/encoding/hex.ts","line":45,"col":0},"declarationKind":"export","jsDoc":{"doc":"Decodes `src` into `src.length / 2` bytes.\nIf the input is malformed, an error will be thrown."},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/encoding/toml.ts":[{"kind":"variable","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/encoding/_toml/parser.ts","line":897,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse parses TOML string into an object.","tags":[{"kind":"param","name":"tomlString"}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"stringify","location":{"filename":"https://deno.land/std@0.113.0/encoding/toml.ts","line":250,"col":0},"declarationKind":"export","jsDoc":{"doc":"Stringify dumps source object into TOML string and returns it.","tags":[{"kind":"param","name":"srcObj"}]},"functionDef":{"params":[{"kind":"identifier","name":"srcObj","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/encoding/yaml.ts":[{"kind":"typeAlias","name":"StringifyOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/stringify.ts","line":9,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"DumperStateOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DumperStateOptions"}},"typeParams":[]}},{"kind":"function","name":"stringify","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/stringify.ts","line":16,"col":0},"declarationKind":"export","jsDoc":{"doc":"Serializes `object` as a YAML document.\n\nYou can disable exceptions by setting the skipInvalid option to true."},"functionDef":{"params":[{"kind":"identifier","name":"obj","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"DumpOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DumpOptions"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"Type","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":30,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"tag","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"TypeOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TypeOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":40,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"tag","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":31,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"KindType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"KindType"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"kind","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":32,"col":2}},{"tsType":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"instanceOf","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":33,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"typeParams":[]}},"readonly":false,"accessibility":"public","optional":true,"isAbstract":false,"isStatic":false,"name":"predicate","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":34,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"RepresentFn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RepresentFn"}},{"repr":"ArrayObject","kind":"typeRef","typeRef":{"typeParams":[{"repr":"RepresentFn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RepresentFn"}}],"typeName":"ArrayObject"}}]},"readonly":false,"accessibility":"public","optional":true,"isAbstract":false,"isStatic":false,"name":"represent","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":35,"col":2}},{"tsType":{"repr":"StyleVariant","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"StyleVariant"}},"readonly":false,"accessibility":"public","optional":true,"isAbstract":false,"isStatic":false,"name":"defaultStyle","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":36,"col":2}},{"tsType":{"repr":"ArrayObject","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayObject"}},"readonly":false,"accessibility":"public","optional":true,"isAbstract":false,"isStatic":false,"name":"styleAliases","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":37,"col":2}},{"tsType":{"repr":"KindType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"KindType"}},"readonly":false,"accessibility":"public","optional":true,"isAbstract":false,"isStatic":false,"name":"loadKind","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":38,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"data","optional":true,"tsType":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}}}],"typeParams":[]}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"resolve","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":53,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}},"params":[{"kind":"identifier","name":"data","optional":true,"tsType":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}}}],"typeParams":[]}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"construct","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":54,"col":2}}],"indexSignatures":[],"methods":[],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"typeAlias","name":"KindType","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":8,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"sequence","kind":"literal","literal":{"kind":"string","string":"sequence"}},{"repr":"scalar","kind":"literal","literal":{"kind":"string","string":"scalar"}},{"repr":"mapping","kind":"literal","literal":{"kind":"string","string":"mapping"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"RepresentFn","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":10,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}},"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}}},{"kind":"identifier","name":"style","optional":true,"tsType":{"repr":"StyleVariant","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"StyleVariant"}}}],"typeParams":[]}},"typeParams":[]}},{"kind":"typeAlias","name":"StyleVariant","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/type.ts","line":9,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"lowercase","kind":"literal","literal":{"kind":"string","string":"lowercase"}},{"repr":"uppercase","kind":"literal","literal":{"kind":"string","string":"uppercase"}},{"repr":"camelcase","kind":"literal","literal":{"kind":"string","string":"camelcase"}},{"repr":"decimal","kind":"literal","literal":{"kind":"string","string":"decimal"}}]},"typeParams":[]}},{"kind":"variable","name":"CORE_SCHEMA","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema/core.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Schema","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Schema"}},"kind":"const"}},{"kind":"variable","name":"DEFAULT_SCHEMA","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema/default.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Schema","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Schema"}},"kind":"const"}},{"kind":"variable","name":"EXTENDED_SCHEMA","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema/extended.ts","line":9,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Schema","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Schema"}},"kind":"const"}},{"kind":"variable","name":"FAILSAFE_SCHEMA","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema/failsafe.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Schema","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Schema"}},"kind":"const"}},{"kind":"variable","name":"JSON_SCHEMA","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema/json.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Schema","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Schema"}},"kind":"const"}},{"kind":"interface","name":"SchemaDefinition","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema.ts","line":109,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"implicit","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema.ts","line":110,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"Any","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Any"}}},"typeParams":[]},{"name":"explicit","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema.ts","line":111,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"Type","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Type"}}},"typeParams":[]},{"name":"include","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/schema.ts","line":112,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"Schema","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Schema"}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"ParseOptions","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/parse.ts","line":9,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"LoaderStateOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LoaderStateOptions"}},"typeParams":[]}},{"kind":"function","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/parse.ts","line":17,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parses `content` as single YAML document.\n\nReturns a JavaScript object or throws `YAMLException` on error.\nBy default, does not support regexps, functions and undefined. This method is safe for untrusted data."},"functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}}],"returnType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"parseAll","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/parse.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Same as `parse()`, but understands multi-document sources.\nApplies iterator to each document if specified, or returns array of documents."},"functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"iterator","optional":false,"tsType":{"repr":"CbFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CbFunction"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"parseAll","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/parse.ts","line":30,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}}],"returnType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"parseAll","location":{"filename":"https://deno.land/std@0.113.0/encoding/_yaml/parse.ts","line":31,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"iterator","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"CbFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CbFunction"}},{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}}],"returnType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/examples/cat.ts":[{"kind":"import","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/examples/cat.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"copy"}}],"/examples/catj.ts":[{"kind":"import","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/examples/catj.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/flags/mod.ts","imported":"parse"}},{"kind":"import","name":"colors","location":{"filename":"https://deno.land/std@0.113.0/examples/catj.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":null}},{"kind":"import","name":"readAll","location":{"filename":"https://deno.land/std@0.113.0/examples/catj.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readAll"}}],"/examples/colors.ts":[{"kind":"import","name":"bgBlue","location":{"filename":"https://deno.land/std@0.113.0/examples/colors.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"bgBlue"}},{"kind":"import","name":"bold","location":{"filename":"https://deno.land/std@0.113.0/examples/colors.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"bold"}},{"kind":"import","name":"italic","location":{"filename":"https://deno.land/std@0.113.0/examples/colors.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"italic"}},{"kind":"import","name":"red","location":{"filename":"https://deno.land/std@0.113.0/examples/colors.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"red"}}],"/examples/echo_server.ts":[{"kind":"import","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/examples/echo_server.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"copy"}}],"/examples/flags.ts":[{"kind":"import","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/examples/flags.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/flags/mod.ts","imported":"parse"}}],"/examples/gist.ts":[{"kind":"import","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/examples/gist.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/flags/mod.ts","imported":"parse"}}],"/examples/xeval.ts":[{"kind":"typeAlias","name":"XevalFunc","location":{"filename":"https://deno.land/std@0.113.0/examples/xeval.ts","line":30,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"v","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeParams":[]}},"typeParams":[]}},{"kind":"interface","name":"XevalOptions","location":{"filename":"https://deno.land/std@0.113.0/examples/xeval.ts","line":32,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"delimiter","location":{"filename":"https://deno.land/std@0.113.0/examples/xeval.ts","line":33,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"xeval","location":{"filename":"https://deno.land/std@0.113.0/examples/xeval.ts","line":38,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"xevalFunc","optional":false,"tsType":{"repr":"XevalFunc","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"XevalFunc"}}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"delimiter","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"XevalOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"XevalOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/examples/xeval.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/flags/mod.ts","imported":"parse"}},{"kind":"import","name":"readStringDelim","location":{"filename":"https://deno.land/std@0.113.0/examples/xeval.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"readStringDelim"}}],"/examples/chat/server.ts":[{"kind":"import","name":"fromFileUrl","location":{"filename":"https://deno.land/std@0.113.0/examples/chat/server.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"fromFileUrl"}},{"kind":"import","name":"readableStreamFromReader","location":{"filename":"https://deno.land/std@0.113.0/examples/chat/server.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readableStreamFromReader"}}],"/flags/mod.ts":[{"kind":"interface","name":"Args","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":5,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"_","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":8,"col":2},"jsDoc":{"doc":"Contains all the arguments that didn't have an option associated with\nthem."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"}]}],"typeName":"Array"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}},{"kind":"interface","name":"ArgParsingOptions","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":13,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"--","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":28,"col":2},"jsDoc":{"doc":"When `true`, populate the result `_` with everything before the `--` and\nthe result `['--']` with everything after the `--`. Here's an example:\n\n```ts\n     // $ deno run example.ts -- a arg1\n     import { parse } from \"./mod.ts\";\n     console.dir(parse(Deno.args, { \"--\": false }));\n     // output: { _: [ \"a\", \"arg1\" ] }\n     console.dir(parse(Deno.args, { \"--\": true }));\n     // output: { _: [], --: [ \"a\", \"arg1\" ] }\n```\n\nDefaults to `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"alias","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":32,"col":2},"jsDoc":{"doc":"An object mapping string names to strings or arrays of string argument\nnames to use as aliases"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]}],"typeName":"Record"}},"typeParams":[]},{"name":"boolean","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":37,"col":2},"jsDoc":{"doc":"A boolean, string or array of strings to always treat as booleans. If\n`true` will treat all double hyphenated arguments without equal signs as\n`boolean` (e.g. affects `--foo`, not `-f` or `--foo=bar`)"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]},"typeParams":[]},{"name":"default","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":40,"col":2},"jsDoc":{"doc":"An object mapping string argument names to default values."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}},"typeParams":[]},{"name":"stopEarly","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":44,"col":2},"jsDoc":{"doc":"When `true`, populate the result `_` with everything after the first\nnon-option."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"string","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":47,"col":2},"jsDoc":{"doc":"A string or array of strings argument names to always treat as strings."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}]},"typeParams":[]},{"name":"unknown","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":52,"col":2},"jsDoc":{"doc":"A function which is invoked with a command line parameter not defined in\nthe `options` configuration object. If the function returns `false`, the\nunknown option is not added to `parsedArgs`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"arg","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"key","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"value","optional":true,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"typeParams":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":104,"col":0},"declarationKind":"export","jsDoc":{"doc":"Take a set of command line arguments, with an optional set of options, and\nreturn an object representation of those argument.\n\n```ts\n     import { parse } from \"./mod.ts\";\n     const parsedArgs = parse(Deno.args);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"args","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"keyValue","key":"--","value":{"kind":"assign","left":{"kind":"identifier","name":"doubleDash","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}},{"kind":"assign","key":"alias","value":"[UNSUPPORTED]"},{"kind":"assign","key":"boolean","value":"[UNSUPPORTED]"},{"kind":"keyValue","key":"default","value":{"kind":"assign","left":{"kind":"identifier","name":"defaults","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}},{"kind":"assign","key":"stopEarly","value":"[UNSUPPORTED]"},{"kind":"assign","key":"string","value":"[UNSUPPORTED]"},{"kind":"assign","key":"unknown","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"ArgParsingOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArgParsingOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Args","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Args"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/flags/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}}],"/fmt/colors.ts":[{"kind":"moduleDoc","name":"","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":6,"col":0},"declarationKind":"export","jsDoc":{"doc":"```ts\nimport { bgBlue, red, bold } from \"https://deno.land/std@$STD_VERSION/fmt/colors.ts\";\nconsole.log(bgBlue(red(bold(\"Hello world!\"))));\n```\n\nThis module supports `NO_COLOR` environmental variable disabling any coloring\nif `NO_COLOR` is set.\n","tags":[{"kind":"module"}]}},{"kind":"function","name":"setColorEnabled","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":44,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set changing text color to enabled or disabled","tags":[{"kind":"param","name":"value"}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getColorEnabled","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":53,"col":0},"declarationKind":"export","jsDoc":{"doc":"Get whether text color change is enabled or disabled."},"functionDef":{"params":[],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"reset","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":85,"col":0},"declarationKind":"export","jsDoc":{"doc":"Reset the text modified","tags":[{"kind":"param","name":"str","doc":"text to reset"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bold","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":93,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make the text bold.","tags":[{"kind":"param","name":"str","doc":"text to make bold"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"dim","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":101,"col":0},"declarationKind":"export","jsDoc":{"doc":"The text emits only a small amount of light.","tags":[{"kind":"param","name":"str","doc":"text to dim"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"italic","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":109,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make the text italic.","tags":[{"kind":"param","name":"str","doc":"text to make italic"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"underline","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":117,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make the text underline.","tags":[{"kind":"param","name":"str","doc":"text to underline"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"inverse","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":125,"col":0},"declarationKind":"export","jsDoc":{"doc":"Invert background color and text color.","tags":[{"kind":"param","name":"str","doc":"text to invert its color"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"hidden","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":133,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make the text hidden.","tags":[{"kind":"param","name":"str","doc":"text to hide"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"strikethrough","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":141,"col":0},"declarationKind":"export","jsDoc":{"doc":"Put horizontal line through the center of the text.","tags":[{"kind":"param","name":"str","doc":"text to strike through"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"black","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":149,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to black.","tags":[{"kind":"param","name":"str","doc":"text to make black"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"red","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":157,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to red.","tags":[{"kind":"param","name":"str","doc":"text to make red"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"green","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":165,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to green.","tags":[{"kind":"param","name":"str","doc":"text to make green"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"yellow","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":173,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to yellow.","tags":[{"kind":"param","name":"str","doc":"text to make yellow"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"blue","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":181,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to blue.","tags":[{"kind":"param","name":"str","doc":"text to make blue"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"magenta","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":189,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to magenta.","tags":[{"kind":"param","name":"str","doc":"text to make magenta"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"cyan","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":197,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to cyan.","tags":[{"kind":"param","name":"str","doc":"text to make cyan"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"white","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":205,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to white.","tags":[{"kind":"param","name":"str","doc":"text to make white"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"gray","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":213,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to gray.","tags":[{"kind":"param","name":"str","doc":"text to make gray"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightBlack","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":221,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright black.","tags":[{"kind":"param","name":"str","doc":"text to make bright-black"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightRed","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":229,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright red.","tags":[{"kind":"param","name":"str","doc":"text to make bright-red"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightGreen","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":237,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright green.","tags":[{"kind":"param","name":"str","doc":"text to make bright-green"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightYellow","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":245,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright yellow.","tags":[{"kind":"param","name":"str","doc":"text to make bright-yellow"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightBlue","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":253,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright blue.","tags":[{"kind":"param","name":"str","doc":"text to make bright-blue"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightMagenta","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":261,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright magenta.","tags":[{"kind":"param","name":"str","doc":"text to make bright-magenta"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightCyan","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":269,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright cyan.","tags":[{"kind":"param","name":"str","doc":"text to make bright-cyan"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"brightWhite","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":277,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color to bright white.","tags":[{"kind":"param","name":"str","doc":"text to make bright-white"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBlack","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":285,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to black.","tags":[{"kind":"param","name":"str","doc":"text to make its background black"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgRed","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":293,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to red.","tags":[{"kind":"param","name":"str","doc":"text to make its background red"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgGreen","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":301,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to green.","tags":[{"kind":"param","name":"str","doc":"text to make its background green"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgYellow","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":309,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to yellow.","tags":[{"kind":"param","name":"str","doc":"text to make its background yellow"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBlue","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":317,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to blue.","tags":[{"kind":"param","name":"str","doc":"text to make its background blue"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgMagenta","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":325,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to magenta.","tags":[{"kind":"param","name":"str","doc":"text to make its background magenta"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgCyan","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":333,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to cyan.","tags":[{"kind":"param","name":"str","doc":"text to make its background cyan"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgWhite","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":341,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to white.","tags":[{"kind":"param","name":"str","doc":"text to make its background white"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightBlack","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":349,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright black.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-black"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightRed","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":357,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright red.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-red"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightGreen","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":365,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright green.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-green"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightYellow","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":373,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright yellow.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-yellow"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightBlue","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":381,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright blue.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-blue"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightMagenta","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":389,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright magenta.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-magenta"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightCyan","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":397,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright cyan.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-cyan"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgBrightWhite","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":405,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color to bright white.","tags":[{"kind":"param","name":"str","doc":"text to make its background bright-white"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rgb8","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":427,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color using paletted 8bit colors.\nhttps://en.wikipedia.org/wiki/ANSI_escape_code#8-bit","tags":[{"kind":"param","name":"str","doc":"text color to apply paletted 8bit colors to"},{"kind":"param","name":"color","doc":"code"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"color","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgRgb8","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":437,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color using paletted 8bit colors.\nhttps://en.wikipedia.org/wiki/ANSI_escape_code#8-bit","tags":[{"kind":"param","name":"str","doc":"text color to apply paletted 8bit background colors to"},{"kind":"param","name":"color","doc":"code"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"color","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rgb24","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":456,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set text color using 24bit rgb.\n`color` can be a number in range `0x000000` to `0xffffff` or\nan `Rgb`.\n\nTo produce the color magenta:\n\n```ts\n     import { rgb24 } from \"./colors.ts\";\n     rgb24(\"foo\", 0xff00ff);\n     rgb24(\"foo\", {r: 255, g: 0, b: 255});\n```","tags":[{"kind":"param","name":"str","doc":"text color to apply 24bit rgb to"},{"kind":"param","name":"color","doc":"code"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"color","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Rgb","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Rgb"}}]}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bgRgb24","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":496,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set background color using 24bit rgb.\n`color` can be a number in range `0x000000` to `0xffffff` or\nan `Rgb`.\n\nTo produce the color magenta:\n\n```ts\n     import { bgRgb24 } from \"./colors.ts\";\n     bgRgb24(\"foo\", 0xff00ff);\n     bgRgb24(\"foo\", {r: 255, g: 0, b: 255});\n```","tags":[{"kind":"param","name":"str","doc":"text color to apply 24bit rgb to"},{"kind":"param","name":"color","doc":"code"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"color","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Rgb","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Rgb"}}]}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"stripColor","location":{"filename":"https://deno.land/std@0.113.0/fmt/colors.ts","line":534,"col":0},"declarationKind":"export","jsDoc":{"doc":"Remove ANSI escape codes from the string.","tags":[{"kind":"param","name":"string","doc":"to remove ANSI escape codes from"}]},"functionDef":{"params":[{"kind":"identifier","name":"string","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/fmt/printf.ts":[{"kind":"function","name":"sprintf","location":{"filename":"https://deno.land/std@0.113.0/fmt/printf.ts","line":743,"col":0},"declarationKind":"export","jsDoc":{"doc":"Converts and format a variable number of `args` as is specified by `format`.\n`sprintf` returns the formatted string.\n","tags":[{"kind":"param","name":"format"},{"kind":"param","name":"args"}]},"functionDef":{"params":[{"kind":"identifier","name":"format","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"printf","location":{"filename":"https://deno.land/std@0.113.0/fmt/printf.ts","line":754,"col":0},"declarationKind":"export","jsDoc":{"doc":"Converts and format a variable number of `args` as is specified by `format`.\n`printf` writes the formatted string to standard output.","tags":[{"kind":"param","name":"format"},{"kind":"param","name":"args"}]},"functionDef":{"params":[{"kind":"identifier","name":"format","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}}],"/fs/mod.ts":[{"kind":"function","name":"ensureFile","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_file.ts","line":14,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the file exists.\nIf the file that is requested to be created is in directories that do not\nexist.\nthese directories are created. If the file already exists,\nit is NOTMODIFIED.\nRequires the `--allow-read` and `--allow-write` flag."},"functionDef":{"params":[{"kind":"identifier","name":"filePath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ensureFileSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_file.ts","line":45,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the file exists.\nIf the file that is requested to be created is in directories that do not\nexist,\nthese directories are created. If the file already exists,\nit is NOT MODIFIED.\nRequires the `--allow-read` and `--allow-write` flag."},"functionDef":{"params":[{"kind":"identifier","name":"filePath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_file.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":null}},{"kind":"import","name":"ensureDir","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_file.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDir"}},{"kind":"import","name":"ensureDirSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_file.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDirSync"}},{"kind":"import","name":"getFileInfoType","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_file.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"getFileInfoType"}},{"kind":"function","name":"exists","location":{"filename":"https://deno.land/std@0.113.0/fs/exists.ts","line":7,"col":0},"declarationKind":"export","jsDoc":{"doc":"Test whether or not the given path exists by checking with the file system","tags":[{"kind":"deprecated","doc":"Checking the state of a file before using it causes a race condition. Perform the actual operation directly instead."},{"kind":"unsupported","value":"@see https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use"}]},"functionDef":{"params":[{"kind":"identifier","name":"filePath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"boolean","kind":"keyword","keyword":"boolean"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"existsSync","location":{"filename":"https://deno.land/std@0.113.0/fs/exists.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"Test whether or not the given path exists by checking with the file system","tags":[{"kind":"deprecated","doc":"Checking the state of a file before using it causes a race condition. Perform the actual operation directly instead."},{"kind":"unsupported","value":"@see https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use"}]},"functionDef":{"params":[{"kind":"identifier","name":"filePath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"enum","name":"EOL","location":{"filename":"https://deno.land/std@0.113.0/fs/eol.ts","line":4,"col":0},"declarationKind":"export","jsDoc":{"doc":"EndOfLine character enum"},"enumDef":{"members":[{"name":"LF","init":{"repr":"\n","kind":"literal","literal":{"kind":"string","string":"\n"}}},{"name":"CRLF","init":{"repr":"\r\n","kind":"literal","literal":{"kind":"string","string":"\r\n"}}}]}},{"kind":"function","name":"detect","location":{"filename":"https://deno.land/std@0.113.0/fs/eol.ts","line":15,"col":0},"declarationKind":"export","jsDoc":{"doc":"Detect the EOL character for string input.\nreturns null if no newline"},"functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"EOL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EOL"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"format","location":{"filename":"https://deno.land/std@0.113.0/fs/eol.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"doc":"Format the file to the targeted EOL"},"functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"eol","optional":false,"tsType":{"repr":"EOL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EOL"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ensureSymlink","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":15,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the link exists.\nIf the directory structure does not exist, it is created.\n","tags":[{"kind":"param","name":"src","doc":"the source file path"},{"kind":"param","name":"dest","doc":"the destination link path"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ensureSymlinkSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":48,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the link exists.\nIf the directory structure does not exist, it is created.\n","tags":[{"kind":"param","name":"src","doc":"the source file path"},{"kind":"param","name":"dest","doc":"the destination link path"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":null}},{"kind":"import","name":"ensureDir","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDir"}},{"kind":"import","name":"ensureDirSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDirSync"}},{"kind":"import","name":"exists","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/exists.ts","imported":"exists"}},{"kind":"import","name":"existsSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/exists.ts","imported":"existsSync"}},{"kind":"import","name":"getFileInfoType","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"getFileInfoType"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_symlink.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"function","name":"emptyDir","location":{"filename":"https://deno.land/std@0.113.0/fs/empty_dir.ts","line":11,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that a directory is empty.\nDeletes directory contents if the directory is not empty.\nIf the directory does not exist, it is created.\nThe directory itself is not deleted.\nRequires the `--allow-read` and `--allow-write` flag."},"functionDef":{"params":[{"kind":"identifier","name":"dir","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"emptyDirSync","location":{"filename":"https://deno.land/std@0.113.0/fs/empty_dir.ts","line":42,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that a directory is empty.\nDeletes directory contents if the directory is not empty.\nIf the directory does not exist, it is created.\nThe directory itself is not deleted.\nRequires the `--allow-read` and `--allow-write` flag."},"functionDef":{"params":[{"kind":"identifier","name":"dir","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"join","location":{"filename":"https://deno.land/std@0.113.0/fs/empty_dir.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"join"}},{"kind":"function","name":"move","location":{"filename":"https://deno.land/std@0.113.0/fs/move.ts","line":10,"col":0},"declarationKind":"export","jsDoc":{"doc":"Moves a file or directory"},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"overwrite","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"MoveOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MoveOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"moveSync","location":{"filename":"https://deno.land/std@0.113.0/fs/move.ts","line":39,"col":0},"declarationKind":"export","jsDoc":{"doc":"Moves a file or directory synchronously"},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"overwrite","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"MoveOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MoveOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"exists","location":{"filename":"https://deno.land/std@0.113.0/fs/move.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/exists.ts","imported":"exists"}},{"kind":"import","name":"existsSync","location":{"filename":"https://deno.land/std@0.113.0/fs/move.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/exists.ts","imported":"existsSync"}},{"kind":"import","name":"isSubdir","location":{"filename":"https://deno.land/std@0.113.0/fs/move.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"isSubdir"}},{"kind":"function","name":"_createWalkEntrySync","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":8,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create WalkEntry for the `path` synchronously"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"WalkEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkEntry"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"_createWalkEntry","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":22,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create WalkEntry for the `path` asynchronously"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WalkEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkEntry"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"WalkOptions","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":35,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"maxDepth","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":36,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"includeFiles","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":37,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"includeDirs","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":38,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"followSymlinks","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":39,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"exts","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":40,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"match","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":41,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},"typeParams":[]},{"name":"skip","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":42,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WalkEntry","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":75,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"[Deno.DirEntry]","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"[Deno.DirEntry]"}}],"methods":[],"properties":[{"name":"path","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":76,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"walk","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":103,"col":0},"declarationKind":"export","jsDoc":{"doc":"Walks the file tree rooted at root, yielding each file or directory in the\ntree filtered according to the given options. The files are walked in lexical\norder, which makes the output deterministic but means that for very large\ndirectories walk() can be inefficient.\n\nOptions:\n- maxDepth?: number = Infinity;\n- includeFiles?: boolean = true;\n- includeDirs?: boolean = true;\n- followSymlinks?: boolean = false;\n- exts?: string[];\n- match?: RegExp[];\n- skip?: RegExp[];\n\n```ts\n      import { walk } from \"./walk.ts\";\n      import { assert } from \"../testing/asserts.ts\";\n\n      for await (const entry of walk(\".\")) {\n        console.log(entry.path);\n        assert(entry.isFile);\n      }\n```"},"functionDef":{"params":[{"kind":"identifier","name":"root","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"maxDepth","value":"[UNSUPPORTED]"},{"kind":"assign","key":"includeFiles","value":"[UNSUPPORTED]"},{"kind":"assign","key":"includeDirs","value":"[UNSUPPORTED]"},{"kind":"assign","key":"followSymlinks","value":"[UNSUPPORTED]"},{"kind":"assign","key":"exts","value":"[UNSUPPORTED]"},{"kind":"assign","key":"match","value":"[UNSUPPORTED]"},{"kind":"assign","key":"skip","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"WalkOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WalkEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkEntry"}}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]}},{"kind":"function","name":"walkSync","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":159,"col":0},"declarationKind":"export","jsDoc":{"doc":"Same as walk() but uses synchronous ops"},"functionDef":{"params":[{"kind":"identifier","name":"root","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"maxDepth","value":"[UNSUPPORTED]"},{"kind":"assign","key":"includeFiles","value":"[UNSUPPORTED]"},{"kind":"assign","key":"includeDirs","value":"[UNSUPPORTED]"},{"kind":"assign","key":"followSymlinks","value":"[UNSUPPORTED]"},{"kind":"assign","key":"exts","value":"[UNSUPPORTED]"},{"kind":"assign","key":"match","value":"[UNSUPPORTED]"},{"kind":"assign","key":"skip","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"WalkOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"IterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WalkEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkEntry"}}],"typeName":"IterableIterator"}},"isAsync":false,"isGenerator":true,"typeParams":[]}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"basename","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"basename"}},{"kind":"import","name":"join","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"join"}},{"kind":"import","name":"normalize","location":{"filename":"https://deno.land/std@0.113.0/fs/walk.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"normalize"}},{"kind":"interface","name":"ExpandGlobOptions","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":21,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"Omit","kind":"typeRef","typeRef":{"typeParams":[{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}},{"repr":"os","kind":"literal","literal":{"kind":"string","string":"os"}}],"typeName":"Omit"}}],"methods":[],"properties":[{"name":"root","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":22,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"exclude","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":23,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"includeDirs","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":24,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"expandGlob","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":75,"col":0},"declarationKind":"export","jsDoc":{"doc":"Expand the glob string from the specified `root` directory and yield each\nresult as a `WalkEntry` object.\n\nSee [`globToRegExp()`](../path/glob.ts#globToRegExp) for details on supported\nsyntax.\n\nExample:\n```ts\n     import { expandGlob } from \"./expand_glob.ts\";\n     for await (const file of expandGlob(\"**\\/*.ts\")) {\n       console.log(file);\n     }\n```"},"functionDef":{"params":[{"kind":"identifier","name":"glob","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"root","value":"[UNSUPPORTED]"},{"kind":"assign","key":"exclude","value":"[UNSUPPORTED]"},{"kind":"assign","key":"includeDirs","value":"[UNSUPPORTED]"},{"kind":"assign","key":"extended","value":"[UNSUPPORTED]"},{"kind":"assign","key":"globstar","value":"[UNSUPPORTED]"},{"kind":"assign","key":"caseInsensitive","value":null}],"optional":false,"tsType":{"repr":"ExpandGlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ExpandGlobOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WalkEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkEntry"}}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]}},{"kind":"function","name":"expandGlobSync","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":183,"col":0},"declarationKind":"export","jsDoc":{"doc":"Synchronous version of `expandGlob()`.\n\nExample:\n\n```ts\n     import { expandGlobSync } from \"./expand_glob.ts\";\n     for (const file of expandGlobSync(\"**\\/*.ts\")) {\n       console.log(file);\n     }\n```"},"functionDef":{"params":[{"kind":"identifier","name":"glob","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"root","value":"[UNSUPPORTED]"},{"kind":"assign","key":"exclude","value":"[UNSUPPORTED]"},{"kind":"assign","key":"includeDirs","value":"[UNSUPPORTED]"},{"kind":"assign","key":"extended","value":"[UNSUPPORTED]"},{"kind":"assign","key":"globstar","value":"[UNSUPPORTED]"},{"kind":"assign","key":"caseInsensitive","value":null}],"optional":false,"tsType":{"repr":"ExpandGlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ExpandGlobOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"IterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WalkEntry","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WalkEntry"}}],"typeName":"IterableIterator"}},"isAsync":false,"isGenerator":true,"typeParams":[]}},{"kind":"import","name":"GlobOptions","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"GlobOptions"}},{"kind":"import","name":"globToRegExp","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"globToRegExp"}},{"kind":"import","name":"isAbsolute","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"isAbsolute"}},{"kind":"import","name":"isGlob","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"isGlob"}},{"kind":"import","name":"joinGlobs","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"joinGlobs"}},{"kind":"import","name":"resolve","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"resolve"}},{"kind":"import","name":"SEP_PATTERN","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"SEP_PATTERN"}},{"kind":"import","name":"_createWalkEntry","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/walk.ts","imported":"_createWalkEntry"}},{"kind":"import","name":"_createWalkEntrySync","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/walk.ts","imported":"_createWalkEntrySync"}},{"kind":"import","name":"walk","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/walk.ts","imported":"walk"}},{"kind":"import","name":"WalkEntry","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/walk.ts","imported":"WalkEntry"}},{"kind":"import","name":"walkSync","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/walk.ts","imported":"walkSync"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":18,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/fs/expand_glob.ts","line":19,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"function","name":"ensureDir","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","line":9,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the directory exists.\nIf the directory structure does not exist, it is created. Like mkdir -p.\nRequires the `--allow-read` and `--allow-write` flag."},"functionDef":{"params":[{"kind":"identifier","name":"dir","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ensureDirSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","line":34,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the directory exists.\nIf the directory structure does not exist, it is created. Like mkdir -p.\nRequires the `--allow-read` and `--allow-write` flag."},"functionDef":{"params":[{"kind":"identifier","name":"dir","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"getFileInfoType","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"getFileInfoType"}},{"kind":"function","name":"ensureLink","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":14,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the hard link exists.\nIf the directory structure does not exist, it is created.\n","tags":[{"kind":"param","name":"src","doc":"the source file path. Directory hard links are not allowed."},{"kind":"param","name":"dest","doc":"the destination link path"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ensureLinkSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":38,"col":0},"declarationKind":"export","jsDoc":{"doc":"Ensures that the hard link exists.\nIf the directory structure does not exist, it is created.\n","tags":[{"kind":"param","name":"src","doc":"the source file path. Directory hard links are not allowed."},{"kind":"param","name":"dest","doc":"the destination link path"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":null}},{"kind":"import","name":"ensureDir","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDir"}},{"kind":"import","name":"ensureDirSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDirSync"}},{"kind":"import","name":"exists","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/exists.ts","imported":"exists"}},{"kind":"import","name":"existsSync","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/exists.ts","imported":"existsSync"}},{"kind":"import","name":"getFileInfoType","location":{"filename":"https://deno.land/std@0.113.0/fs/ensure_link.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"getFileInfoType"}},{"kind":"interface","name":"CopyOptions","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":8,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"overwrite","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":12,"col":2},"jsDoc":{"doc":"overwrite existing file or directory. Default is `false`"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"preserveTimestamps","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":19,"col":2},"jsDoc":{"doc":"When `true`, will set last modification and access times to the ones of the\noriginal source files.\nWhen `false`, timestamp behavior is OS-dependent.\nDefault is `false`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":241,"col":0},"declarationKind":"export","jsDoc":{"doc":"Copy a file or directory. The directory can have contents. Like `cp -r`.\nRequires the `--allow-read` and `--allow-write` flag.","tags":[{"kind":"param","name":"src","doc":"the file/directory path.\nNote that if `src` is a directory it will copy everything inside\nof this directory, not the entire directory itself"},{"kind":"param","name":"dest","doc":"the destination path. Note that if `src` is a file, `dest` cannot\nbe a directory"},{"kind":"param","name":"options"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"CopyOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CopyOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"copySync","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":280,"col":0},"declarationKind":"export","jsDoc":{"doc":"Copy a file or directory. The directory can have contents. Like `cp -r`.\nRequires the `--allow-read` and `--allow-write` flag.","tags":[{"kind":"param","name":"src","doc":"the file/directory path.\nNote that if `src` is a directory it will copy everything inside\nof this directory, not the entire directory itself"},{"kind":"param","name":"dest","doc":"the destination path. Note that if `src` is a file, `dest` cannot\nbe a directory"},{"kind":"param","name":"options"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"CopyOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CopyOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":null}},{"kind":"import","name":"ensureDir","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDir"}},{"kind":"import","name":"ensureDirSync","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/ensure_dir.ts","imported":"ensureDirSync"}},{"kind":"import","name":"getFileInfoType","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"getFileInfoType"}},{"kind":"import","name":"isSubdir","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/_util.ts","imported":"isSubdir"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/fs/copy.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}}],"/hash/mod.ts":[{"kind":"interface","name":"Hasher","location":{"filename":"https://deno.land/std@0.113.0/hash/hasher.ts","line":6,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[{"name":"update","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/hash/hasher.ts","line":7,"col":2},"optional":false,"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Message","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Message"}}}],"returnType":{"repr":"this","kind":"this","this":true},"typeParams":[]},{"name":"digest","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/hash/hasher.ts","line":8,"col":2},"optional":false,"params":[],"returnType":{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}},"typeParams":[]},{"name":"toString","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/hash/hasher.ts","line":9,"col":2},"optional":false,"params":[{"kind":"identifier","name":"format","optional":true,"tsType":{"repr":"OutputFormat","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OutputFormat"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"properties":[],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"variable","name":"supportedAlgorithms","location":{"filename":"https://deno.land/std@0.113.0/hash/mod.ts","line":9,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated"}]},"variableDef":{"tsType":{"repr":"","kind":"array","array":{"repr":"","kind":"union","union":[{"repr":"md2","kind":"literal","literal":{"kind":"string","string":"md2"}},{"repr":"md4","kind":"literal","literal":{"kind":"string","string":"md4"}},{"repr":"md5","kind":"literal","literal":{"kind":"string","string":"md5"}},{"repr":"ripemd160","kind":"literal","literal":{"kind":"string","string":"ripemd160"}},{"repr":"ripemd320","kind":"literal","literal":{"kind":"string","string":"ripemd320"}},{"repr":"sha1","kind":"literal","literal":{"kind":"string","string":"sha1"}},{"repr":"sha224","kind":"literal","literal":{"kind":"string","string":"sha224"}},{"repr":"sha256","kind":"literal","literal":{"kind":"string","string":"sha256"}},{"repr":"sha384","kind":"literal","literal":{"kind":"string","string":"sha384"}},{"repr":"sha512","kind":"literal","literal":{"kind":"string","string":"sha512"}},{"repr":"sha3-224","kind":"literal","literal":{"kind":"string","string":"sha3-224"}},{"repr":"sha3-256","kind":"literal","literal":{"kind":"string","string":"sha3-256"}},{"repr":"sha3-384","kind":"literal","literal":{"kind":"string","string":"sha3-384"}},{"repr":"sha3-512","kind":"literal","literal":{"kind":"string","string":"sha3-512"}},{"repr":"keccak224","kind":"literal","literal":{"kind":"string","string":"keccak224"}},{"repr":"keccak256","kind":"literal","literal":{"kind":"string","string":"keccak256"}},{"repr":"keccak384","kind":"literal","literal":{"kind":"string","string":"keccak384"}},{"repr":"keccak512","kind":"literal","literal":{"kind":"string","string":"keccak512"}},{"repr":"blake3","kind":"literal","literal":{"kind":"string","string":"blake3"}}]}},"kind":"const"}},{"kind":"typeAlias","name":"SupportedAlgorithm","location":{"filename":"https://deno.land/std@0.113.0/hash/mod.ts","line":31,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"supportedAlgorithms","kind":"typeQuery","typeQuery":"supportedAlgorithms"},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}},"typeParams":[]}},{"kind":"function","name":"createHash","location":{"filename":"https://deno.land/std@0.113.0/hash/mod.ts","line":38,"col":0},"declarationKind":"export","jsDoc":{"doc":"Creates a new `Hash` instance.\n","tags":[{"kind":"param","name":"algorithm","doc":"name of hash algorithm to use"},{"kind":"deprecated"}]},"functionDef":{"params":[{"kind":"identifier","name":"algorithm","optional":false,"tsType":{"repr":"SupportedAlgorithm","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SupportedAlgorithm"}}}],"returnType":{"repr":"Hasher","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Hasher"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"Hash","location":{"filename":"https://deno.land/std@0.113.0/hash/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/hash/_wasm/hash.ts","imported":"Hash"}},{"kind":"import","name":"Hasher","location":{"filename":"https://deno.land/std@0.113.0/hash/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/hash/hasher.ts","imported":"Hasher"}}],"/http/mod.ts":[{"kind":"enum","name":"Status","location":{"filename":"https://deno.land/std@0.113.0/http/http_status.ts","line":16,"col":0},"declarationKind":"export","jsDoc":{"doc":"Enum of HTTP status codes.\n\n```ts\nimport {\n  Status,\n  STATUS_TEXT,\n} from \"https://deno.land/std@$STD_VERSION/http/http_status.ts\";\n\nconsole.log(Status.NotFound); //=> 404\nconsole.log(STATUS_TEXT.get(Status.NotFound)); //=> \"Not Found\"\n```"},"enumDef":{"members":[{"name":"Continue","init":{"repr":"100","kind":"literal","literal":{"kind":"number","number":100}},"jsDoc":{"doc":"RFC 7231, 6.2.1"}},{"name":"SwitchingProtocols","init":{"repr":"101","kind":"literal","literal":{"kind":"number","number":101}},"jsDoc":{"doc":"RFC 7231, 6.2.2"}},{"name":"Processing","init":{"repr":"102","kind":"literal","literal":{"kind":"number","number":102}},"jsDoc":{"doc":"RFC 2518, 10.1"}},{"name":"EarlyHints","init":{"repr":"103","kind":"literal","literal":{"kind":"number","number":103}},"jsDoc":{"doc":"RFC 8297 *"}},{"name":"OK","init":{"repr":"200","kind":"literal","literal":{"kind":"number","number":200}},"jsDoc":{"doc":"RFC 7231, 6.3.1"}},{"name":"Created","init":{"repr":"201","kind":"literal","literal":{"kind":"number","number":201}},"jsDoc":{"doc":"RFC 7231, 6.3.2"}},{"name":"Accepted","init":{"repr":"202","kind":"literal","literal":{"kind":"number","number":202}},"jsDoc":{"doc":"RFC 7231, 6.3.3"}},{"name":"NonAuthoritativeInfo","init":{"repr":"203","kind":"literal","literal":{"kind":"number","number":203}},"jsDoc":{"doc":"RFC 7231, 6.3.4"}},{"name":"NoContent","init":{"repr":"204","kind":"literal","literal":{"kind":"number","number":204}},"jsDoc":{"doc":"RFC 7231, 6.3.5"}},{"name":"ResetContent","init":{"repr":"205","kind":"literal","literal":{"kind":"number","number":205}},"jsDoc":{"doc":"RFC 7231, 6.3.6"}},{"name":"PartialContent","init":{"repr":"206","kind":"literal","literal":{"kind":"number","number":206}},"jsDoc":{"doc":"RFC 7233, 4.1"}},{"name":"MultiStatus","init":{"repr":"207","kind":"literal","literal":{"kind":"number","number":207}},"jsDoc":{"doc":"RFC 4918, 11.1"}},{"name":"AlreadyReported","init":{"repr":"208","kind":"literal","literal":{"kind":"number","number":208}},"jsDoc":{"doc":"RFC 5842, 7.1"}},{"name":"IMUsed","init":{"repr":"226","kind":"literal","literal":{"kind":"number","number":226}},"jsDoc":{"doc":"RFC 3229, 10.4.1"}},{"name":"MultipleChoices","init":{"repr":"300","kind":"literal","literal":{"kind":"number","number":300}},"jsDoc":{"doc":"RFC 7231, 6.4.1"}},{"name":"MovedPermanently","init":{"repr":"301","kind":"literal","literal":{"kind":"number","number":301}},"jsDoc":{"doc":"RFC 7231, 6.4.2"}},{"name":"Found","init":{"repr":"302","kind":"literal","literal":{"kind":"number","number":302}},"jsDoc":{"doc":"RFC 7231, 6.4.3"}},{"name":"SeeOther","init":{"repr":"303","kind":"literal","literal":{"kind":"number","number":303}},"jsDoc":{"doc":"RFC 7231, 6.4.4"}},{"name":"NotModified","init":{"repr":"304","kind":"literal","literal":{"kind":"number","number":304}},"jsDoc":{"doc":"RFC 7232, 4.1"}},{"name":"UseProxy","init":{"repr":"305","kind":"literal","literal":{"kind":"number","number":305}},"jsDoc":{"doc":"RFC 7231, 6.4.5"}},{"name":"TemporaryRedirect","init":{"repr":"307","kind":"literal","literal":{"kind":"number","number":307}},"jsDoc":{"doc":"RFC 7231, 6.4.7"}},{"name":"PermanentRedirect","init":{"repr":"308","kind":"literal","literal":{"kind":"number","number":308}},"jsDoc":{"doc":"RFC 7538, 3"}},{"name":"BadRequest","init":{"repr":"400","kind":"literal","literal":{"kind":"number","number":400}},"jsDoc":{"doc":"RFC 7231, 6.5.1"}},{"name":"Unauthorized","init":{"repr":"401","kind":"literal","literal":{"kind":"number","number":401}},"jsDoc":{"doc":"RFC 7235, 3.1"}},{"name":"PaymentRequired","init":{"repr":"402","kind":"literal","literal":{"kind":"number","number":402}},"jsDoc":{"doc":"RFC 7231, 6.5.2"}},{"name":"Forbidden","init":{"repr":"403","kind":"literal","literal":{"kind":"number","number":403}},"jsDoc":{"doc":"RFC 7231, 6.5.3"}},{"name":"NotFound","init":{"repr":"404","kind":"literal","literal":{"kind":"number","number":404}},"jsDoc":{"doc":"RFC 7231, 6.5.4"}},{"name":"MethodNotAllowed","init":{"repr":"405","kind":"literal","literal":{"kind":"number","number":405}},"jsDoc":{"doc":"RFC 7231, 6.5.5"}},{"name":"NotAcceptable","init":{"repr":"406","kind":"literal","literal":{"kind":"number","number":406}},"jsDoc":{"doc":"RFC 7231, 6.5.6"}},{"name":"ProxyAuthRequired","init":{"repr":"407","kind":"literal","literal":{"kind":"number","number":407}},"jsDoc":{"doc":"RFC 7235, 3.2"}},{"name":"RequestTimeout","init":{"repr":"408","kind":"literal","literal":{"kind":"number","number":408}},"jsDoc":{"doc":"RFC 7231, 6.5.7"}},{"name":"Conflict","init":{"repr":"409","kind":"literal","literal":{"kind":"number","number":409}},"jsDoc":{"doc":"RFC 7231, 6.5.8"}},{"name":"Gone","init":{"repr":"410","kind":"literal","literal":{"kind":"number","number":410}},"jsDoc":{"doc":"RFC 7231, 6.5.9"}},{"name":"LengthRequired","init":{"repr":"411","kind":"literal","literal":{"kind":"number","number":411}},"jsDoc":{"doc":"RFC 7231, 6.5.10"}},{"name":"PreconditionFailed","init":{"repr":"412","kind":"literal","literal":{"kind":"number","number":412}},"jsDoc":{"doc":"RFC 7232, 4.2"}},{"name":"RequestEntityTooLarge","init":{"repr":"413","kind":"literal","literal":{"kind":"number","number":413}},"jsDoc":{"doc":"RFC 7231, 6.5.11"}},{"name":"RequestURITooLong","init":{"repr":"414","kind":"literal","literal":{"kind":"number","number":414}},"jsDoc":{"doc":"RFC 7231, 6.5.12"}},{"name":"UnsupportedMediaType","init":{"repr":"415","kind":"literal","literal":{"kind":"number","number":415}},"jsDoc":{"doc":"RFC 7231, 6.5.13"}},{"name":"RequestedRangeNotSatisfiable","init":{"repr":"416","kind":"literal","literal":{"kind":"number","number":416}},"jsDoc":{"doc":"RFC 7233, 4.4"}},{"name":"ExpectationFailed","init":{"repr":"417","kind":"literal","literal":{"kind":"number","number":417}},"jsDoc":{"doc":"RFC 7231, 6.5.14"}},{"name":"Teapot","init":{"repr":"418","kind":"literal","literal":{"kind":"number","number":418}},"jsDoc":{"doc":"RFC 7168, 2.3.3"}},{"name":"MisdirectedRequest","init":{"repr":"421","kind":"literal","literal":{"kind":"number","number":421}},"jsDoc":{"doc":"RFC 7540, 9.1.2"}},{"name":"UnprocessableEntity","init":{"repr":"422","kind":"literal","literal":{"kind":"number","number":422}},"jsDoc":{"doc":"RFC 4918, 11.2"}},{"name":"Locked","init":{"repr":"423","kind":"literal","literal":{"kind":"number","number":423}},"jsDoc":{"doc":"RFC 4918, 11.3"}},{"name":"FailedDependency","init":{"repr":"424","kind":"literal","literal":{"kind":"number","number":424}},"jsDoc":{"doc":"RFC 4918, 11.4"}},{"name":"TooEarly","init":{"repr":"425","kind":"literal","literal":{"kind":"number","number":425}},"jsDoc":{"doc":"RFC 8470, 5.2"}},{"name":"UpgradeRequired","init":{"repr":"426","kind":"literal","literal":{"kind":"number","number":426}},"jsDoc":{"doc":"RFC 7231, 6.5.15"}},{"name":"PreconditionRequired","init":{"repr":"428","kind":"literal","literal":{"kind":"number","number":428}},"jsDoc":{"doc":"RFC 6585, 3"}},{"name":"TooManyRequests","init":{"repr":"429","kind":"literal","literal":{"kind":"number","number":429}},"jsDoc":{"doc":"RFC 6585, 4"}},{"name":"RequestHeaderFieldsTooLarge","init":{"repr":"431","kind":"literal","literal":{"kind":"number","number":431}},"jsDoc":{"doc":"RFC 6585, 5"}},{"name":"UnavailableForLegalReasons","init":{"repr":"451","kind":"literal","literal":{"kind":"number","number":451}},"jsDoc":{"doc":"RFC 7725, 3"}},{"name":"InternalServerError","init":{"repr":"500","kind":"literal","literal":{"kind":"number","number":500}},"jsDoc":{"doc":"RFC 7231, 6.6.1"}},{"name":"NotImplemented","init":{"repr":"501","kind":"literal","literal":{"kind":"number","number":501}},"jsDoc":{"doc":"RFC 7231, 6.6.2"}},{"name":"BadGateway","init":{"repr":"502","kind":"literal","literal":{"kind":"number","number":502}},"jsDoc":{"doc":"RFC 7231, 6.6.3"}},{"name":"ServiceUnavailable","init":{"repr":"503","kind":"literal","literal":{"kind":"number","number":503}},"jsDoc":{"doc":"RFC 7231, 6.6.4"}},{"name":"GatewayTimeout","init":{"repr":"504","kind":"literal","literal":{"kind":"number","number":504}},"jsDoc":{"doc":"RFC 7231, 6.6.5"}},{"name":"HTTPVersionNotSupported","init":{"repr":"505","kind":"literal","literal":{"kind":"number","number":505}},"jsDoc":{"doc":"RFC 7231, 6.6.6"}},{"name":"VariantAlsoNegotiates","init":{"repr":"506","kind":"literal","literal":{"kind":"number","number":506}},"jsDoc":{"doc":"RFC 2295, 8.1"}},{"name":"InsufficientStorage","init":{"repr":"507","kind":"literal","literal":{"kind":"number","number":507}},"jsDoc":{"doc":"RFC 4918, 11.5"}},{"name":"LoopDetected","init":{"repr":"508","kind":"literal","literal":{"kind":"number","number":508}},"jsDoc":{"doc":"RFC 5842, 7.2"}},{"name":"NotExtended","init":{"repr":"510","kind":"literal","literal":{"kind":"number","number":510}},"jsDoc":{"doc":"RFC 2774, 7"}},{"name":"NetworkAuthenticationRequired","init":{"repr":"511","kind":"literal","literal":{"kind":"number","number":511}},"jsDoc":{"doc":"RFC 6585, 6"}}]}},{"kind":"variable","name":"STATUS_TEXT","location":{"filename":"https://deno.land/std@0.113.0/http/http_status.ts","line":159,"col":0},"declarationKind":"export","jsDoc":{"doc":"Map from status code to status text.\n\n```ts\nimport {\n  Status,\n  STATUS_TEXT,\n} from \"https://deno.land/std@$STD_VERSION/http/http_status.ts\";\n\nconsole.log(Status.NotFound); //=> 404\nconsole.log(STATUS_TEXT.get(Status.NotFound)); //=> \"Not Found\"\n```"},"variableDef":{"tsType":{"repr":"Map","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Status","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Status"}},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Map"}},"kind":"const"}},{"kind":"interface","name":"Cookie","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":7,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":9,"col":2},"jsDoc":{"doc":"Name of the cookie."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"value","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":11,"col":2},"jsDoc":{"doc":"Value of the cookie."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"expires","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":13,"col":2},"jsDoc":{"doc":"Expiration date of the cookie."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"typeParams":[]},{"name":"maxAge","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":15,"col":2},"jsDoc":{"doc":"Max-Age of the Cookie. Max-Age must be an integer superior or equal to 0."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"domain","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":17,"col":2},"jsDoc":{"doc":"Specifies those hosts to which the cookie will be sent."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"path","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":19,"col":2},"jsDoc":{"doc":"Indicates a URL path that must exist in the request."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"secure","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":21,"col":2},"jsDoc":{"doc":"Indicates if the cookie is made using SSL & HTTPS."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"httpOnly","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":23,"col":2},"jsDoc":{"doc":"Indicates that cookie is not accessible via JavaScript."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"sameSite","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":28,"col":2},"jsDoc":{"doc":"Allows servers to assert that a cookie ought not to\nbe sent along with cross-site requests."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Strict","kind":"literal","literal":{"kind":"string","string":"Strict"}},{"repr":"Lax","kind":"literal","literal":{"kind":"string","string":"Lax"}},{"repr":"None","kind":"literal","literal":{"kind":"string","string":"None"}}]},"typeParams":[]},{"name":"unparsed","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":30,"col":2},"jsDoc":{"doc":"Additional key value pairs with the form \"key=value\""},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"getCookies","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":170,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse cookies of a header","tags":[{"kind":"param","name":"headers","type":"Headers","doc":"The headers instance to get cookies from"},{"kind":"return","type":"Object","doc":"Object with cookie names as keys"}]},"functionDef":{"params":[{"kind":"identifier","name":"headers","optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}}}],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"setCookie","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":191,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set the cookie header properly in the headers","tags":[{"kind":"param","name":"headers","type":"Headers","doc":"The headers instance to set the cookie to"},{"kind":"param","name":"cookie","type":"Object","doc":"Cookie to set"}]},"functionDef":{"params":[{"kind":"identifier","name":"headers","optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}}},{"kind":"identifier","name":"cookie","optional":false,"tsType":{"repr":"Cookie","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Cookie"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"deleteCookie","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":207,"col":0},"declarationKind":"export","jsDoc":{"doc":"Set the cookie header with empty value in the headers to delete it","tags":[{"kind":"param","name":"headers","type":"Headers","doc":"The headers instance to delete the cookie from"},{"kind":"param","name":"name","type":"string","doc":"Name of cookie"},{"kind":"param","name":"attributes","type":"Object","doc":"Additional cookie attributes"}]},"functionDef":{"params":[{"kind":"identifier","name":"headers","optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}}},{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"attributes","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"path","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"domain","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"toIMF","location":{"filename":"https://deno.land/std@0.113.0/http/cookie.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/datetime/mod.ts","imported":"toIMF"}},{"kind":"interface","name":"ConnInfo","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":23,"col":0},"declarationKind":"export","jsDoc":{"doc":"Information about the connection a request arrived on."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"localAddr","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":25,"col":2},"jsDoc":{"doc":"The local address of the connection."},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"Deno.Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Addr"}},"typeParams":[]},{"name":"remoteAddr","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":27,"col":2},"jsDoc":{"doc":"The remote address of the connection."},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"Deno.Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Addr"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"Handler","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":38,"col":0},"declarationKind":"export","jsDoc":{"doc":"A handler for HTTP requests. Consumes a request and connection information\nand returns a response.\n\nIf a handler throws, the server calling the handler will assume the impact\nof the error is isolated to the individual request. It will catch the error\nand close the underlying connection."},"typeAliasDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Response","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Response"}},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Response","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Response"}}],"typeName":"Promise"}}]},"params":[{"kind":"identifier","name":"request","optional":false,"tsType":{"repr":"Request","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Request"}}},{"kind":"identifier","name":"connInfo","optional":false,"tsType":{"repr":"ConnInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnInfo"}}}],"typeParams":[]}},"typeParams":[]}},{"kind":"function","name":"_parseAddrFromStr","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":59,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parse an address from a string.\n\nThrows a `TypeError` when the address is invalid.\n\n```ts\nimport { _parseAddrFromStr } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst addr = \"::1:8000\";\nconst listenOptions = _parseAddrFromStr(addr);\n```\n","tags":[{"kind":"param","name":"addr","doc":"The address string to parse."},{"kind":"param","name":"defaultPort","doc":"Default port when not included in the address string."},{"kind":"return","doc":"The parsed address."}]},"functionDef":{"params":[{"kind":"identifier","name":"addr","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"identifier","name":"defaultPort","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Deno.ListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.ListenOptions"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"ServerInit","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":90,"col":0},"declarationKind":"export","jsDoc":{"doc":"Options for running an HTTP server."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"addr","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":102,"col":2},"jsDoc":{"doc":"Optionally specifies the address to listen on, in the form\n\"host:port\".\n\nIf the port is omitted, `:80` is used by default for HTTP when invoking\nnon-TLS methods such as `Server.listenAndServe`, and `:443` is\nused by default for HTTPS when invoking TLS methods such as\n`Server.listenAndServeTls`.\n\nIf the host is omitted, the non-routable meta-address `0.0.0.0` is used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"handler","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":105,"col":2},"jsDoc":{"doc":"The handler to invoke for individual HTTP requests."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Handler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handler"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"Server","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":109,"col":0},"declarationKind":"export","jsDoc":{"doc":"Used to construct an HTTP server."},"classDef":{"isAbstract":false,"constructors":[{"jsDoc":{"doc":"Constructs a new HTTP Server instance.\n\n```ts\nimport { Server } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst addr = \":4505\";\nconst handler = (request: Request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n   \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n};\n\nconst server = new Server({ addr, handler });\n```\n","tags":[{"kind":"param","name":"serverInit","doc":"Options for running an HTTP server."}]},"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"serverInit","optional":false,"tsType":{"repr":"ServerInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerInit"}}}],"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":136,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Accept incoming connections on the given listener, and handle requests on\nthese connections with the given handler.\n\nHTTP/2 support is only enabled if the provided Deno.Listener returns TLS\nconnections and was configured with \"h2\" in the ALPN protocols.\n\nThrows a server closed error if called after the server has been closed.\n\nWill always close the created listener.\n\n```ts\nimport { Server } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst handler = (request: Request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n   \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n};\n\nconst server = new Server({ handler });\nconst listener = Deno.listen({ port: 4505 });\n\nconsole.log(\"server listening on http://localhost:4505\");\n\nawait server.serve(listener);\n```\n","tags":[{"kind":"param","name":"listener","doc":"The listener to accept connections from."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"serve","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"Deno.Listener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Listener"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":173,"col":2}},{"jsDoc":{"doc":"Create a listener on the server, accept incoming connections, and handle\nrequests on these connections with the given handler.\n\nIf the server was constructed with the port omitted from the address, `:80`\nis used.\n\nIf the server was constructed with the host omitted from the address, the\nnon-routable meta-address `0.0.0.0` is used.\n\nThrows a server closed error if the server has been closed.\n\n```ts\nimport { Server } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst addr = \":4505\";\nconst handler = (request: Request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n   \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n};\n\nconst server = new Server({ addr, handler });\n\nconsole.log(\"server listening on http://localhost:4505\");\n\nawait server.listenAndServe();\n```"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listenAndServe","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":224,"col":2}},{"jsDoc":{"doc":"Create a listener on the server, accept incoming connections, upgrade them\nto TLS, and handle requests on these connections with the given handler.\n\nIf the server was constructed with the port omitted from the address, `:443`\nis used.\n\nIf the server was constructed with the host omitted from the address, the\nnon-routable meta-address `0.0.0.0` is used.\n\nThrows a server closed error if the server has been closed.\n\n```ts\nimport { Server } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst addr = \":4505\";\nconst handler = (request: Request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n   \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n};\n\nconst server = new Server({ addr, handler });\n\nconst certFile = \"/path/to/certFile.crt\";\nconst keyFile = \"/path/to/keyFile.key\";\n\nconsole.log(\"server listening on https://localhost:4505\");\n\nawait server.listenAndServeTls(certFile, keyFile);\n```\n","tags":[{"kind":"param","name":"certFile","doc":"The path to the file containing the TLS certificate."},{"kind":"param","name":"keyFile","doc":"The path to the file containing the TLS private key."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listenAndServeTls","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"certFile","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"keyFile","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":277,"col":2}},{"jsDoc":{"doc":"Immediately close the server listeners and associated HTTP connections.\n\nThrows a server closed error if called after the server has been closed."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":302,"col":2}},{"jsDoc":{"doc":"Get whether the server is closed."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"closed","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":327,"col":2}},{"jsDoc":{"doc":"Get the list of network addresses the server is listening on."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"addrs","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"Deno.Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Addr"}}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":332,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"interface","name":"ServeInit","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":530,"col":0},"declarationKind":"export","jsDoc":{"doc":"Additional serve options."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"signal","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":532,"col":2},"jsDoc":{"doc":"An AbortSignal to close the server and all connections."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"AbortSignal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AbortSignal"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"serve","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":559,"col":0},"declarationKind":"export","jsDoc":{"doc":"Constructs a server, accepts incoming connections on the given listener, and\nhandles requests on these connections with the given handler.\n\n```ts\nimport { serve } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst listener = Deno.listen({ port: 4505 });\n\nconsole.log(\"server listening on http://localhost:4505\");\n\nawait serve(listener, (request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n    \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n});\n```\n","tags":[{"kind":"param","name":"listener","doc":"The listener to accept connections from."},{"kind":"param","name":"handler","doc":"The handler for individual HTTP requests."},{"kind":"param","name":"options","doc":"Optional serve options."}]},"functionDef":{"params":[{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"Deno.Listener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Listener"}}},{"kind":"identifier","name":"handler","optional":false,"tsType":{"repr":"Handler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handler"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ServeInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServeInit"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"listenAndServe","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":603,"col":0},"declarationKind":"export","jsDoc":{"doc":"Constructs a server, creates a listener on the given address, accepts\nincoming connections, and handles requests on these connections with the\ngiven handler.\n\nIf the port is omitted from the address, `:80` is used.\n\nIf the host is omitted from the address, the non-routable meta-address\n`0.0.0.0` is used.\n\n```ts\nimport { listenAndServe } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst addr = \":4505\";\n\nconsole.log(\"server listening on http://localhost:4505\");\n\nawait listenAndServe(addr, (request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n    \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n});\n```\n","tags":[{"kind":"param","name":"addr","doc":"The address to listen on."},{"kind":"param","name":"handler","doc":"The handler for individual HTTP requests."},{"kind":"param","name":"options","doc":"Optional serve options."}]},"functionDef":{"params":[{"kind":"identifier","name":"addr","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"handler","optional":false,"tsType":{"repr":"Handler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handler"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ServeInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServeInit"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"listenAndServeTls","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":651,"col":0},"declarationKind":"export","jsDoc":{"doc":"Constructs a server, creates a listener on the given address, accepts\nincoming connections, upgrades them to TLS, and handles requests on these\nconnections with the given handler.\n\nIf the port is omitted from the address, `:443` is used.\n\nIf the host is omitted from the address, the non-routable meta-address\n`0.0.0.0` is used.\n\n```ts\nimport { listenAndServeTls } from \"https://deno.land/std@$STD_VERSION/http/server.ts\";\n\nconst addr = \":4505\";\nconst certFile = \"/path/to/certFile.crt\";\nconst keyFile = \"/path/to/keyFile.key\";\n\nconsole.log(\"server listening on http://localhost:4505\");\n\nawait listenAndServeTls(addr, certFile, keyFile, (request) => {\n  const body = `Your user-agent is:\\n\\n${request.headers.get(\n    \"user-agent\",\n  ) ?? \"Unknown\"}`;\n\n  return new Response(body, { status: 200 });\n});\n```\n","tags":[{"kind":"param","name":"addr","doc":"The address to listen on."},{"kind":"param","name":"certFile","doc":"The path to the file containing the TLS certificate."},{"kind":"param","name":"keyFile","doc":"The path to the file containing the TLS private key."},{"kind":"param","name":"handler","doc":"The handler for individual HTTP requests."},{"kind":"param","name":"options","doc":"Optional serve options."}]},"functionDef":{"params":[{"kind":"identifier","name":"addr","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"certFile","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"keyFile","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"handler","optional":false,"tsType":{"repr":"Handler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handler"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ServeInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServeInit"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"delay","location":{"filename":"https://deno.land/std@0.113.0/http/server.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/mod.ts","imported":"delay"}}],"/io/mod.ts":[{"kind":"class","name":"StringWriter","location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":8,"col":0},"declarationKind":"export","jsDoc":{"doc":"Writer utility for buffering string chunks"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"assign","left":{"kind":"identifier","name":"base","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},"right":"[UNSUPPORTED]","tsType":null}],"location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":13,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"array","array":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"chunks","location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":9,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"byteLength","location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":10,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"cache","location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":11,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"write","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":19,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeSync","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":23,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toString","kind":"method","functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":30,"col":2}}],"extends":null,"implements":[{"repr":"Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writer"}},{"repr":"WriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriterSync"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"Writer","location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/types.d.ts","imported":"Writer"}},{"kind":"import","name":"WriterSync","location":{"filename":"https://deno.land/std@0.113.0/io/writers.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/types.d.ts","imported":"WriterSync"}},{"kind":"function","name":"copyN","location":{"filename":"https://deno.land/std@0.113.0/io/util.ts","line":16,"col":0},"declarationKind":"export","jsDoc":{"doc":"Copy N size at the most. If read size is lesser than N, then returns nread","tags":[{"kind":"param","name":"r","doc":"Reader"},{"kind":"param","name":"dest","doc":"Writer"},{"kind":"param","name":"size","doc":"Read size"}]},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}},{"kind":"identifier","name":"dest","optional":false,"tsType":{"repr":"Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writer"}}},{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readInt","location":{"filename":"https://deno.land/std@0.113.0/io/util.ts","line":60,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read big endian 32bit integer from BufReader","tags":[{"kind":"param","name":"buf"}]},"functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readLong","location":{"filename":"https://deno.land/std@0.113.0/io/util.ts","line":74,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read big endian 64bit long from BufReader","tags":[{"kind":"param","name":"buf"}]},"functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readShort","location":{"filename":"https://deno.land/std@0.113.0/io/util.ts","line":48,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read big endian 16bit short from BufReader","tags":[{"kind":"param","name":"buf"}]},"functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"sliceLongToBytes","location":{"filename":"https://deno.land/std@0.113.0/io/util.ts","line":94,"col":0},"declarationKind":"export","jsDoc":{"doc":"Slice number into 64bit big endian byte array","tags":[{"kind":"param","name":"d","doc":"The number to be sliced"},{"kind":"param","name":"dest","doc":"The sliced array"}]},"functionDef":{"params":[{"kind":"identifier","name":"d","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"dest","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":29,"col":0},"declarationKind":"export","jsDoc":{"doc":"A variable-sized buffer of bytes with `read()` and `write()` methods.\n\nBuffer is almost always used with some I/O like files and sockets. It allows\none to buffer up a download from a socket. Buffer grows and shrinks as\nnecessary.\n\nBuffer is NOT the same thing as Node's Buffer. Node's Buffer was created in\n2009 before JavaScript had the concept of ArrayBuffers. It's simply a\nnon-standard ArrayBuffer.\n\nArrayBuffer is a fixed memory allocation. Buffer is implemented on top of\nArrayBuffer.\n\nBased on [Go Buffer](https://golang.org/pkg/bytes/#Buffer)."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"ab","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"ArrayBufferLike","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBufferLike"}},{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"ArrayLike"}}]}}],"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":33,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Returns a slice holding the unread portion of the buffer.\n\nThe slice is valid for use only until the next buffer modification (that\nis, only until the next call to a method like `read()`, `write()`,\n`reset()`, or `truncate()`). If `options.copy` is false the slice aliases the buffer content at\nleast until the next buffer modification, so immediate changes to the\nslice will affect the result of future reads.","tags":[{"kind":"param","name":"options","doc":"Defaults to `{ copy: true }`"}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bytes","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":46,"col":2}},{"jsDoc":{"doc":"Returns whether the unread portion of the buffer is empty."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"empty","kind":"method","functionDef":{"params":[],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":52,"col":2}},{"jsDoc":{"doc":"A read only number of bytes of the unread portion of the buffer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"length","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":57,"col":2}},{"jsDoc":{"doc":"The read only capacity of the buffer's underlying byte slice, that is,\nthe total space allocated for the buffer's data."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"capacity","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":63,"col":2}},{"jsDoc":{"doc":"Discards all but the first `n` unread bytes from the buffer but\ncontinues to use the same allocated storage. It throws if `n` is\nnegative or greater than the length of the buffer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"truncate","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":70,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reset","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":81,"col":2}},{"jsDoc":{"doc":"Reads the next `p.length` bytes from the buffer or until the buffer is\ndrained. Returns the number of bytes read. If the buffer has no data to\nreturn, the return is EOF (`null`)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readSync","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":103,"col":2}},{"jsDoc":{"doc":"Reads the next `p.length` bytes from the buffer or until the buffer is\ndrained. Resolves to the number of bytes read. If the buffer has no\ndata to return, resolves to EOF (`null`).\n\nNOTE: This methods reads bytes synchronously; it's provided for\ncompatibility with `Reader` interfaces."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"read","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":125,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeSync","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":130,"col":2}},{"jsDoc":{"doc":"NOTE: This methods writes bytes synchronously; it's provided for\ncompatibility with `Writer` interface."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"write","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":137,"col":2}},{"jsDoc":{"doc":"Grows the buffer's capacity, if necessary, to guarantee space for\nanother `n` bytes. After `.grow(n)`, at least `n` bytes can be written to\nthe buffer without another allocation. If `n` is negative, `.grow()` will\nthrow. If the buffer can't grow it will throw an error.\n\nBased on Go Lang's\n[Buffer.Grow](https://golang.org/pkg/bytes/#Buffer.Grow)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"grow","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":181,"col":2}},{"jsDoc":{"doc":"Reads data from `r` until EOF (`null`) and appends it to the buffer,\ngrowing the buffer as needed. It resolves to the number of bytes read.\nIf the buffer becomes too large, `.readFrom()` will reject with an error.\n\nBased on Go Lang's\n[Buffer.ReadFrom](https://golang.org/pkg/bytes/#Buffer.ReadFrom)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readFrom","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":195,"col":2}},{"jsDoc":{"doc":"Reads data from `r` until EOF (`null`) and appends it to the buffer,\ngrowing the buffer as needed. It returns the number of bytes read. If the\nbuffer becomes too large, `.readFromSync()` will throw an error.\n\nBased on Go Lang's\n[Buffer.ReadFrom](https://golang.org/pkg/bytes/#Buffer.ReadFrom)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readFromSync","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"ReaderSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReaderSync"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":225,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"BufferFullError","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":256,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"partial","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":258,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"name","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":257,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"PartialReadError","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":263,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":266,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"name","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":264,"col":2}},{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"partial","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":265,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"interface","name":"ReadLineResult","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":272,"col":0},"declarationKind":"export","jsDoc":{"doc":"Result type returned by of BufReader.readLine()."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"line","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":273,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"typeParams":[]},{"name":"more","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":274,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"BufReader","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":278,"col":0},"declarationKind":"export","jsDoc":{"doc":"BufReader implements buffering for a Reader object."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"rd","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}},{"kind":"assign","left":{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},"right":"[UNSUPPORTED]","tsType":null}],"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":292,"col":2}}],"properties":[{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"buf","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":279,"col":2}},{"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"rd","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":280,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"r","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":281,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"w","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":282,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"eof","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":283,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"return new BufReader unless r is BufReader"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"create","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}},{"kind":"assign","left":{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":288,"col":2}},{"jsDoc":{"doc":"Returns the size of the underlying buffer in bytes."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"size","kind":"method","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":300,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"buffered","kind":"method","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":304,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_fill","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":309,"col":2}},{"jsDoc":{"doc":"Discards any buffered data, resets all state, and switches\nthe buffered reader to read from r."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reset","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":343,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_reset","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"rd","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":347,"col":2}},{"jsDoc":{"doc":"reads data into p.\nIt returns the number of bytes read into p.\nThe bytes are taken from at most one Read on the underlying Reader,\nhence n may be less than len(p).\nTo read exactly len(p) bytes, use io.ReadFull(b, p)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"read","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":361,"col":2}},{"jsDoc":{"doc":"reads exactly `p.length` bytes into `p`.\n\nIf successful, `p` is returned.\n\nIf the end of the underlying stream has been reached, and there are no more\nbytes available in the buffer, `readFull()` returns `null` instead.\n\nAn error is thrown if some bytes could be read, but not enough to fill `p`\nentirely before the underlying stream reported an error or EOF. Any error\nthrown will have a `partial` property that indicates the slice of the\nbuffer that has been successfully filled with data.\n\nPorted from https://golang.org/pkg/io/#ReadFull"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readFull","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":411,"col":2}},{"jsDoc":{"doc":"Returns the next byte [0, 255] or `null`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readByte","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":442,"col":2}},{"jsDoc":{"doc":"readString() reads until the first occurrence of delim in the input,\nreturning a string containing the data up to and including the delimiter.\nIf ReadString encounters an error before finding a delimiter,\nit returns the data read before the error and the error itself\n(often `null`).\nReadString returns err != nil if and only if the returned data does not end\nin delim.\nFor simple uses, a Scanner may be more convenient."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readString","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"delim","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":462,"col":2}},{"jsDoc":{"doc":"`readLine()` is a low-level line-reading primitive. Most callers should\nuse `readString('\\n')` instead or use a Scanner.\n\n`readLine()` tries to return a single line, not including the end-of-line\nbytes. If the line was too long for the buffer then `more` is set and the\nbeginning of the line is returned. The rest of the line will be returned\nfrom future calls. `more` will be false when returning the last fragment\nof the line. The returned buffer is only valid until the next call to\n`readLine()`.\n\nThe text returned from ReadLine does not include the line end (\"\\r\\n\" or\n\"\\n\").\n\nWhen the end of the underlying stream is reached, the final bytes in the\nstream are returned. No indication or error is given if the input ends\nwithout a final line end. When there are no more trailing bytes to read,\n`readLine()` returns `null`.\n\nCalling `unreadByte()` after `readLine()` will always unread the last byte\nread (possibly a character belonging to the line end) even if that byte is\nnot part of the line returned by `readLine()`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readLine","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"ReadLineResult","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadLineResult"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":493,"col":2}},{"jsDoc":{"doc":"`readSlice()` reads until the first occurrence of `delim` in the input,\nreturning a slice pointing at the bytes in the buffer. The bytes stop\nbeing valid at the next read.\n\nIf `readSlice()` encounters an error before finding a delimiter, or the\nbuffer fills without finding a delimiter, it throws an error with a\n`partial` property that contains the entire buffer.\n\nIf `readSlice()` encounters the end of the underlying stream and there are\nany bytes left in the buffer, the rest of the buffer is returned. In other\nwords, EOF is always treated as a delimiter. Once the buffer is empty,\nit returns `null`.\n\nBecause the data returned from `readSlice()` will be overwritten by the\nnext I/O operation, most clients should use `readString()` instead."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readSlice","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"delim","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":571,"col":2}},{"jsDoc":{"doc":"`peek()` returns the next `n` bytes without advancing the reader. The\nbytes stop being valid at the next read call.\n\nWhen the end of the underlying stream is reached, but there are unread\nbytes left in the buffer, those bytes are returned. If there are no bytes\nleft in the buffer, it returns `null`.\n\nIf an error is encountered before `n` bytes are available, `peek()` throws\nan error with the `partial` property set to a slice of the buffer that\ncontains the bytes that were available before the error occurred."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"peek","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":646,"col":2}}],"extends":null,"implements":[{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"BufWriter","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":713,"col":0},"declarationKind":"export","jsDoc":{"doc":"BufWriter implements buffering for an deno.Writer object.\nIf an error occurs writing to a Writer, no more data will be\naccepted and all subsequent writes, and flush(), will return the error.\nAfter all data has been written, the client should call the\nflush() method to guarantee all data has been forwarded to\nthe underlying deno.Writer."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writer"}}},{"kind":"assign","left":{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},"right":"[UNSUPPORTED]","tsType":null}],"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":719,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"return new BufWriter unless writer is BufWriter"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"create","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writer"}}},{"kind":"assign","left":{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"BufWriter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufWriter"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":715,"col":2}},{"jsDoc":{"doc":"Discards any unflushed buffered data, clears any error, and\nresets buffer to write its output to w."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reset","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"w","optional":false,"tsType":{"repr":"Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writer"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":730,"col":2}},{"jsDoc":{"doc":"Flush writes any buffered data to the underlying io.Writer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"flush","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":737,"col":2}},{"jsDoc":{"doc":"Writes the contents of `data` into the buffer.  If the contents won't fully\nfit into the buffer, those bytes that can are copied into the buffer, the\nbuffer is the flushed to the writer and the remaining bytes are copied into\nthe now empty buffer.\n","tags":[{"kind":"return","doc":"the number of bytes written to the buffer."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"write","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":765,"col":2}}],"extends":"AbstractBufBase","implements":[{"repr":"Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writer"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"BufWriterSync","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":806,"col":0},"declarationKind":"export","jsDoc":{"doc":"BufWriterSync implements buffering for a deno.WriterSync object.\nIf an error occurs writing to a WriterSync, no more data will be\naccepted and all subsequent writes, and flush(), will return the error.\nAfter all data has been written, the client should call the\nflush() method to guarantee all data has been forwarded to\nthe underlying deno.WriterSync."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"WriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriterSync"}}},{"kind":"assign","left":{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},"right":"[UNSUPPORTED]","tsType":null}],"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":817,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"return new BufWriterSync unless writer is BufWriterSync"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"create","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"WriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriterSync"}}},{"kind":"assign","left":{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"BufWriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufWriterSync"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":808,"col":2}},{"jsDoc":{"doc":"Discards any unflushed buffered data, clears any error, and\nresets buffer to write its output to w."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reset","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"w","optional":false,"tsType":{"repr":"WriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriterSync"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":828,"col":2}},{"jsDoc":{"doc":"Flush writes any buffered data to the underlying io.WriterSync."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"flush","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":835,"col":2}},{"jsDoc":{"doc":"Writes the contents of `data` into the buffer.  If the contents won't fully\nfit into the buffer, those bytes that can are copied into the buffer, the\nbuffer is the flushed to the writer and the remaining bytes are copied into\nthe now empty buffer.\n","tags":[{"kind":"return","doc":"the number of bytes written to the buffer."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeSync","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":863,"col":2}}],"extends":"AbstractBufBase","implements":[{"repr":"WriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriterSync"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"readDelim","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":919,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read delimited bytes from a Reader."},"functionDef":{"params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}},{"kind":"identifier","name":"delim","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]}},{"kind":"function","name":"readStringDelim","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":973,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read delimited strings from a Reader."},"functionDef":{"params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}},{"kind":"identifier","name":"delim","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"decoderOpts","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"encoding","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"fatal","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"ignoreBOM","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]}},{"kind":"function","name":"readLines","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":990,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read strings line-by-line from a Reader."},"functionDef":{"params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Reader"}}},{"kind":"identifier","name":"decoderOpts","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"encoding","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"fatal","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"ignoreBOM","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"BytesList","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/bytes_list.ts","imported":"BytesList"}},{"kind":"import","name":"concat","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"concat"}},{"kind":"import","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"copy"}},{"kind":"import","name":"Reader","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/types.d.ts","imported":"Reader"}},{"kind":"import","name":"ReaderSync","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/types.d.ts","imported":"ReaderSync"}},{"kind":"import","name":"Writer","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/types.d.ts","imported":"Writer"}},{"kind":"import","name":"WriterSync","location":{"filename":"https://deno.land/std@0.113.0/io/buffer.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/types.d.ts","imported":"WriterSync"}},{"kind":"class","name":"StringReader","location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":10,"col":0},"declarationKind":"export","jsDoc":{"doc":"Reader utility for strings"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"s","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":11,"col":2}}],"properties":[],"indexSignatures":[],"methods":[],"extends":"Buffer","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"MultiReader","location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":17,"col":0},"declarationKind":"export","jsDoc":{"doc":"Reader utility for combining multiple readers"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"rest","arg":{"kind":"identifier","name":"readers","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}}}],"location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":21,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},"readonly":true,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"readers","location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":18,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"currentIndex","location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":19,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"read","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":25,"col":2}}],"extends":null,"implements":[{"repr":"[Deno.Reader]","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"[Deno.Reader]"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"LimitedReader","location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":43,"col":0},"declarationKind":"export","jsDoc":{"doc":"A `LimitedReader` reads from `reader` but limits the amount of data returned to just `limit` bytes.\nEach call to `read` updates `limit` to reflect the new amount remaining.\n`read` returns `null` when `limit` <= `0` or\nwhen the underlying `reader` returns `null`."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"limit","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":44,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"read","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":46,"col":2}}],"extends":null,"implements":[{"repr":"[Deno.Reader]","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"[Deno.Reader]"}}],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/io/readers.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"Buffer"}},{"kind":"variable","name":"readerFromIterable","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"writerFromStreamWriter","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":22,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readerFromStreamReader","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"typeAlias","name":"WritableStreamFromWriterOptions","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This interface has been moved to `/streams/conversion.ts`."}]},"typeAliasDef":{"tsType":{"repr":"WritableStreamFromWriterOptions2","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WritableStreamFromWriterOptions2"}},"typeParams":[]}},{"kind":"variable","name":"writableStreamFromWriter","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":28,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readableStreamFromIterable","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":30,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"typeAlias","name":"ReadableStreamFromReaderOptions","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":32,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This interface has been moved to `/streams/conversion.ts`."}]},"typeAliasDef":{"tsType":{"repr":"ReadableStreamFromReaderOptions2","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadableStreamFromReaderOptions2"}},"typeParams":[]}},{"kind":"variable","name":"readableStreamFromReader","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":34,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readAll","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":36,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readAllSync","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":38,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"writeAll","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":40,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"writeAllSync","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":42,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"iterateReader","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":44,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"iterateReaderSync","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":46,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":48,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"This function has been moved to `/streams/conversion.ts`."}]},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"copy2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"copy"}},{"kind":"import","name":"iterateReader2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"iterateReader"}},{"kind":"import","name":"iterateReaderSync2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"iterateReaderSync"}},{"kind":"import","name":"readableStreamFromIterable2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readableStreamFromIterable"}},{"kind":"import","name":"readableStreamFromReader2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readableStreamFromReader"}},{"kind":"import","name":"ReadableStreamFromReaderOptions2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"ReadableStreamFromReaderOptions"}},{"kind":"import","name":"readAll2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readAll"}},{"kind":"import","name":"readAllSync2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readAllSync"}},{"kind":"import","name":"readerFromIterable2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readerFromIterable"}},{"kind":"import","name":"readerFromStreamReader2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"readerFromStreamReader"}},{"kind":"import","name":"writableStreamFromWriter2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"writableStreamFromWriter"}},{"kind":"import","name":"WritableStreamFromWriterOptions2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"WritableStreamFromWriterOptions"}},{"kind":"import","name":"writeAll2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"writeAll"}},{"kind":"import","name":"writeAllSync2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"writeAllSync"}},{"kind":"import","name":"writerFromStreamWriter2","location":{"filename":"https://deno.land/std@0.113.0/io/streams.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"writerFromStreamWriter"}}],"/log/mod.ts":[{"kind":"typeAlias","name":"FormatterFunction","location":{"filename":"https://deno.land/std@0.113.0/log/handlers.ts","line":9,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"logRecord","optional":false,"tsType":{"repr":"LogRecord","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LogRecord"}}}],"typeParams":[]}},"typeParams":[]}},{"kind":"interface","name":"HandlerOptions","location":{"filename":"https://deno.land/std@0.113.0/log/handlers.ts","line":12,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"formatter","location":{"filename":"https://deno.land/std@0.113.0/log/handlers.ts","line":13,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"FormatterFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FormatterFunction"}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"LogMode","location":{"filename":"https://deno.land/std@0.113.0/log/handlers.ts","line":10,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"a","kind":"literal","literal":{"kind":"string","string":"a"}},{"repr":"w","kind":"literal","literal":{"kind":"string","string":"w"}},{"repr":"x","kind":"literal","literal":{"kind":"string","string":"x"}}]},"typeParams":[]}},{"kind":"class","name":"Logger","location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":44,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"loggerName","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"levelName","optional":false,"tsType":{"repr":"LevelName","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LevelName"}}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"LoggerOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LoggerOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":49,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"level","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"LogLevels","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LogLevels"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":59,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"level","kind":"setter","functionDef":{"params":[{"kind":"identifier","name":"level","optional":false,"tsType":{"repr":"LogLevels","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LogLevels"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":62,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"levelName","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"LevelName","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LevelName"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":66,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"levelName","kind":"setter","functionDef":{"params":[{"kind":"identifier","name":"levelName","optional":false,"tsType":{"repr":"LevelName","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LevelName"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":69,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"loggerName","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":73,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"handlers","kind":"setter","functionDef":{"params":[{"kind":"identifier","name":"hndls","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"BaseHandler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BaseHandler"}}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":77,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"handlers","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"BaseHandler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BaseHandler"}}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":80,"col":2}},{"jsDoc":{"doc":"If the level of the logger is greater than the level to log, then nothing\nis logged, otherwise a log record is passed to each log handler.  `msg` data\npassed in is returned.  If a function is passed in, it is only evaluated\nif the msg will be logged and the return value will be the result of the\nfunction, not the function itself, unless the function isn't called, in which\ncase undefined is returned.  All types are coerced to strings for logging."},"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_log","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"level","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":91,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"asString","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":122,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"debug","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":142,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"debug","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":143,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"debug","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":144,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"info","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":151,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"info","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":152,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"info","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":153,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"warning","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":160,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"warning","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":161,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"warning","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":162,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"error","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":169,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"error","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":170,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"error","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":171,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"critical","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":178,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"critical","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":179,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"critical","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":183,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"LogRecord","location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":16,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"LogRecordOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LogRecordOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":24,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"msg","location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":17,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"level","location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":20,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"levelName","location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":21,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"loggerName","location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":22,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"args","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":32,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"datetime","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/log/logger.ts","line":35,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"enum","name":"LogLevels","location":{"filename":"https://deno.land/std@0.113.0/log/levels.ts","line":4,"col":0},"declarationKind":"export","jsDoc":{"doc":"Get log level numeric values through enum constants"},"enumDef":{"members":[{"name":"NOTSET","init":{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}}},{"name":"DEBUG","init":{"repr":"10","kind":"literal","literal":{"kind":"number","number":10}}},{"name":"INFO","init":{"repr":"20","kind":"literal","literal":{"kind":"number","number":20}}},{"name":"WARNING","init":{"repr":"30","kind":"literal","literal":{"kind":"number","number":30}}},{"name":"ERROR","init":{"repr":"40","kind":"literal","literal":{"kind":"number","number":40}}},{"name":"CRITICAL","init":{"repr":"50","kind":"literal","literal":{"kind":"number","number":50}}}]}},{"kind":"typeAlias","name":"LevelName","location":{"filename":"https://deno.land/std@0.113.0/log/levels.ts","line":19,"col":0},"declarationKind":"export","jsDoc":{"doc":"Union of valid log level strings"},"typeAliasDef":{"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"keyof","tsType":{"repr":"LogLevels","kind":"typeQuery","typeQuery":"LogLevels"}}},"typeParams":[]}},{"kind":"class","name":"LoggerConfig","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":20,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"LevelName","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LevelName"}},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"level","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":21,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"handlers","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":22,"col":2}}],"indexSignatures":[],"methods":[],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"interface","name":"LogConfig","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":25,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"handlers","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":26,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"BaseHandler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BaseHandler"}}}]}},"typeParams":[]},{"name":"loggers","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":29,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"LoggerConfig","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LoggerConfig"}}}]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"variable","name":"handlers","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":54,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"getLogger","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":63,"col":0},"declarationKind":"export","jsDoc":{"doc":"Get a logger instance. If not specified `name`, get the default logger."},"functionDef":{"params":[{"kind":"identifier","name":"name","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Logger","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Logger"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"debug","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":82,"col":0},"declarationKind":"export","jsDoc":{"doc":"Log with debug level, using default logger."},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"debug","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":83,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"debug","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":87,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"info","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":99,"col":0},"declarationKind":"export","jsDoc":{"doc":"Log with info level, using default logger."},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"info","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":100,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"info","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":104,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"warning","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":116,"col":0},"declarationKind":"export","jsDoc":{"doc":"Log with warning level, using default logger."},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"warning","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":117,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"warning","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":121,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"error","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":133,"col":0},"declarationKind":"export","jsDoc":{"doc":"Log with error level, using default logger."},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"error","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":134,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"error","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":138,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"critical","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":150,"col":0},"declarationKind":"export","jsDoc":{"doc":"Log with critical level, using default logger."},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"critical","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":151,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"critical","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":155,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"trueType":{"repr":"never","kind":"keyword","keyword":"never"},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[],"typeParams":[]}}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"setup","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":167,"col":0},"declarationKind":"export","jsDoc":{"doc":"Setup logger config."},"functionDef":{"params":[{"kind":"identifier","name":"config","optional":false,"tsType":{"repr":"LogConfig","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LogConfig"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"Logger","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/logger.ts","imported":"Logger"}},{"kind":"import","name":"GenericFunction","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/logger.ts","imported":"GenericFunction"}},{"kind":"import","name":"BaseHandler","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/handlers.ts","imported":"BaseHandler"}},{"kind":"import","name":"ConsoleHandler","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/handlers.ts","imported":"ConsoleHandler"}},{"kind":"import","name":"FileHandler","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/handlers.ts","imported":"FileHandler"}},{"kind":"import","name":"RotatingFileHandler","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/handlers.ts","imported":"RotatingFileHandler"}},{"kind":"import","name":"WriterHandler","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/handlers.ts","imported":"WriterHandler"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"LevelName","location":{"filename":"https://deno.land/std@0.113.0/log/mod.ts","line":12,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/log/levels.ts","imported":"LevelName"}}],"/mime/mod.ts":[{"kind":"interface","name":"FormFile","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":13,"col":0},"declarationKind":"export","jsDoc":{"doc":"FormFile object"},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"filename","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":15,"col":2},"jsDoc":{"doc":"filename"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"type","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":17,"col":2},"jsDoc":{"doc":"content-type header value of file"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"size","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":19,"col":2},"jsDoc":{"doc":"byte size of file"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"content","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":21,"col":2},"jsDoc":{"doc":"in-memory content of file. Either content or tempfile is set"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"typeParams":[]},{"name":"tempfile","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":25,"col":2},"jsDoc":{"doc":"temporal file path.\nSet if file size is bigger than specified max-memory size at reading form"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"isFormFile","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":30,"col":0},"declarationKind":"export","jsDoc":{"doc":"Type guard for FormFile"},"functionDef":{"params":[{"kind":"identifier","name":"x","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"returnType":{"repr":"x is FormFile","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"x"},"type":{"repr":"FormFile","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FormFile"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"matchAfterPrefix","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":60,"col":0},"declarationKind":"export","jsDoc":{"doc":"Checks whether `buf` should be considered to match the boundary.\n\nThe prefix is \"--boundary\" or \"\\r\\n--boundary\" or \"\\n--boundary\", and the\ncaller has verified already that `hasPrefix(buf, prefix)` is true.\n\n`matchAfterPrefix()` returns `1` if the buffer does match the boundary,\nmeaning the prefix is followed by a dash, space, tab, cr, nl, or EOF.\n\nIt returns `-1` if the buffer definitely does NOT match the boundary,\nmeaning the prefix is followed by some other character.\nFor example, \"--foobar\" does not match \"--foo\".\n\nIt returns `0` more input needs to be read to make the decision,\nmeaning that `buf.length` and `prefix.length` are the same."},"functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"prefix","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"eof","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"-1","kind":"literal","literal":{"kind":"number","number":-1}},{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}},{"repr":"1","kind":"literal","literal":{"kind":"number","number":1}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"scanUntilBoundary","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":97,"col":0},"declarationKind":"export","jsDoc":{"doc":"Scans `buf` to identify how much of it can be safely returned as part of the\n`PartReader` body.\n","tags":[{"kind":"param","name":"buf","doc":"- The buffer to search for boundaries."},{"kind":"param","name":"dashBoundary","doc":"- Is \"--boundary\"."},{"kind":"param","name":"newLineDashBoundary","doc":"- Is \"\\r\\n--boundary\" or \"\\n--boundary\", depending\non what mode we are in. The comments below (and the name) assume\n\"\\n--boundary\", but either is accepted."},{"kind":"param","name":"total","doc":"- The number of bytes read out so far. If total == 0, then a\nleading \"--boundary\" is recognized."},{"kind":"param","name":"eof","doc":"- Whether `buf` contains the final bytes in the stream before EOF.\nIf `eof` is false, more bytes are expected to follow."},{"kind":"return","doc":"The number of data bytes from buf that can be returned as part of\nthe `PartReader` body."}]},"functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"dashBoundary","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"newLineDashBoundary","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"total","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"eof","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"MultipartFormData","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":249,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[{"name":"files","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":250,"col":2},"optional":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"FormFile","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FormFile"}}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]},{"name":"values","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":251,"col":2},"optional":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]},{"name":"entries","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":252,"col":2},"optional":false,"params":[],"returnType":{"repr":"IterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"","kind":"array","array":{"repr":"FormFile","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FormFile"}}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}]}],"typeName":"IterableIterator"}},"typeParams":[]},{"name":"[Symbol.iterator]","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":255,"col":2},"computed":true,"optional":false,"params":[],"returnType":{"repr":"IterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"","kind":"array","array":{"repr":"FormFile","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FormFile"}}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}]}],"typeName":"IterableIterator"}},"typeParams":[]},{"name":"removeAll","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":259,"col":2},"jsDoc":{"doc":"Remove all tempfiles"},"optional":false,"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"typeParams":[]}],"properties":[],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"ReadFormOptions","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":273,"col":0},"declarationKind":"export","jsDoc":{"doc":"options for reading forms.","tags":[{"kind":"unsupported","value":"@property maxMemory - maximum memory size to store file in memory. bytes."},{"kind":"unsupported","value":"@default 10485760 (10MB)"},{"kind":"unsupported","value":"@property dir - directory where files that don't fit into maxMemory will be\nstored."},{"kind":"unsupported","value":"@property prefix - a prefix that will be used for all files created if\nmaxMemory is exceeded."},{"kind":"unsupported","value":"@property suffix - a suffix that will be used for all files created if\nmaxMemory is exceeded, defaults to the file extension"}]},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"maxMemory","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":274,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"dir","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":275,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"prefix","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":276,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"suffix","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":277,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"MultipartReader","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":281,"col":0},"declarationKind":"export","jsDoc":{"doc":"Reader for parsing multipart/form-data"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"boundary","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":288,"col":2}}],"properties":[{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"newLine","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":282,"col":2}},{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"newLineDashBoundary","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":283,"col":2}},{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"dashBoundaryDash","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":284,"col":2}},{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"dashBoundary","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":285,"col":2}},{"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bufReader","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":286,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"PartReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PartReader"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"currentPart","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":401,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"partsRead","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":402,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Read all form data from stream.\nIf total size of stored data in memory exceed maxMemory,\noverflowed file data will be written to temporal files.\nString field values are never written to files.\nnull value means parsing or writing to file was failed in some reason.","tags":[{"kind":"param","name":"maxMemory","doc":"maximum memory size to store file in memory. bytes. @default 10485760 (10MB)"}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readForm","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"maxMemory","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"MultipartFormData","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MultipartFormData"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":303,"col":2}},{"jsDoc":{"doc":"Read all form data from stream.\nIf total size of stored data in memory exceed options.maxMemory,\noverflowed file data will be written to temporal files.\nString field values are never written to files.\nnull value means parsing or writing to file was failed in some reason.","tags":[{"kind":"param","name":"options","doc":"options to configure the behavior of storing\noverflow file data in temporal files."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readForm","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ReadFormOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadFormOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"MultipartFormData","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MultipartFormData"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":312,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readForm","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"maxMemoryOrOptions","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"ReadFormOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadFormOptions"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"MultipartFormData","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MultipartFormData"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":313,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"nextPart","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"PartReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PartReader"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":404,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"isFinalBoundary","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"line","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":445,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"isBoundaryDelimiterLine","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"line","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":453,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"MultipartWriter","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":556,"col":0},"declarationKind":"export","jsDoc":{"doc":"Writer for creating multipart/form-data"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}},{"kind":"identifier","name":"boundary","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":567,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":true,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_boundary","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":557,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"PartWriter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PartWriter"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"lastPart","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":563,"col":2}},{"tsType":{"repr":"BufWriter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufWriter"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"bufWriter","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":564,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"isClosed","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":565,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"boundary","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":559,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"formDataContentType","kind":"method","functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":576,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"createPart","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"headers","optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}}}],"returnType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":580,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"createFormFile","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"field","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":597,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"createFormField","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"field","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":610,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeField","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"field","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":617,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeFile","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"field","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"file","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":622,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"flush","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":631,"col":2}},{"jsDoc":{"doc":"Close writer. No additional data can be written to stream"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":636,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"equals","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"equals"}},{"kind":"import","name":"indexOf","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"indexOf"}},{"kind":"import","name":"lastIndexOf","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"lastIndexOf"}},{"kind":"import","name":"startsWith","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"startsWith"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"BufReader","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"BufReader"}},{"kind":"import","name":"BufWriter","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"BufWriter"}},{"kind":"import","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/streams/conversion.ts","imported":"copy"}},{"kind":"import","name":"copyN","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/util.ts","imported":"copyN"}},{"kind":"import","name":"MultiReader","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/readers.ts","imported":"MultiReader"}},{"kind":"import","name":"extname","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"extname"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"TextProtoReader","location":{"filename":"https://deno.land/std@0.113.0/mime/multipart.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/textproto/mod.ts","imported":"TextProtoReader"}}],"/node/assert.ts":[{"kind":"class","name":"AssertionError","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":376,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"AssertionErrorConstructorOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AssertionErrorConstructorOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":380,"col":2}}],"properties":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toString","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":536,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[inspect.custom]","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_recurseTimes","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"ctx","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":540,"col":2}}],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":871,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"function","name":"deepEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":320,"col":0},"declarationKind":"export","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"deepStrictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":336,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"doesNotMatch","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":390,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"string","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"regexp","optional":false,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"doesNotReject","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":520,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"asyncFn","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}}]}},{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"doesNotThrow","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":193,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"expected","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"equal","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":217,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fail","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":365,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"never","kind":"keyword","keyword":"never"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ifError","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":626,"col":0},"declarationKind":"export","jsDoc":{"doc":"Throws `value` if the value is not `null` or `undefined`.\n","tags":[{"kind":"param","name":"err"}]},"functionDef":{"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"match","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":376,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"regexp","optional":false,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notDeepEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":328,"col":0},"declarationKind":"export","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notDeepStrictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":350,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":252,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notStrictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":305,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"ok","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":81,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"rejects","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":444,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"asyncFn","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}}]}},{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"strict","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":422,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"asserts actual","kind":"typePredicate","typePredicate":{"asserts":true,"param":{"type":"identifier","name":"actual"},"type":null}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"strictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":291,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"throws","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":83,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"AssertionError","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/assertion_error.ts","imported":"AssertionError"}},{"kind":"import","name":"AssertionErrorConstructorOptions","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/assertion_error.ts","imported":"AssertionErrorConstructorOptions"}},{"kind":"import","name":"asserts","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/asserts.ts","imported":null}},{"kind":"import","name":"inspect","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"inspect"}},{"kind":"import","name":"ERR_AMBIGUOUS_ARGUMENT","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_AMBIGUOUS_ARGUMENT"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"ERR_INVALID_ARG_VALUE","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_VALUE"}},{"kind":"import","name":"ERR_INVALID_RETURN_VALUE","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_RETURN_VALUE"}},{"kind":"import","name":"ERR_MISSING_ARGS","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_MISSING_ARGS"}}],"/node/assertion_error.ts":[{"kind":"function","name":"copyError","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":72,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"returnType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"inspectValue","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":86,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"val","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"createErrDiff","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":107,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"operator","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"AssertionErrorDetailsDescriptor","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":351,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"message","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":352,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"actual","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":353,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"typeParams":[]},{"name":"expected","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":354,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"typeParams":[]},{"name":"operator","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":355,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"stack","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":356,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"AssertionErrorConstructorOptions","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":359,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"message","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":360,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"actual","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":361,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"typeParams":[]},{"name":"expected","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":362,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"typeParams":[]},{"name":"operator","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":363,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"details","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":364,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"AssertionErrorDetailsDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AssertionErrorDetailsDescriptor"}}},"typeParams":[]},{"name":"stackStartFn","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":366,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},"typeParams":[]},{"name":"stackStartFunction","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":369,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"AssertionError","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":376,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"AssertionErrorConstructorOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AssertionErrorConstructorOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":380,"col":2}}],"properties":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toString","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":536,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[inspect.custom]","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_recurseTimes","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"ctx","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":540,"col":2}}],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":376,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"AssertionErrorConstructorOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AssertionErrorConstructorOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":380,"col":2}}],"properties":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toString","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":536,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[inspect.custom]","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_recurseTimes","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"ctx","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":540,"col":2}}],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"inspect","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":32,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"inspect"}},{"kind":"import","name":"removeColors","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":33,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"stripColor"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":47,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}}],"/node/buffer.ts":[{"kind":"class","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":77,"col":0},"declarationKind":"export","jsDoc":{"doc":"See also https://nodejs.org/api/buffer.html"},"classDef":{"isAbstract":false,"constructors":[],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Allocates a new Buffer of size bytes."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"alloc","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"fill","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}]}},{"kind":"assign","left":{"kind":"identifier","name":"encoding","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":81,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"allocUnsafe","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"size","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":136,"col":2}},{"jsDoc":{"doc":"Returns the byte length of a string when encoded. This is not the same as\nString.prototype.length, which does not account for the encoding that is\nused to convert the string into bytes."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"byteLength","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"string","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"ArrayBufferView","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBufferView"}},{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}},{"repr":"SharedArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SharedArrayBuffer"}}]}},{"kind":"assign","left":{"kind":"identifier","name":"encoding","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":145,"col":2}},{"jsDoc":{"doc":"Returns a new Buffer which is the result of concatenating all the Buffer\ninstances in the list together."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"concat","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"list","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}},{"repr":"","kind":"array","array":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}]}},{"kind":"identifier","name":"totalLength","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":159,"col":2}},{"jsDoc":{"doc":"Allocates a new Buffer using an array of bytes in the range 0 – 255. Array\nentries outside that range will be truncated to fit into it."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"from","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"array","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":187,"col":2}},{"jsDoc":{"doc":"This creates a view of the ArrayBuffer without copying the underlying\nmemory. For example, when passed a reference to the .buffer property of a\nTypedArray instance, the newly created Buffer will share the same allocated\nmemory as the TypedArray."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"from","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"arrayBuffer","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}},{"repr":"SharedArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SharedArrayBuffer"}}]}},{"kind":"identifier","name":"byteOffset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"length","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":194,"col":2}},{"jsDoc":{"doc":"Copies the passed buffer data onto a new Buffer instance."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"from","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"buffer","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":202,"col":2}},{"jsDoc":{"doc":"Creates a new Buffer containing string."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"from","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"string","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"encoding","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":206,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"from","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}},{"kind":"identifier","name":"offsetOrEncoding","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"length","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":207,"col":2}},{"jsDoc":{"doc":"Returns true if obj is a Buffer, false otherwise."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"isBuffer","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"obj","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"obj is Buffer","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"obj"},"type":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":236,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"isEncoding","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"encoding","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":241,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"boundsError","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"length","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"type","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"never","kind":"keyword","keyword":"never"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":249,"col":2}},{"jsDoc":{"doc":"Reads byteLength number of bytes from buf at the specified offset and interprets\nthe result as an unsigned big-endian integer supporting up to 48 bits of accuracy."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUIntBE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"identifier","name":"byteLength","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":266,"col":2}},{"jsDoc":{"doc":"Reads byteLength number of bytes from buf at the specified offset and interprets\nthe result as an unsigned, little-endian integer supporting up to 48 bits of accuracy."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUIntLE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"identifier","name":"byteLength","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":280,"col":2}},{"jsDoc":{"doc":"Copies data from a region of buf to a region in target, even if the target\nmemory region overlaps with buf."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"copy","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"targetBuffer","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"assign","left":{"kind":"identifier","name":"targetStart","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"sourceStart","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"sourceEnd","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":294,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"equals","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"otherBuffer","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}]}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":314,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readBigInt64BE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":331,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readBigInt64LE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":338,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readBigUInt64BE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":346,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readBigUInt64LE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":353,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readDoubleBE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":361,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readDoubleLE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":368,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readFloatBE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":376,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readFloatLE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":383,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readInt8","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":391,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readInt16BE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":397,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readInt16LE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":402,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readInt32BE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":409,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readInt32LE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":414,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUInt8","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":421,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUInt16BE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":427,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUInt16LE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":434,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUInt32BE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":442,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readUInt32LE","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":449,"col":2}},{"jsDoc":{"doc":"Returns a new Buffer that references the same memory as the original, but\noffset and cropped by the start and end indices."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"slice","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"begin","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"end","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":461,"col":2}},{"jsDoc":{"doc":"Returns a JSON representation of buf. JSON.stringify() implicitly calls\nthis function when stringifying a Buffer instance."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toJSON","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":470,"col":2}},{"jsDoc":{"doc":"Decodes buf to a string according to the specified character encoding in\nencoding. start and end may be passed to decode only a subset of buf."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toString","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"encoding","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"start","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"end","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":478,"col":2}},{"jsDoc":{"doc":"Writes string to buf at offset according to the character encoding in\nencoding. The length parameter is the number of bytes to write. If buf did\nnot contain enough space to fit the entire string, only part of string will\nbe written. However, partially encoded characters will not be written."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"write","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"string","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"length","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":494,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeBigInt64BE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":501,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeBigInt64LE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":508,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeBigUInt64BE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":517,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeBigUInt64LE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":524,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeDoubleBE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":533,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeDoubleLE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":540,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeFloatBE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":549,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeFloatLE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":556,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeInt8","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":565,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeInt16BE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":573,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeInt16LE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":580,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeInt32BE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":589,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeInt32LE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":596,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUInt8","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":605,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUInt16BE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":613,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUInt16LE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":620,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUInt32BE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":629,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUInt32LE","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":636,"col":2}}],"extends":"Uint8Array","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"variable","name":"kMaxLength","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":666,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"4294967296","kind":"literal","literal":{"kind":"number","number":4294967296}},"kind":"const"}},{"kind":"variable","name":"kStringMaxLength","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":667,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"536870888","kind":"literal","literal":{"kind":"number","number":536870888}},"kind":"const"}},{"kind":"variable","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":668,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"atob","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":673,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"btoa","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":674,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":676,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"hex","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/encoding/hex.ts","imported":null}},{"kind":"import","name":"base64","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/encoding/base64.ts","imported":null}},{"kind":"import","name":"Encodings","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"Encodings"}},{"kind":"import","name":"normalizeEncoding","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"normalizeEncoding"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"ERR_BUFFER_OUT_OF_BOUNDS","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_BUFFER_OUT_OF_BOUNDS"}},{"kind":"import","name":"ERR_OUT_OF_RANGE","location":{"filename":"https://deno.land/std@0.113.0/node/buffer.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_OUT_OF_RANGE"}}],"/node/child_process.ts":[{"kind":"class","name":"ChildProcess","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":13,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"args","optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ChildProcessOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildProcessOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":66,"col":2}}],"properties":[{"jsDoc":{"doc":"The exit code of the child process. This property will be `null` until the child process exits."},"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"exitCode","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":17,"col":2}},{"jsDoc":{"doc":"This property is set to `true` after `kill()` is called."},"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"killed","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":22,"col":2}},{"jsDoc":{"doc":"The PID of this child process."},"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pid","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":27,"col":2}},{"jsDoc":{"doc":"Command line arguments given to this child process."},"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"spawnargs","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":32,"col":2}},{"jsDoc":{"doc":"The executable file name of this child process."},"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"spawnfile","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":37,"col":2}},{"jsDoc":{"doc":"This property represents the child process's stdin."},"tsType":{"repr":"","kind":"union","union":[{"repr":"Writable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writable"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stdin","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":42,"col":2}},{"jsDoc":{"doc":"This property represents the child process's stdout."},"tsType":{"repr":"","kind":"union","union":[{"repr":"Readable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Readable"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stdout","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":47,"col":2}},{"jsDoc":{"doc":"This property represents the child process's stderr."},"tsType":{"repr":"","kind":"union","union":[{"repr":"Readable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Readable"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stderr","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":52,"col":2}},{"jsDoc":{"doc":"Pipes to this child process."},"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"union","union":[{"repr":"Writable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Writable"}},{"repr":"null","kind":"keyword","keyword":"null"}]},{"repr":"","kind":"union","union":[{"repr":"Readable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Readable"}},{"repr":"null","kind":"keyword","keyword":"null"}]},{"repr":"","kind":"union","union":[{"repr":"Readable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Readable"}},{"repr":"null","kind":"keyword","keyword":"null"}]}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stdio","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":57,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"tags":[{"kind":"param","name":"signal","doc":"NOTE: this parameter is not yet implemented."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"kill","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"signal","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":145,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":169,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"unref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":173,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_waitForChildStreamsToClose","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":177,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_handleError","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":193,"col":2}}],"extends":"EventEmitter","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"spawn","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":297,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"ChildProcess","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildProcess"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"spawn","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":298,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}],"returnType":{"repr":"ChildProcess","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildProcess"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"spawn","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":299,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"args","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}],"returnType":{"repr":"ChildProcess","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildProcess"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"spawn","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":300,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"args","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}],"returnType":{"repr":"ChildProcess","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildProcess"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"spawn","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":308,"col":0},"declarationKind":"export","jsDoc":{"doc":"Spawns a child process using `command`."},"functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"argsOrOptions","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}]}},{"kind":"identifier","name":"maybeOptions","optional":true,"tsType":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}],"returnType":{"repr":"ChildProcess","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildProcess"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":320,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"EventEmitter","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/events.ts","imported":"EventEmitter"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"Readable","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Readable"}},{"kind":"import","name":"Stream","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Stream"}},{"kind":"import","name":"Writable","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Writable"}},{"kind":"import","name":"deferred","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"deferred"}},{"kind":"import","name":"readLines","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"readLines"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/node/child_process.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}}],"/node/cli.ts":[{"kind":"import","name":"createRequire","location":{"filename":"https://deno.land/std@0.113.0/node/cli.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/module.ts","imported":"createRequire"}}],"/node/console.ts":[{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/node/console.ts","line":3,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}}],"/node/constants.ts":[{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/constants.ts","line":8,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"fsConstants","location":{"filename":"https://deno.land/std@0.113.0/node/constants.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/fs.ts","imported":"constants"}},{"kind":"import","name":"osConstants","location":{"filename":"https://deno.land/std@0.113.0/node/constants.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/os.ts","imported":"constants"}}],"/node/crypto.ts":[{"kind":"variable","name":"timingSafeEqual","location":{"filename":"https://deno.land/std@0.113.0/node/_crypto/timingSafeEqual.ts","line":3,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"DataView","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DataView"}},{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}}]}},{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"DataView","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DataView"}},{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}}]}}],"typeParams":[]}},"kind":"const"}},{"kind":"function","name":"scrypt","location":{"filename":"https://deno.land/std@0.113.0/node/_crypto/scrypt.ts","line":243,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"password","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"salt","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"keylen","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"_opts","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Opts","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Opts"}},{"repr":"null","kind":"keyword","keyword":"null"},{"repr":"Callback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Callback"}}]}},{"kind":"identifier","name":"cb","optional":true,"tsType":{"repr":"Callback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Callback"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"scryptSync","location":{"filename":"https://deno.land/std@0.113.0/node/_crypto/scrypt.ts","line":217,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"password","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"salt","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"keylen","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"_opts","optional":true,"tsType":{"repr":"Opts","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Opts"}}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"randomFillSync","location":{"filename":"https://deno.land/std@0.113.0/node/_crypto/randomFill.ts","line":69,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}},{"kind":"assign","left":{"kind":"identifier","name":"offset","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"identifier","name":"size","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"pbkdf2","location":{"filename":"https://deno.land/std@0.113.0/node/_crypto/pbkdf2.ts","line":153,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"iterations","doc":"Needs to be higher or equal than zero"},{"kind":"param","name":"keylen","doc":"Needs to be higher or equal than zero but less than max allocation size (2^30)"},{"kind":"param","name":"digest","doc":"Algorithm to be used for encryption"}]},"functionDef":{"params":[{"kind":"identifier","name":"password","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"salt","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"iterations","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"keylen","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"digest","optional":false,"tsType":{"repr":"Algorithms","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Algorithms"}}},"right":"[UNSUPPORTED]","tsType":null},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"derivedKey","optional":true,"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}}],"typeParams":[]}}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"pbkdf2Sync","location":{"filename":"https://deno.land/std@0.113.0/node/_crypto/pbkdf2.ts","line":103,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"param","name":"iterations","doc":"Needs to be higher or equal than zero"},{"kind":"param","name":"keylen","doc":"Needs to be higher or equal than zero but less than max allocation size (2^30)"},{"kind":"param","name":"digest","doc":"Algorithm to be used for encryption"}]},"functionDef":{"params":[{"kind":"identifier","name":"password","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"salt","optional":false,"tsType":{"repr":"HASH_DATA","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HASH_DATA"}}},{"kind":"identifier","name":"iterations","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"keylen","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"assign","left":{"kind":"identifier","name":"digest","optional":false,"tsType":{"repr":"Algorithms","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Algorithms"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"Hash","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":43,"col":0},"declarationKind":"export","jsDoc":{"doc":"The Hash class is a utility for creating hash digests of data. It can be used in one of two ways:\n\n- As a stream that is both readable and writable, where data is written to produce a computed hash digest on the readable side, or\n- Using the hash.update() and hash.digest() methods to produce the computed hash.\n\nThe crypto.createHash() method is used to create Hash instances. Hash objects are not to be created directly using the new keyword."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"algorithm","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"wasmCrypto.DigestContext","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"wasmCrypto.DigestContext"}}]}},{"kind":"identifier","name":"_opts","optional":true,"tsType":{"repr":"TransformOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TransformOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":46,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"copy","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Hash","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Hash"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":78,"col":2}},{"jsDoc":{"doc":"Updates the hash content with the given data."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"update","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}}]}},{"kind":"identifier","name":"_encoding","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":85,"col":2}},{"jsDoc":{"doc":"Calculates the digest of all of the data.\n\nIf encoding is provided a string will be returned; otherwise a Buffer is returned.\n\nSupported encoding is currently 'hex', 'binary', 'base64'."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"digest","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"encoding","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"string","kind":"keyword","keyword":"string"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":106,"col":2}}],"extends":"Transform","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"createHash","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":146,"col":0},"declarationKind":"export","jsDoc":{"doc":"Creates and returns a Hash object that can be used to generate hash digests\nusing the given `algorithm`. Optional `options` argument controls stream behavior."},"functionDef":{"params":[{"kind":"identifier","name":"algorithm","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"opts","optional":true,"tsType":{"repr":"TransformOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TransformOptions"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getHashes","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":153,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns an array of the names of the supported hash algorithms, such as 'sha1'."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":159,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"variable","name":"randomUUID","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":157,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[],"typeParams":[]}},"kind":"const"}},{"kind":"import","name":"randomBytes","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/randomBytes.ts","imported":"default"}},{"kind":"import","name":"randomFill","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/randomFill.ts","imported":"default"}},{"kind":"import","name":"randomFillSync","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/randomFill.ts","imported":"randomFillSync"}},{"kind":"import","name":"randomInt","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/randomInt.ts","imported":"default"}},{"kind":"import","name":"wasmCrypto","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_wasm_crypto/mod.ts","imported":"crypto"}},{"kind":"import","name":"DigestAlgorithm","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_wasm_crypto/mod.ts","imported":"DigestAlgorithm"}},{"kind":"import","name":"digestAlgorithms","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_wasm_crypto/mod.ts","imported":"digestAlgorithms"}},{"kind":"import","name":"pbkdf2","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/pbkdf2.ts","imported":"pbkdf2"}},{"kind":"import","name":"pbkdf2Sync","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/pbkdf2.ts","imported":"pbkdf2Sync"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":12,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"Transform","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":13,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Transform"}},{"kind":"import","name":"TransformOptions","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":14,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/transform.ts","imported":"TransformOptions"}},{"kind":"import","name":"encodeToHex","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/encoding/hex.ts","imported":"encode"}},{"kind":"import","name":"encodeToBase64","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":16,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/encoding/base64.ts","imported":"encode"}},{"kind":"import","name":"scrypt","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":17,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/scrypt.ts","imported":"scrypt"}},{"kind":"import","name":"scryptSync","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":17,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/scrypt.ts","imported":"scryptSync"}},{"kind":"import","name":"timingSafeEqual","location":{"filename":"https://deno.land/std@0.113.0/node/crypto.ts","line":18,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_crypto/timingSafeEqual.ts","imported":"timingSafeEqual"}}],"/node/dns.ts":[{"kind":"interface","name":"LookupOptions","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":44,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"family","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":45,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]},{"name":"hints","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":46,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]},{"name":"all","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":47,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]},{"name":"verbatim","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":48,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"LookupOneOptions","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":51,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"LookupOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LookupOptions"}}],"methods":[],"properties":[{"name":"all","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":52,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"LookupAllOptions","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":55,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"LookupOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LookupOptions"}}],"methods":[],"properties":[{"name":"all","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":56,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"LookupAddress","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":59,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"address","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":60,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"family","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":61,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"variable","name":"NODATA","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":246,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ENODATA","kind":"literal","literal":{"kind":"string","string":"ENODATA"}},"kind":"const"}},{"kind":"variable","name":"FORMERR","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":247,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EFORMERR","kind":"literal","literal":{"kind":"string","string":"EFORMERR"}},"kind":"const"}},{"kind":"variable","name":"SERVFAIL","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":248,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ESERVFAIL","kind":"literal","literal":{"kind":"string","string":"ESERVFAIL"}},"kind":"const"}},{"kind":"variable","name":"NOTFOUND","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":249,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ENOTFOUND","kind":"literal","literal":{"kind":"string","string":"ENOTFOUND"}},"kind":"const"}},{"kind":"variable","name":"NOTIMP","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":250,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ENOTIMP","kind":"literal","literal":{"kind":"string","string":"ENOTIMP"}},"kind":"const"}},{"kind":"variable","name":"REFUSED","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":251,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EREFUSED","kind":"literal","literal":{"kind":"string","string":"EREFUSED"}},"kind":"const"}},{"kind":"variable","name":"BADQUERY","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":252,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADQUERY","kind":"literal","literal":{"kind":"string","string":"EBADQUERY"}},"kind":"const"}},{"kind":"variable","name":"BADNAME","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":253,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADNAME","kind":"literal","literal":{"kind":"string","string":"EBADNAME"}},"kind":"const"}},{"kind":"variable","name":"BADFAMILY","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":254,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADFAMILY","kind":"literal","literal":{"kind":"string","string":"EBADFAMILY"}},"kind":"const"}},{"kind":"variable","name":"BADRESP","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":255,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADRESP","kind":"literal","literal":{"kind":"string","string":"EBADRESP"}},"kind":"const"}},{"kind":"variable","name":"CONNREFUSED","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":256,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ECONNREFUSED","kind":"literal","literal":{"kind":"string","string":"ECONNREFUSED"}},"kind":"const"}},{"kind":"variable","name":"TIMEOUT","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":257,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ETIMEOUT","kind":"literal","literal":{"kind":"string","string":"ETIMEOUT"}},"kind":"const"}},{"kind":"variable","name":"EOF","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":258,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EOF","kind":"literal","literal":{"kind":"string","string":"EOF"}},"kind":"const"}},{"kind":"variable","name":"FILE","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":259,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EFILE","kind":"literal","literal":{"kind":"string","string":"EFILE"}},"kind":"const"}},{"kind":"variable","name":"NOMEM","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":260,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ENOMEM","kind":"literal","literal":{"kind":"string","string":"ENOMEM"}},"kind":"const"}},{"kind":"variable","name":"DESTRUCTION","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":261,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EDESTRUCTION","kind":"literal","literal":{"kind":"string","string":"EDESTRUCTION"}},"kind":"const"}},{"kind":"variable","name":"BADSTR","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":262,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADSTR","kind":"literal","literal":{"kind":"string","string":"EBADSTR"}},"kind":"const"}},{"kind":"variable","name":"BADFLAGS","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":263,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADFLAGS","kind":"literal","literal":{"kind":"string","string":"EBADFLAGS"}},"kind":"const"}},{"kind":"variable","name":"NONAME","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":264,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ENONAME","kind":"literal","literal":{"kind":"string","string":"ENONAME"}},"kind":"const"}},{"kind":"variable","name":"BADHINTS","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":265,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EBADHINTS","kind":"literal","literal":{"kind":"string","string":"EBADHINTS"}},"kind":"const"}},{"kind":"variable","name":"NOTINITIALIZED","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":266,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ENOTINITIALIZED","kind":"literal","literal":{"kind":"string","string":"ENOTINITIALIZED"}},"kind":"const"}},{"kind":"variable","name":"LOADIPHLPAPI","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":267,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ELOADIPHLPAPI","kind":"literal","literal":{"kind":"string","string":"ELOADIPHLPAPI"}},"kind":"const"}},{"kind":"variable","name":"ADDRGETNETWORKPARAMS","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":268,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"EADDRGETNETWORKPARAMS","kind":"literal","literal":{"kind":"string","string":"EADDRGETNETWORKPARAMS"}},"kind":"const"}},{"kind":"variable","name":"CANCELLED","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":269,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"ECANCELLED","kind":"literal","literal":{"kind":"string","string":"ECANCELLED"}},"kind":"const"}},{"kind":"function","name":"lookup","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":157,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"hostname","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"GetAddrInfoReqWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GetAddrInfoReqWrap"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":273,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"nextTick","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/process.ts","imported":"nextTick"}},{"kind":"import","name":"customPromisifyArgs","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_promisify.ts","imported":"kCustomPromisifyArgsSymbol"}},{"kind":"import","name":"validateCallback","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateCallback"}},{"kind":"import","name":"validateOneOf","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateOneOf"}},{"kind":"import","name":"validateString","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateString"}},{"kind":"import","name":"isIP","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"isIP"}},{"kind":"import","name":"emitInvalidHostnameWarning","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_dns/_utils.ts","imported":"emitInvalidHostnameWarning"}},{"kind":"import","name":"getDefaultVerbatim","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_dns/_utils.ts","imported":"getDefaultVerbatim"}},{"kind":"import","name":"validateHints","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_dns/_utils.ts","imported":"validateHints"}},{"kind":"import","name":"ErrnoException","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":35,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ErrnoException"}},{"kind":"import","name":"dnsException","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"dnsException"}},{"kind":"import","name":"ADDRCONFIG","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":37,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","imported":"AI_ADDRCONFIG"}},{"kind":"import","name":"getaddrinfo","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":37,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","imported":"getaddrinfo"}},{"kind":"import","name":"GetAddrInfoReqWrap","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":37,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","imported":"GetAddrInfoReqWrap"}},{"kind":"import","name":"toASCII","location":{"filename":"https://deno.land/std@0.113.0/node/dns.ts","line":42,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_idna.ts","imported":"toASCII"}}],"/node/events.ts":[{"kind":"typeAlias","name":"GenericFunction","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":30,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}},"typeParams":[]}},{"kind":"interface","name":"WrappedFunction","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":32,"col":0},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}}],"methods":[],"properties":[{"name":"listener","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":33,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"variable","name":"defaultMaxListeners","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":64,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"kind":"let"}},{"kind":"class","name":"EventEmitter","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":100,"col":0},"declarationKind":"export","jsDoc":{"doc":"See also https://nodejs.org/api/events.html"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":131,"col":2}}],"properties":[{"tsType":null,"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":true,"name":"captureRejectionSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":101,"col":2}},{"tsType":{"repr":"Symbol","kind":"keyword","keyword":"symbol"},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":true,"name":"errorMonitor","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":102,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"maxListeners","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":111,"col":2}},{"tsType":{"repr":"EventMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventMap"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_events","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":112,"col":2}},{"jsDoc":{"doc":"Overrides `call` to mimic the es5 behavior with the es6 class."},"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"thisArg","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"call","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":127,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":"public","optional":false,"isAbstract":false,"isStatic":true,"name":"defaultMaxListeners","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":103,"col":2}},{"accessibility":"public","optional":false,"isAbstract":false,"isStatic":true,"name":"defaultMaxListeners","kind":"setter","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":106,"col":2}},{"jsDoc":{"doc":"Alias for emitter.on(eventName, listener)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"addListener","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},{"repr":"WrappedFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WrappedFunction"}}]}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":136,"col":2}},{"jsDoc":{"doc":"Synchronously calls each of the listeners registered for the event named\neventName, in the order they were registered, passing the supplied\narguments to each.","tags":[{"kind":"return","doc":"true if the event had listeners, false otherwise"}]},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"emit","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":150,"col":2}},{"jsDoc":{"doc":"Returns an array listing the events for which the emitter has\nregistered listeners."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"eventNames","kind":"method","functionDef":{"params":[],"returnType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":183,"col":2}},{"jsDoc":{"doc":"Returns the current max listener value for the EventEmitter which is\neither set by emitter.setMaxListeners(n) or defaults to\nEventEmitter.defaultMaxListeners."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"getMaxListeners","kind":"method","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":194,"col":2}},{"jsDoc":{"doc":"Returns the number of listeners listening to the event named\neventName."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"listenerCount","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":202,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"listenerCount","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"emitter","optional":false,"tsType":{"repr":"EventEmitter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventEmitter"}}},{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":206,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"_listeners","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"target","optional":false,"tsType":{"repr":"EventEmitter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventEmitter"}}},{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"unwrap","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"","kind":"array","array":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":213,"col":2}},{"jsDoc":{"doc":"Returns a copy of the array of listeners for the event named eventName."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"listeners","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}}],"returnType":{"repr":"","kind":"array","array":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":235,"col":2}},{"jsDoc":{"doc":"Returns a copy of the array of listeners for the event named eventName,\nincluding any wrappers (such as those created by .once())."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"rawListeners","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}}],"returnType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},{"repr":"WrappedFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WrappedFunction"}}]}],"typeName":"Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":243,"col":2}},{"jsDoc":{"doc":"Alias for emitter.removeListener()."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"off","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":250,"col":2}},{"jsDoc":{"doc":"Adds the listener function to the end of the listeners array for the event\n named eventName. No checks are made to see if the listener has already\nbeen added. Multiple calls passing the same combination of eventName and\nlistener will result in the listener being added, and called, multiple\ntimes."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"on","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},{"repr":"WrappedFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WrappedFunction"}}]}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":269,"col":2}},{"jsDoc":{"doc":"Adds a one-time listener function for the event named eventName. The next\ntime eventName is triggered, this listener is removed and then invoked."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"once","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":285,"col":2}},{"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"onceWrap","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}}],"returnType":{"repr":"WrappedFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WrappedFunction"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":292,"col":2}},{"jsDoc":{"doc":"Adds the listener function to the beginning of the listeners array for the\n event named eventName. No checks are made to see if the listener has\nalready been added. Multiple calls passing the same combination of\neventName and listener will result in the listener being added, and\ncalled, multiple times."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"prependListener","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}},{"repr":"WrappedFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WrappedFunction"}}]}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":341,"col":2}},{"jsDoc":{"doc":"Adds a one-time listener function for the event named eventName to the\nbeginning of the listeners array. The next time eventName is triggered,\nthis listener is removed, and then invoked."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"prependOnceListener","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":353,"col":2}},{"jsDoc":{"doc":"Removes all listeners, or those of the specified eventName."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"removeAllListeners","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":363,"col":2}},{"jsDoc":{"doc":"Removes the specified listener from the listener array for the event\nnamed eventName."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"removeListener","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"eventName","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"GenericFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GenericFunction"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":395,"col":2}},{"jsDoc":{"doc":"By default EventEmitters will print a warning if more than 10 listeners\nare added for a particular event. This is a useful default that helps\nfinding memory leaks. Obviously, not all events should be limited to just\n10 listeners. The emitter.setMaxListeners() method allows the limit to be\nmodified for this specific EventEmitter instance. The value can be set to\nInfinity (or 0) to indicate an unlimited number of listeners."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"setMaxListeners","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":443,"col":2}},{"jsDoc":{"doc":"Creates a Promise that is fulfilled when the EventEmitter emits the given\nevent or that is rejected when the EventEmitter emits 'error'. The Promise\nwill resolve with an array of all the arguments emitted to the given event."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":true,"name":"once","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"emitter","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"EventEmitter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventEmitter"}},{"repr":"EventTarget","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventTarget"}}]}},{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":457,"col":2}},{"jsDoc":{"doc":"Returns an AsyncIterator that iterates eventName events. It will throw if\nthe EventEmitter emits 'error'. It removes all listeners when exiting the\nloop. The value returned by each iteration is an array composed of the\nemitted event arguments."},"accessibility":"public","optional":false,"isAbstract":false,"isStatic":true,"name":"on","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"emitter","optional":false,"tsType":{"repr":"EventEmitter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventEmitter"}}},{"kind":"identifier","name":"event","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"symbol","kind":"keyword","keyword":"symbol"}]}}],"returnType":{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AsyncIterable"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":512,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":747,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"variable","name":"captureRejectionSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":749,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"errorMonitor","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":750,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"listenerCount","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":751,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"on","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":752,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"once","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":753,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"ERR_OUT_OF_RANGE","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_OUT_OF_RANGE"}},{"kind":"import","name":"inspect","location":{"filename":"https://deno.land/std@0.113.0/node/events.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"inspect"}}],"/node/fs.ts":[{"kind":"function","name":"futimes","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_futimes.ts","line":24,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"futimesSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_futimes.ts","line":40,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"namespace","name":"promises","location":{"filename":"./fs/promises.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"variable","name":"access","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":4,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"copyFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":5,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"rename","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":8,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"truncate","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":9,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"rmdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"mkdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":13,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":14,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"symlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":15,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":16,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":17,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"link","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":18,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"unlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":19,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"chmod","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":20,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"chown","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":23,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"utimes","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":24,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"realpath","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":26,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"mkdtemp","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":27,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"writeFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":28,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"appendFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":29,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":30,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":31,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":33,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"promisify"}},{"kind":"import","name":"fs","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/fs.ts","imported":null}}]}},{"kind":"function","name":"unlink","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_unlink.ts","line":1,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":true,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"unlinkSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_unlink.ts","line":6,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fdatasync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fdatasync.ts","line":4,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fdatasyncSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fdatasync.ts","line":11,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ftruncate","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_ftruncate.ts","line":4,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"lenOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"ftruncateSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_ftruncate.ts","line":21,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"len","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"truncate","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_truncate.ts","line":5,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"lenOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"truncateSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_truncate.ts","line":23,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"len","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"access","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_access.ts","line":9,"col":0},"declarationKind":"export","jsDoc":{"doc":"Revisit once https://github.com/denoland/deno/issues/4017 lands"},"functionDef":{"params":[{"kind":"identifier","name":"_path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"_modeOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}}]}},{"kind":"identifier","name":"_callback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"accessSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_access.ts","line":19,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"_path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"_mode","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fsync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fsync.ts","line":4,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fsyncSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fsync.ts","line":11,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":243,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":244,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":249,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":254,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}},{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}},{"repr":"statOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statOptions"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}},{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"statSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":277,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"statSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":278,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"statSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":279,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"BigIntStats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigIntStats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"statSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","line":283,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"statOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"","kind":"union","union":[{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},{"repr":"BigIntStats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigIntStats"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"link","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_link.ts","line":9,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"existingPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"newPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"linkSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_link.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"existingPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"newPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":31,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"TextOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TextOptionsArgument"}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"TextCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TextCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":36,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"BinaryOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BinaryOptionsArgument"}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"BinaryCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BinaryCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":41,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"null","kind":"keyword","keyword":"null"},{"repr":"undefined","kind":"keyword","keyword":"undefined"},{"repr":"FileOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FileOptionsArgument"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"BinaryCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BinaryCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":46,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"BinaryCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BinaryCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":47,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optOrCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"FileOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FileOptionsArgument"}},{"repr":"Callback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Callback"}},{"repr":"null","kind":"keyword","keyword":"null"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"Callback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Callback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":76,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"opt","optional":false,"tsType":{"repr":"TextOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TextOptionsArgument"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":80,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"opt","optional":true,"tsType":{"repr":"BinaryOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BinaryOptionsArgument"}}}],"returnType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","line":84,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"opt","optional":true,"tsType":{"repr":"FileOptionsArgument","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FileOptionsArgument"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rename","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_rename.ts","line":3,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"oldPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"newPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":true,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"renameSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_rename.ts","line":16,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"oldPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"newPath","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":31,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"openCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":32,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"flags","optional":false,"tsType":{"repr":"openFlags","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openFlags"}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"openCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":37,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"flags","optional":false,"tsType":{"repr":"openFlags","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openFlags"}}},{"kind":"identifier","name":"mode","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"openCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":43,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"flagsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"openCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openCallback"}},{"repr":"openFlags","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openFlags"}}]}},{"kind":"identifier","name":"callbackOrMode","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"openCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openCallback"}},{"repr":"number","kind":"keyword","keyword":"number"}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"openCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openCallback"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"openSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":87,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"openSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":88,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"flags","optional":true,"tsType":{"repr":"openFlags","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openFlags"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"openSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":89,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"mode","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"openSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":90,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"flags","optional":true,"tsType":{"repr":"openFlags","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openFlags"}}},{"kind":"identifier","name":"mode","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"openSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","line":95,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"flagsOrMode","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"openFlags","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"openFlags"}},{"repr":"number","kind":"keyword","keyword":"number"}]}},{"kind":"identifier","name":"maybeMode","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_watch.ts","line":48,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"watchOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchOptions"}}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"watchListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchListener"}}}],"returnType":{"repr":"FSWatcher","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FSWatcher"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_watch.ts","line":53,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"listener","optional":false,"tsType":{"repr":"watchListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchListener"}}}],"returnType":{"repr":"FSWatcher","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FSWatcher"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_watch.ts","line":57,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"watchOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchOptions"}}}],"returnType":{"repr":"FSWatcher","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FSWatcher"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_watch.ts","line":61,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"FSWatcher","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FSWatcher"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_watch.ts","line":62,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optionsOrListener","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"watchOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchOptions"}},{"repr":"watchListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchListener"}}]}},{"kind":"identifier","name":"optionsOrListener2","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"watchOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchOptions"}},{"repr":"watchListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"watchListener"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"copyFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_copy.ts","line":5,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"destination","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"copyFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_copy.ts","line":15,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"source","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"destination","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":10,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":11,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":16,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":21,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}},{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}},{"repr":"statOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statOptions"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}},{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":44,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":45,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":49,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"BigIntStats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigIntStats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"lstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","line":53,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"statOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statOptions"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},{"repr":"BigIntStats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigIntStats"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"chmod","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_chmod.ts","line":11,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"mode","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"chmodSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_chmod.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"mode","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"mkdtemp","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdtemp.ts","line":15,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"prefix","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"mkdtempCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"mkdtempCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"mkdtemp","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdtemp.ts","line":16,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"prefix","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"encoding","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"mkdtempCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"mkdtempCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"mkdtemp","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdtemp.ts","line":21,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"prefix","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"encoding","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"mkdtempCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"mkdtempCallback"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"mkdtempCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"mkdtempCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"mkdtempSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdtemp.ts","line":44,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"prefix","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"encoding","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},{"repr":"string","kind":"keyword","keyword":"string"}]}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"chown","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_chown.ts","line":9,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"uid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"gid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"chownSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_chown.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"uid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"gid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"realpath","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_realpath.ts","line":4,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Options"}},{"repr":"Callback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Callback"}}]}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"Callback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Callback"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"realpathSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_realpath.ts","line":21,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"mkdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdir.ts","line":14,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"MkdirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MkdirOptions"}},{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}]}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"mkdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdir.ts","line":51,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"MkdirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"MkdirOptions"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_writeFile.ts","line":16,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"pathOrRid","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"identifier","name":"optOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Encodings","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Encodings"}},{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}},{"repr":"WriteFileOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriteFileOptions"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_writeFile.ts","line":72,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"pathOrRid","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Encodings","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Encodings"}},{"repr":"WriteFileOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriteFileOptions"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readlink","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readlink.ts","line":50,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"ReadlinkCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadlinkCallback"}},{"repr":"ReadlinkOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadlinkOptions"}}]}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"ReadlinkCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadlinkCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readlinkSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readlink.ts","line":74,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"opt","optional":true,"tsType":{"repr":"ReadlinkOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadlinkOptions"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"appendFile","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_appendFile.ts","line":15,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'data' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"pathOrRid","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Encodings","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Encodings"}},{"repr":"WriteFileOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriteFileOptions"}},{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}]}},{"kind":"identifier","name":"callback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"appendFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_appendFile.ts","line":79,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'data' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"pathOrRid","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Encodings","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Encodings"}},{"repr":"WriteFileOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WriteFileOptions"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"close","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_close.ts","line":4,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"closeSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_close.ts","line":16,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"namespace","name":"constants","location":{"filename":"./_fs/_fs_constants.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"variable","name":"F_OK","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":4,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}},"kind":"const"}},{"kind":"variable","name":"R_OK","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":5,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"4","kind":"literal","literal":{"kind":"number","number":4}},"kind":"const"}},{"kind":"variable","name":"W_OK","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"2","kind":"literal","literal":{"kind":"number","number":2}},"kind":"const"}},{"kind":"variable","name":"X_OK","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"1","kind":"literal","literal":{"kind":"number","number":1}},"kind":"const"}},{"kind":"variable","name":"S_IRUSR","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":10,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"256","kind":"literal","literal":{"kind":"number","number":256}},"kind":"const"}},{"kind":"variable","name":"S_IWUSR","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"128","kind":"literal","literal":{"kind":"number","number":128}},"kind":"const"}},{"kind":"variable","name":"S_IXUSR","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"64","kind":"literal","literal":{"kind":"number","number":64}},"kind":"const"}},{"kind":"variable","name":"S_IRGRP","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":13,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"32","kind":"literal","literal":{"kind":"number","number":32}},"kind":"const"}},{"kind":"variable","name":"S_IWGRP","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":14,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"16","kind":"literal","literal":{"kind":"number","number":16}},"kind":"const"}},{"kind":"variable","name":"S_IXGRP","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":15,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"8","kind":"literal","literal":{"kind":"number","number":8}},"kind":"const"}},{"kind":"variable","name":"S_IROTH","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":16,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"4","kind":"literal","literal":{"kind":"number","number":4}},"kind":"const"}},{"kind":"variable","name":"S_IWOTH","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":17,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"2","kind":"literal","literal":{"kind":"number","number":2}},"kind":"const"}},{"kind":"variable","name":"S_IXOTH","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","line":18,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"1","kind":"literal","literal":{"kind":"number","number":1}},"kind":"const"}}]}},{"kind":"function","name":"fstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":10,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":11,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":16,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstat","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":21,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}},{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}},{"repr":"statOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statOptions"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"statCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallback"}},{"repr":"statCallbackBigInt","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statCallbackBigInt"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":44,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":45,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":49,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bigint","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"BigIntStats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigIntStats"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","line":53,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"statOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"statOptions"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"Stats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Stats"}},{"repr":"BigIntStats","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigIntStats"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"exists","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_exists.ts","line":11,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer type once these\nare implemented. See https://github.com/denoland/deno/issues/3403\nDeprecated in node api"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"ExitsCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ExitsCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"existsSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_exists.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"doc":"TODO: Also accept 'path' parameter as a Node polyfill Buffer or URL type once these\nare implemented. See https://github.com/denoland/deno/issues/3403"},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"symlink","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_symlink.ts","line":7,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"target","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"typeOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"SymlinkType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SymlinkType"}},{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"symlinkSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_symlink.ts","line":29,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"target","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"type","optional":true,"tsType":{"repr":"SymlinkType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SymlinkType"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rmdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_rmdir.ts","line":9,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"rmdirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rmdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_rmdir.ts","line":10,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"rmdirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirOptions"}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"rmdirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rmdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_rmdir.ts","line":15,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"rmdirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirOptions"}},{"repr":"rmdirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirCallback"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"rmdirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirCallback"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"rmdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_rmdir.ts","line":33,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"rmdirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"rmdirOptions"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"utimes","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_utimes.ts","line":25,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"CallbackWithError","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CallbackWithError"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"utimesSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_utimes.ts","line":43,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":22,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"withFileTypes","params":[],"computed":false,"optional":true,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]},{"name":"encoding","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"readDirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":27,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"withFileTypes","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]},{"name":"encoding","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"readDirCallbackDirent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallbackDirent"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":32,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"readDirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallback"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":33,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"optionsOrCallback","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"readDirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirOptions"}},{"repr":"readDirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallback"}},{"repr":"readDirCallbackDirent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallbackDirent"}}]}},{"kind":"identifier","name":"maybeCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"readDirCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallback"}},{"repr":"readDirCallbackDirent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirCallbackDirent"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":85,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"withFileTypes","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]},{"name":"encoding","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"Dirent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Dirent"}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":89,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"withFileTypes","params":[],"computed":false,"optional":true,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]},{"name":"encoding","params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","line":93,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"readDirOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"readDirOptions"}}}],"returnType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Dirent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Dirent"}}]}],"typeName":"Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":38,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"access","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_access.ts","imported":"access"}},{"kind":"import","name":"accessSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_access.ts","imported":"accessSync"}},{"kind":"import","name":"appendFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_appendFile.ts","imported":"appendFile"}},{"kind":"import","name":"appendFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_appendFile.ts","imported":"appendFileSync"}},{"kind":"import","name":"chmod","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_chmod.ts","imported":"chmod"}},{"kind":"import","name":"chmodSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_chmod.ts","imported":"chmodSync"}},{"kind":"import","name":"chown","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_chown.ts","imported":"chown"}},{"kind":"import","name":"chownSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_chown.ts","imported":"chownSync"}},{"kind":"import","name":"close","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_close.ts","imported":"close"}},{"kind":"import","name":"closeSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_close.ts","imported":"closeSync"}},{"kind":"import","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_constants.ts","imported":null}},{"kind":"import","name":"copyFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_copy.ts","imported":"copyFile"}},{"kind":"import","name":"copyFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_copy.ts","imported":"copyFileSync"}},{"kind":"import","name":"Dir","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_dir.ts","imported":"default"}},{"kind":"import","name":"Dirent","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_dirent.ts","imported":"default"}},{"kind":"import","name":"exists","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_exists.ts","imported":"exists"}},{"kind":"import","name":"existsSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_exists.ts","imported":"existsSync"}},{"kind":"import","name":"fdatasync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":12,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_fdatasync.ts","imported":"fdatasync"}},{"kind":"import","name":"fdatasyncSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":12,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_fdatasync.ts","imported":"fdatasyncSync"}},{"kind":"import","name":"fstat","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":13,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","imported":"fstat"}},{"kind":"import","name":"fstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":13,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_fstat.ts","imported":"fstatSync"}},{"kind":"import","name":"fsync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":14,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_fsync.ts","imported":"fsync"}},{"kind":"import","name":"fsyncSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":14,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_fsync.ts","imported":"fsyncSync"}},{"kind":"import","name":"ftruncate","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_ftruncate.ts","imported":"ftruncate"}},{"kind":"import","name":"ftruncateSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_ftruncate.ts","imported":"ftruncateSync"}},{"kind":"import","name":"futimes","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":16,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_futimes.ts","imported":"futimes"}},{"kind":"import","name":"futimesSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":16,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_futimes.ts","imported":"futimesSync"}},{"kind":"import","name":"link","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":17,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_link.ts","imported":"link"}},{"kind":"import","name":"linkSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":17,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_link.ts","imported":"linkSync"}},{"kind":"import","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":18,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","imported":"lstat"}},{"kind":"import","name":"lstatSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":18,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_lstat.ts","imported":"lstatSync"}},{"kind":"import","name":"mkdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":19,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdir.ts","imported":"mkdir"}},{"kind":"import","name":"mkdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":19,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdir.ts","imported":"mkdirSync"}},{"kind":"import","name":"mkdtemp","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":20,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdtemp.ts","imported":"mkdtemp"}},{"kind":"import","name":"mkdtempSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":20,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_mkdtemp.ts","imported":"mkdtempSync"}},{"kind":"import","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":21,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","imported":"open"}},{"kind":"import","name":"openSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":21,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_open.ts","imported":"openSync"}},{"kind":"import","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","imported":"readdir"}},{"kind":"import","name":"readdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_readdir.ts","imported":"readdirSync"}},{"kind":"import","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","imported":"readFile"}},{"kind":"import","name":"readFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_readFile.ts","imported":"readFileSync"}},{"kind":"import","name":"readlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_readlink.ts","imported":"readlink"}},{"kind":"import","name":"readlinkSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_readlink.ts","imported":"readlinkSync"}},{"kind":"import","name":"realpath","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_realpath.ts","imported":"realpath"}},{"kind":"import","name":"realpathSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_realpath.ts","imported":"realpathSync"}},{"kind":"import","name":"rename","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_rename.ts","imported":"rename"}},{"kind":"import","name":"renameSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_rename.ts","imported":"renameSync"}},{"kind":"import","name":"rmdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_rmdir.ts","imported":"rmdir"}},{"kind":"import","name":"rmdirSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_rmdir.ts","imported":"rmdirSync"}},{"kind":"import","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","imported":"stat"}},{"kind":"import","name":"statSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_stat.ts","imported":"statSync"}},{"kind":"import","name":"symlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_symlink.ts","imported":"symlink"}},{"kind":"import","name":"symlinkSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_symlink.ts","imported":"symlinkSync"}},{"kind":"import","name":"truncate","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_truncate.ts","imported":"truncate"}},{"kind":"import","name":"truncateSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_truncate.ts","imported":"truncateSync"}},{"kind":"import","name":"unlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_unlink.ts","imported":"unlink"}},{"kind":"import","name":"unlinkSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_unlink.ts","imported":"unlinkSync"}},{"kind":"import","name":"utimes","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":32,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_utimes.ts","imported":"utimes"}},{"kind":"import","name":"utimesSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":32,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_utimes.ts","imported":"utimesSync"}},{"kind":"import","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":33,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_watch.ts","imported":"watch"}},{"kind":"import","name":"writeFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_writeFile.ts","imported":"writeFile"}},{"kind":"import","name":"writeFileSync","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_fs/_fs_writeFile.ts","imported":"writeFileSync"}},{"kind":"import","name":"promises","location":{"filename":"https://deno.land/std@0.113.0/node/fs.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/fs/promises.ts","imported":null}}],"/node/global.ts":[{"kind":"import","name":"processModule","location":{"filename":"https://deno.land/std@0.113.0/node/global.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/process.ts","imported":"default"}},{"kind":"import","name":"bufferModule","location":{"filename":"https://deno.land/std@0.113.0/node/global.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"timers","location":{"filename":"https://deno.land/std@0.113.0/node/global.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/timers.ts","imported":"default"}}],"/node/http.ts":[{"kind":"class","name":"ServerResponse","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":54,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"reqEvent","optional":false,"tsType":{"repr":"Deno.RequestEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.RequestEvent"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":62,"col":2}}],"properties":[{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"private","optional":true,"isAbstract":false,"isStatic":false,"name":"status","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":55,"col":2}},{"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"headers","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":56,"col":2}},{"tsType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadableStream"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"readable","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":57,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"headersSent","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":58,"col":2}},{"tsType":{"repr":"Deno.RequestEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.RequestEvent"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"reqEvent","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":59,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"Chunk","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Chunk"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"firstChunk","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":60,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setHeader","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":109,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getHeader","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":113,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeHead","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"headers","optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":117,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ensureHeaders","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"singleChunk","optional":true,"tsType":{"repr":"Chunk","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Chunk"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":122,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"respond","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"singleChunk","optional":true,"tsType":{"repr":"Chunk","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Chunk"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":131,"col":2}}],"extends":"NodeWritable","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"IncomingMessage","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":142,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"Request","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Request"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":145,"col":2}}],"properties":[{"tsType":{"repr":"Request","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Request"}},"readonly":false,"accessibility":"private","optional":false,"isAbstract":false,"isStatic":false,"name":"req","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":143,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"aborted","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":171,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"httpVersion","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":174,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"headers","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":178,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"method","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":181,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"url","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":185,"col":2}}],"extends":"NodeReadable","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"Server","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":194,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"handler","optional":false,"tsType":{"repr":"ServerHandler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerHandler"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":197,"col":2}}],"properties":[{"tsType":{"repr":"ServerHandler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerHandler"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"handler","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":195,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":201,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"createServer","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":215,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"handler","optional":false,"tsType":{"repr":"ServerHandler","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerHandler"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"METHODS","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":220,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"STATUS_CODES","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/http/http_status.ts","imported":"Status"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"NodeReadable","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/readable.ts","imported":"default"}},{"kind":"import","name":"NodeWritable","location":{"filename":"https://deno.land/std@0.113.0/node/http.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/writable.ts","imported":"default"}}],"/node/module.ts":[{"kind":"function","name":"resolveMainPath","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":1358,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"main","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"undefined","kind":"keyword","keyword":"undefined"},{"repr":"string","kind":"keyword","keyword":"string"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"shouldUseESMLoader","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":1376,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"mainPath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"builtinModules","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":1398,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"createRequire","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":1399,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"class","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":172,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"assign","left":{"kind":"identifier","name":"id","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"identifier","name":"parent","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":182,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"id","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":173,"col":2}},{"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"exports","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":175,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"parent","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":176,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"filename","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":177,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"loaded","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":178,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"children","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":179,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"paths","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":180,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"path","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":181,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"builtinModules","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":193,"col":2}},{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"params":[{"kind":"identifier","name":"module","optional":false,"tsType":{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}}},{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"typeParams":[]}}}]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_extensions","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":194,"col":2}},{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}}}]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_cache","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":198,"col":2}},{"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_pathCache","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":199,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"globalPaths","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":200,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"wrapper","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":202,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"require","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"any","kind":"keyword","keyword":"any"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":210,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"load","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":223,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_compile","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"content","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"any","kind":"keyword","keyword":"any"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":240,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_resolveLookupPaths","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"request","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"parent","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":268,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_resolveFilename","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"request","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"parent","optional":false,"tsType":{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}}},{"kind":"identifier","name":"isMain","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"paths","params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":297,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_findPath","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"request","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"paths","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"identifier","name":"isMain","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"boolean","kind":"keyword","keyword":"boolean"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":404,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_load","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"request","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"parent","optional":false,"tsType":{"repr":"Module","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Module"}}},{"kind":"identifier","name":"isMain","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"any","kind":"keyword","keyword":"any"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":479,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"wrap","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"script","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":559,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_nodeModulePaths","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"from","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":564,"col":2}},{"jsDoc":{"doc":"Create a `require` function that can be used to import CJS modules.\nFollows CommonJS resolution similar to that of Node.js,\nwith `node_modules` lookup and `index.js` lookup support.\nAlso injects available Node.js builtin module polyfills.\n\n```ts\n    import { createRequire } from \"./module.ts\";\n    const require = createRequire(import.meta.url);\n    const fs = require(\"fs\");\n    const leftPad = require(\"left-pad\");\n    const cjsModule = require(\"./cjs_mod\");\n```\n","tags":[{"kind":"param","name":"filename","doc":"path or URL to current module"},{"kind":"return","doc":"Require function to import CJS modules"}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"createRequire","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"RequireFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RequireFunction"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":659,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_initPaths","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":688,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"_preloadModules","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"requests","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":716,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"nodeMods","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/module_all.ts","imported":"default"}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":null}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"fileURLToPath","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/url.ts","imported":"fileURLToPath"}},{"kind":"import","name":"pathToFileURL","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/url.ts","imported":"pathToFileURL"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"ERR_INVALID_MODULE_SPECIFIER","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_MODULE_SPECIFIER"}},{"kind":"import","name":"ERR_MODULE_NOT_FOUND","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_MODULE_NOT_FOUND"}},{"kind":"import","name":"NodeError","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"NodeError"}},{"kind":"import","name":"PackageConfig","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":35,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/module_esm.ts","imported":"PackageConfig"}},{"kind":"import","name":"encodedSepRegEx","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/module_esm.ts","imported":"encodedSepRegEx"}},{"kind":"import","name":"packageExportsResolve","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/module_esm.ts","imported":"packageExportsResolve"}},{"kind":"import","name":"packageImportsResolve","location":{"filename":"https://deno.land/std@0.113.0/node/module.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/module_esm.ts","imported":"packageImportsResolve"}}],"/node/module_all.ts":[{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":42,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/assert.ts","imported":"default"}},{"kind":"import","name":"assertStrict","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/assert/strict.ts","imported":"default"}},{"kind":"import","name":"buffer","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"default"}},{"kind":"import","name":"childProcess","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/child_process.ts","imported":"default"}},{"kind":"import","name":"console","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/console.ts","imported":"default"}},{"kind":"import","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/constants.ts","imported":"default"}},{"kind":"import","name":"crypto","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/crypto.ts","imported":"default"}},{"kind":"import","name":"dns","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/dns.ts","imported":"default"}},{"kind":"import","name":"events","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/events.ts","imported":"default"}},{"kind":"import","name":"fs","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/fs.ts","imported":"default"}},{"kind":"import","name":"fsPromises","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/fs/promises.ts","imported":"default"}},{"kind":"import","name":"http","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":12,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/http.ts","imported":"default"}},{"kind":"import","name":"net","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":13,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/net.ts","imported":"default"}},{"kind":"import","name":"os","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":14,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/os.ts","imported":"default"}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/path.ts","imported":"default"}},{"kind":"import","name":"perfHooks","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":16,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/perf_hooks.ts","imported":"default"}},{"kind":"import","name":"process","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":17,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/process.ts","imported":"default"}},{"kind":"import","name":"querystring","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":18,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/querystring.ts","imported":"default"}},{"kind":"import","name":"stream","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":19,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"default"}},{"kind":"import","name":"stringDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":20,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/string_decoder.ts","imported":"default"}},{"kind":"import","name":"sys","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":21,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/sys.ts","imported":"default"}},{"kind":"import","name":"timers","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/timers.ts","imported":"default"}},{"kind":"import","name":"timersPromises","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/timers/promises.ts","imported":"default"}},{"kind":"import","name":"tty","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/tty.ts","imported":"default"}},{"kind":"import","name":"url","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/url.ts","imported":"default"}},{"kind":"import","name":"util","location":{"filename":"https://deno.land/std@0.113.0/node/module_all.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"default"}}],"/node/module_esm.ts":[{"kind":"variable","name":"encodedSepRegEx","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":43,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"%2F|%2C","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"kind":"const"}},{"kind":"function","name":"packageExportsResolve","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":499,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"packageJSONUrl","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"packageSubpath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"packageConfig","optional":false,"tsType":{"repr":"PackageConfig","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PackageConfig"}}},{"kind":"identifier","name":"base","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"conditions","optional":false,"tsType":{"repr":"Set","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Set"}}}],"returnType":{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"PackageConfig","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":595,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"pjsonPath","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":596,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"exists","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":597,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":598,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"main","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":599,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"exports","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":601,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"typeParams":[]},{"name":"imports","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":603,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"typeParams":[]},{"name":"type","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":605,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"packageImportsResolve","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":710,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"base","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"conditions","optional":false,"tsType":{"repr":"Set","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Set"}}}],"returnType":{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"fileURLToPath","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/url.ts","imported":"fileURLToPath"}},{"kind":"import","name":"pathToFileURL","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/url.ts","imported":"pathToFileURL"}},{"kind":"import","name":"ERR_INVALID_MODULE_SPECIFIER","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_MODULE_SPECIFIER"}},{"kind":"import","name":"ERR_INVALID_PACKAGE_CONFIG","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_PACKAGE_CONFIG"}},{"kind":"import","name":"ERR_INVALID_PACKAGE_TARGET","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_PACKAGE_TARGET"}},{"kind":"import","name":"ERR_MODULE_NOT_FOUND","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_MODULE_NOT_FOUND"}},{"kind":"import","name":"ERR_PACKAGE_IMPORT_NOT_DEFINED","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_PACKAGE_IMPORT_NOT_DEFINED"}},{"kind":"import","name":"ERR_PACKAGE_PATH_NOT_EXPORTED","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_PACKAGE_PATH_NOT_EXPORTED"}},{"kind":"import","name":"NodeError","location":{"filename":"https://deno.land/std@0.113.0/node/module_esm.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"NodeError"}}],"/node/net.ts":[{"kind":"function","name":"isIP","location":{"filename":"https://deno.land/std@0.113.0/node/_net.ts","line":54,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"ip","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isIPv4","location":{"filename":"https://deno.land/std@0.113.0/node/_net.ts","line":46,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"ip","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isIPv6","location":{"filename":"https://deno.land/std@0.113.0/node/_net.ts","line":50,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"ip","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"_normalizeArgs","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":266,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"args","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"NormalizedArgs","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NormalizedArgs"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"Socket","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":741,"col":0},"declarationKind":"export","jsDoc":{"doc":"This class is an abstraction of a TCP socket or a streaming `IPC` endpoint\n(uses named pipes on Windows, and Unix domain sockets otherwise). It is also\nan `EventEmitter`.\n\nA `net.Socket` can be created by the user and used directly to interact with\na server. For example, it is returned by `createConnection`,\nso the user can use it to talk to the server.\n\nIt can also be created by Node.js and passed to the user when a connection\nis received. For example, it is passed to the listeners of a `\"connection\"` event emitted on a `Server`, so the user can use\nit to interact with the client."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"SocketOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SocketOptions"}},{"repr":"number","kind":"keyword","keyword":"number"}]}}],"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":773,"col":2}}],"properties":[{"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[asyncIdSymbol]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":745,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"Handle","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handle"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kHandle]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":747,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kSetNoDelay]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":748,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kLastWriteQueueSize]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":749,"col":2}},{"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kTimeout]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":751,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kBuffer]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":752,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"OnReadOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OnReadOptions"}},"indexType":{"repr":"callback","kind":"literal","literal":{"kind":"string","string":"callback"}}}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kBufferCb]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":753,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"params":[],"typeParams":[]}}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kBufferGen]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":754,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kBytesRead]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":757,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kBytesWritten]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":758,"col":2}},{"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"server","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":761,"col":2}},{"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_server","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":763,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}}]},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"_peername","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":765,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}}]},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"_sockname","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":766,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_pendingData","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":767,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_pendingEncoding","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":768,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_host","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":769,"col":2}},{"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_parent","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":771,"col":2}},{"jsDoc":{"doc":"Sets the socket to timeout after `timeout` milliseconds of inactivity on\nthe socket. By default `net.Socket` do not have a timeout.\n\nWhen an idle timeout is triggered the socket will receive a `\"timeout\"` event but the connection will not be severed. The user must manually call `socket.end()` or `socket.destroy()` to\nend the connection.\n\n```ts\nimport { createRequire } from \"https://deno.land/std@$STD_VERSION/node/module.ts\";\n\nconst require = createRequire(import.meta.url);\nconst net = require(\"net\");\n\nconst socket = new net.Socket();\nsocket.setTimeout(3000);\nsocket.on(\"timeout\", () => {\n  console.log(\"socket timeout\");\n  socket.end();\n});\n```\n\nIf `timeout` is `0`, then the existing idle timeout is disabled.\n\nThe optional `callback` parameter will be added as a one-time listener for the `\"timeout\"` event.","tags":[{"kind":"return","doc":"The socket itself."}]},"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setTimeout","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1003,"col":2}},{"jsDoc":{"doc":"If `true`,`socket.connect(options[, connectListener])` was\ncalled and has not yet finished. It will stay `true` until the socket becomes\nconnected, then it is set to `false` and the `\"connect\"` event is emitted. Note\nthat the `socket.connect(options[, connectListener])` callback is a listener for the `\"connect\"` event."},"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connecting","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1206,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"params":[{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_final","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1325,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Initiate a connection on a given socket.\n\nPossible signatures:\n\n- `socket.connect(options[, connectListener])`\n- `socket.connect(path[, connectListener])` for `IPC` connections.\n- `socket.connect(port[, host][, connectListener])` for TCP connections.\n- Returns: `net.Socket` The socket itself.\n\nThis function is asynchronous. When the connection is established, the `\"connect\"` event will be emitted. If there is a problem connecting,\ninstead of a `\"connect\"` event, an `\"error\"` event will be emitted with\nthe error passed to the `\"error\"` listener.\nThe last parameter `connectListener`, if supplied, will be added as a listener\nfor the `\"connect\"` event **once**.\n\nThis function should only be used for reconnecting a socket after `\"close\"` has been emitted or otherwise it may lead to undefined\nbehavior."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"SocketConnectOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SocketConnectOptions"}},{"repr":"NormalizedArgs","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NormalizedArgs"}}]}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":853,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"host","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":857,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":862,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":863,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":864,"col":2}},{"jsDoc":{"doc":"Pauses the reading of data. That is, `\"data\"` events will not be emitted.\nUseful to throttle back an upload.\n","tags":[{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pause","kind":"method","functionDef":{"params":[],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":942,"col":2}},{"jsDoc":{"doc":"Resumes reading after a call to `socket.pause()`.\n","tags":[{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"resume","kind":"method","functionDef":{"params":[],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":966,"col":2}},{"jsDoc":{"doc":"Enable/disable the use of Nagle's algorithm.\n\nWhen a TCP connection is created, it will have Nagle's algorithm enabled.\n\nNagle's algorithm delays data before it is sent via the network. It attempts\nto optimize throughput at the expense of latency.\n\nPassing `true` for `noDelay` or not passing an argument will disable Nagle's\nalgorithm for the socket. Passing `false` for `noDelay` will enable Nagle's\nalgorithm.\n","tags":[{"kind":"param","name":"noDelay"},{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setNoDelay","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"noDelay","optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1020,"col":2}},{"jsDoc":{"doc":"Enable/disable keep-alive functionality, and optionally set the initial\ndelay before the first keepalive probe is sent on an idle socket.\n\nSet `initialDelay` (in milliseconds) to set the delay between the last\ndata packet received and the first keepalive probe. Setting `0` for`initialDelay` will leave the value unchanged from the default\n(or previous) setting.\n\nEnabling the keep-alive functionality will set the following socket options:\n\n- `SO_KEEPALIVE=1`\n- `TCP_KEEPIDLE=initialDelay`\n- `TCP_KEEPCNT=10`\n- `TCP_KEEPINTVL=1`\n","tags":[{"kind":"param","name":"enable"},{"kind":"param","name":"initialDelay"},{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setKeepAlive","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"enable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"initialDelay","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1063,"col":2}},{"jsDoc":{"doc":"Returns the bound `address`, the address `family` name and `port` of the\nsocket as reported by the operating system:`{ port: 12346, family: \"IPv4\", address: \"127.0.0.1\" }`"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"address","kind":"method","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1081,"col":2}},{"jsDoc":{"doc":"Calling `unref()` on a socket will allow the program to exit if this is the only\nactive socket in the event system. If the socket is already `unref`ed calling`unref()` again will have no effect.\n","tags":[{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"unref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1091,"col":2}},{"jsDoc":{"doc":"Opposite of `unref()`, calling `ref()` on a previously `unref`ed socket will_not_ let the program exit if it's the only socket left (the default behavior).\nIf the socket is `ref`ed calling `ref` again will have no effect.\n","tags":[{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1111,"col":2}},{"jsDoc":{"doc":"This property shows the number of characters buffered for writing. The buffer\nmay contain strings whose length after encoding is not yet known. So this number\nis only an approximation of the number of bytes in the buffer.\n\n`net.Socket` has the property that `socket.write()` always works. This is to\nhelp users get up and running quickly. The computer cannot always keep up\nwith the amount of data that is written to a socket. The network connection\nsimply might be too slow. Node.js will internally queue up the data written to a\nsocket and send it out over the wire when it is possible.\n\nThe consequence of this internal buffering is that memory may grow.\nUsers who experience large or growing `bufferSize` should attempt to\n\"throttle\" the data flows in their program with `socket.pause()` and `socket.resume()`.\n","tags":[{"kind":"deprecated","doc":"Use `writableLength` instead."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bufferSize","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1142,"col":2}},{"jsDoc":{"doc":"The amount of received bytes."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bytesRead","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1153,"col":2}},{"jsDoc":{"doc":"The amount of bytes sent."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bytesWritten","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1160,"col":2}},{"jsDoc":{"doc":"The string representation of the local IP address the remote client is\nconnecting on. For example, in a server listening on `\"0.0.0.0\"`, if a client\nconnects on `\"192.168.1.1\"`, the value of `socket.localAddress` would be`\"192.168.1.1\"`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"localAddress","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1213,"col":2}},{"jsDoc":{"doc":"The numeric representation of the local port. For example, `80` or `21`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"localPort","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1220,"col":2}},{"jsDoc":{"doc":"The string representation of the remote IP address. For example,`\"74.125.127.100\"` or `\"2001:4860:a005::68\"`. Value may be `undefined` if\nthe socket is destroyed (for example, if the client disconnected)."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"remoteAddress","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1228,"col":2}},{"jsDoc":{"doc":"The string representation of the remote IP family. `\"IPv4\"` or `\"IPv6\"`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"remoteFamily","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1235,"col":2}},{"jsDoc":{"doc":"The numeric representation of the remote port. For example, `80` or `21`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"remotePort","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1242,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pending","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1246,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readyState","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1250,"col":2}},{"jsDoc":{"doc":"Half-closes the socket. i.e., it sends a FIN packet. It is possible the\nserver will still send some data.\n\nSee `writable.end()` for further details.\n","tags":[{"kind":"param","name":"encoding","doc":"Only used when data is `string`."},{"kind":"param","name":"cb","doc":"Optional callback for when the socket is finished."},{"kind":"return","doc":"The socket itself."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"end","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"cb","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1273,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"end","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"buffer","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"cb","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1274,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"end","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"encoding","optional":true,"tsType":{"repr":"Encodings","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Encodings"}}},{"kind":"identifier","name":"cb","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1275,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"end","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}]}},{"kind":"identifier","name":"encoding","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Encodings","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Encodings"}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}]}},{"kind":"identifier","name":"cb","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1276,"col":2}},{"jsDoc":{"tags":[{"kind":"param","name":"size","doc":"Optional argument to specify how much data to read."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"read","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"size","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},{"repr":"null","kind":"keyword","keyword":"null"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1290,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"destroySoon","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1301,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_unrefTimer","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1313,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_onTimeout","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1352,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_read","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"size","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1373,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_destroy","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"exception","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1383,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_getpeername","kind":"method","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1430,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_getsockname","kind":"method","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1441,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_writeGeneric","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"writev","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}},{"kind":"identifier","name":"encoding","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1452,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_writev","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"chunks","optional":false,"tsType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"chunk","params":[],"computed":false,"optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"typeParams":[]},{"name":"encoding","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}],"typeName":"Array"}}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1496,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_write","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}},{"kind":"identifier","name":"encoding","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1504,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kAfterAsyncWrite]","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1513,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[kUpdateTimer]","kind":"getter","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1517,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_connecting","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1521,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_bytesDispatched","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1527,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_handle","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"Handle","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handle"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1531,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_handle","kind":"setter","functionDef":{"params":[{"kind":"identifier","name":"v","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Handle","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handle"}},{"repr":"null","kind":"keyword","keyword":"null"}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1535,"col":2}}],"extends":"Duplex","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"variable","name":"Stream","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1540,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"connect","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1554,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"NetConnectOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NetConnectOptions"}}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"Socket","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Socket"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"connect","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1558,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"host","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"Socket","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Socket"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"connect","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1563,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"Socket","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Socket"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"connect","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1564,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"createConnection","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1577,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"_createServerHandle","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1714,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"address","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"addressType","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"fd","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"flags","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"Handle","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Handle"}},{"repr":"number","kind":"keyword","keyword":"number"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"Server","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1930,"col":0},"declarationKind":"export","jsDoc":{"doc":"This class is used to create a TCP or IPC server."},"classDef":{"isAbstract":false,"constructors":[{"jsDoc":{"doc":"`net.Server` is an `EventEmitter` with the following events:\n\n- `\"close\"` - Emitted when the server closes. If connections exist, this\nevent is not emitted until all connections are ended.\n- `\"connection\"` - Emitted when a new connection is made. `socket` is an\ninstance of `net.Socket`.\n- `\"error\"` - Emitted when an error occurs. Unlike `net.Socket`, the\n`\"close\"` event will not be emitted directly following this event unless\n`server.close()` is manually called. See the example in discussion of\n`server.listen()`.\n- `\"listening\"` - Emitted when the server has been bound after calling\n`server.listen()`."},"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1960,"col":2}},{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ServerOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerOptions"}}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1961,"col":2}},{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"ServerOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerOptions"}},{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}]}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1962,"col":2}}],"properties":[{"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[asyncIdSymbol]","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1931,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"allowHalfOpen","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1933,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pauseOnConnect","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1934,"col":2}},{"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_handle","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1937,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_connections","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1938,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_usingWorkers","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1939,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_workers","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1941,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_unref","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1942,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"_pipeName","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1943,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"_connectionKey","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":1944,"col":2}},{"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_listen2","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2384,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Start a server listening for connections. A `net.Server` can be a TCP or\nan `IPC` server depending on what it listens to.\n\nPossible signatures:\n\n- `server.listen(handle[, backlog][, callback])`\n- `server.listen(options[, callback])`\n- `server.listen(path[, backlog][, callback])` for `IPC` servers\n- `server.listen([port[, host[, backlog]]][, callback])` for TCP servers\n\nThis function is asynchronous. When the server starts listening, the `'listening'` event will be emitted. The last parameter `callback`will be added as a listener for the `'listening'`\nevent.\n\nAll `listen()` methods can take a `backlog` parameter to specify the maximum\nlength of the queue of pending connections. The actual length will be determined\nby the OS through sysctl settings such as `tcp_max_syn_backlog` and `somaxconn` on Linux. The default value of this parameter is 511 (not 512).\n\nAll `Socket` are set to `SO_REUSEADDR` (see [`socket(7)`](https://man7.org/linux/man-pages/man7/socket.7.html) for\ndetails).\n\nThe `server.listen()` method can be called again if and only if there was an\nerror during the first `server.listen()` call or `server.close()` has been\ncalled. Otherwise, an `ERR_SERVER_ALREADY_LISTEN` error will be thrown.\n\nOne of the most common errors raised when listening is `EADDRINUSE`.\nThis happens when another server is already listening on the requested`port`/`path`/`handle`. One way to handle this would be to retry\nafter a certain amount of time:\n\n```ts\nimport { createRequire } from \"https://deno.land/std@$STD_VERSION/node/module.ts\";\n\nconst require = createRequire(import.meta.url);\nconst net = require(\"net\");\n\nconst PORT = 3000;\nconst HOST = \"127.0.0.1\";\nconst server = new net.Server();\n\nserver.on(\"error\", (e: Error & { code: string; }) => {\n  if (e.code === \"EADDRINUSE\") {\n    console.log(\"Address in use, retrying...\");\n    setTimeout(() => {\n      server.close();\n      server.listen(PORT, HOST);\n    }, 1000);\n  }\n});\n```"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"hostname","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"backlog","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2032,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"hostname","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2038,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"backlog","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2043,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"port","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2044,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"backlog","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2045,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2046,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"ListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ListenOptions"}}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2047,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"handle","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}},{"kind":"identifier","name":"backlog","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2049,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"handle","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}},{"kind":"identifier","name":"listeningListener","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2051,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2052,"col":2}},{"jsDoc":{"doc":"Stops the server from accepting new connections and keeps existing\nconnections. This function is asynchronous, the server is finally closed\nwhen all connections are ended and the server emits a `\"close\"` event.\nThe optional `callback` will be called once the `\"close\"` event occurs. Unlike\nthat event, it will be called with an `Error` as its only argument if the server\nwas not open when it was closed.\n","tags":[{"kind":"param","name":"cb","doc":"Called when the server is closed."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"cb","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":true,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2208,"col":2}},{"jsDoc":{"doc":"Returns the bound `address`, the address `family` name, and `port` of the server\nas reported by the operating system if listening on an IP socket\n(useful to find which port was assigned when getting an OS-assigned address):`{ port: 12346, family: \"IPv4\", address: \"127.0.0.1\" }`.\n\nFor a server listening on a pipe or Unix domain socket, the name is returned\nas a string.\n\n```ts\nimport { createRequire } from \"https://deno.land/std@$STD_VERSION/node/module.ts\";\nimport { Socket } from \"https://deno.land/std@$STD_VERSION/node/net.ts\";\n\nconst require = createRequire(import.meta.url);\nconst net = require(\"net\");\n\nconst server = net.createServer((socket: Socket) => {\n  socket.end(\"goodbye\\n\");\n}).on(\"error\", (err: Error) => {\n  // Handle errors here.\n  throw err;\n});\n\n// Grab an arbitrary unused port.\nserver.listen(() => {\n  console.log(\"opened server on\", server.address());\n});\n```\n\n`server.address()` returns `null` before the `\"listening\"` event has been\nemitted or after calling `server.close()`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"address","kind":"method","functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2281,"col":2}},{"jsDoc":{"doc":"Asynchronously get the number of concurrent connections on the server. Works\nwhen sockets were sent to forks.\n\nCallback should take two arguments `err` and `count`."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getConnections","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"count","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}}}],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2304,"col":2}},{"jsDoc":{"doc":"Calling `unref()` on a server will allow the program to exit if this is the only\nactive server in the event system. If the server is already `unref`ed calling `unref()` again will have no effect."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"unref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2353,"col":2}},{"jsDoc":{"doc":"Opposite of `unref()`, calling `ref()` on a previously `unref`ed server will _not_ let the program exit if it's the only server left (the default behavior).\nIf the server is `ref`ed calling `ref()` again will have no effect."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"this","kind":"this","this":true},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2367,"col":2}},{"jsDoc":{"doc":"Indicates whether or not the server is listening for connections."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listening","kind":"getter","functionDef":{"params":[],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2380,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_emitCloseIfDrained","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2386,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_setupWorker","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"socketList","optional":false,"tsType":{"repr":"EventEmitter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"EventEmitter"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2403,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[EventEmitter.captureRejectionSymbol]","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}},{"kind":"identifier","name":"event","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"sock","optional":false,"tsType":{"repr":"Socket","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Socket"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2413,"col":2}}],"extends":"EventEmitter","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"createServer","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2498,"col":0},"declarationKind":"export","jsDoc":{"doc":"Creates a new TCP or IPC server.\n\nAccepts an `options` object with properties `allowHalfOpen` (default `false`)\nand `pauseOnConnect` (default `false`).\n\nIf `allowHalfOpen` is set to `false`, then the socket will\nautomatically end the writable side when the readable side ends.\n\nIf `allowHalfOpen` is set to `true`, when the other end of the socket\nsignals the end of transmission, the server will only send back the end of\ntransmission when `socket.end()` is explicitly called. For example, in the\ncontext of TCP, when a FIN packed is received, a FIN packed is sent back\nonly when `socket.end()` is explicitly called. Until then the connection is\nhalf-closed (non-readable but still writable). See `\"end\"` event and RFC 1122\n(section 4.2.2.13) for more information.\n\n`pauseOnConnect` indicates whether the socket should be paused on incoming\nconnections.\n\nIf `pauseOnConnect` is set to `true`, then the socket associated with each\nincoming connection will be paused, and no data will be read from its\nhandle. This allows connections to be passed between processes without any\ndata being read by the original process. To begin reading data from a paused\nsocket, call `socket.resume()`.\n\nThe server can be a TCP server or an IPC server, depending on what it\n`listen()` to.\n\nHere is an example of an TCP echo server which listens for connections on\nport 8124:\n\n```ts\nimport { createRequire } from \"https://deno.land/std@$STD_VERSION/node/module.ts\";\nimport { Socket } from \"https://deno.land/std@$STD_VERSION/node/net.ts\";\n\nconst require = createRequire(import.meta.url);\nconst net = require(\"net\");\n\nconst server = net.createServer((c: Socket) => {\n  // \"connection\" listener.\n  console.log(\"client connected\");\n  c.on(\"end\", () => {\n    console.log(\"client disconnected\");\n  });\n  c.write(\"hello\\r\\n\");\n  c.pipe(c);\n});\n\nserver.on(\"error\", (err: Error) => {\n  throw err;\n});\n\nserver.listen(8124, () => {\n  console.log(\"server bound\");\n});\n```\n\nTest this by using `telnet`:\n\n```console\n$ telnet localhost 8124\n```\n","tags":[{"kind":"param","name":"options","doc":"Socket options."},{"kind":"param","name":"connectionListener","doc":"Automatically set as a listener for the `\"connection\"` event."},{"kind":"return","doc":"A `net.Server`."}]},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"ServerOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ServerOptions"}}},{"kind":"identifier","name":"connectionListener","optional":true,"tsType":{"repr":"ConnectionListener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionListener"}}}],"returnType":{"repr":"Server","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Server"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":2507,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"EventEmitter","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/events.ts","imported":"EventEmitter"}},{"kind":"import","name":"isIP","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"isIP"}},{"kind":"import","name":"isIPv4","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"isIPv4"}},{"kind":"import","name":"isIPv6","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"isIPv6"}},{"kind":"import","name":"normalizedArgsSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"normalizedArgsSymbol"}},{"kind":"import","name":"DuplexOptions","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/duplex.ts","imported":"DuplexOptions"}},{"kind":"import","name":"WritableEncodings","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/writable.ts","imported":"WritableEncodings"}},{"kind":"import","name":"Duplex","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Duplex"}},{"kind":"import","name":"asyncIdSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_async_hooks.ts","imported":"asyncIdSymbol"}},{"kind":"import","name":"defaultTriggerAsyncIdScope","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_async_hooks.ts","imported":"defaultTriggerAsyncIdScope"}},{"kind":"import","name":"newAsyncId","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_async_hooks.ts","imported":"newAsyncId"}},{"kind":"import","name":"ownerSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_async_hooks.ts","imported":"ownerSymbol"}},{"kind":"import","name":"ERR_INVALID_ADDRESS_FAMILY","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ADDRESS_FAMILY"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"ERR_INVALID_ARG_VALUE","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_VALUE"}},{"kind":"import","name":"ERR_INVALID_FD_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_FD_TYPE"}},{"kind":"import","name":"ERR_INVALID_IP_ADDRESS","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_IP_ADDRESS"}},{"kind":"import","name":"ERR_MISSING_ARGS","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_MISSING_ARGS"}},{"kind":"import","name":"ERR_SERVER_ALREADY_LISTEN","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_SERVER_ALREADY_LISTEN"}},{"kind":"import","name":"ERR_SERVER_NOT_RUNNING","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_SERVER_NOT_RUNNING"}},{"kind":"import","name":"ERR_SOCKET_CLOSED","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_SOCKET_CLOSED"}},{"kind":"import","name":"errnoException","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"errnoException"}},{"kind":"import","name":"exceptionWithHostPort","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"exceptionWithHostPort"}},{"kind":"import","name":"NodeError","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"NodeError"}},{"kind":"import","name":"uvExceptionWithHostPort","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"uvExceptionWithHostPort"}},{"kind":"import","name":"ErrnoException","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":49,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ErrnoException"}},{"kind":"import","name":"Encodings","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":50,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"Encodings"}},{"kind":"import","name":"isUint8Array","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":51,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","imported":"isUint8Array"}},{"kind":"import","name":"kAfterAsyncWrite","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"kAfterAsyncWrite"}},{"kind":"import","name":"kBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"kBuffer"}},{"kind":"import","name":"kBufferCb","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"kBufferCb"}},{"kind":"import","name":"kBufferGen","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"kBufferGen"}},{"kind":"import","name":"kHandle","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"kHandle"}},{"kind":"import","name":"kUpdateTimer","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"kUpdateTimer"}},{"kind":"import","name":"onStreamRead","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"onStreamRead"}},{"kind":"import","name":"setStreamTimeout","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"setStreamTimeout"}},{"kind":"import","name":"writeGeneric","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"writeGeneric"}},{"kind":"import","name":"writevGeneric","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":52,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream_base_commons.ts","imported":"writevGeneric"}},{"kind":"import","name":"kTimeout","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":64,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_timers.ts","imported":"kTimeout"}},{"kind":"import","name":"nextTick","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":65,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/process.ts","imported":"nextTick"}},{"kind":"import","name":"DTRACE_NET_SERVER_CONNECTION","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":66,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_dtrace.ts","imported":"DTRACE_NET_SERVER_CONNECTION"}},{"kind":"import","name":"DTRACE_NET_STREAM_END","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":66,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_dtrace.ts","imported":"DTRACE_NET_STREAM_END"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":70,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"LookupOneOptions","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":71,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/dns.ts","imported":"LookupOneOptions"}},{"kind":"import","name":"validateAbortSignal","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":72,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateAbortSignal"}},{"kind":"import","name":"validateFunction","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":72,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateFunction"}},{"kind":"import","name":"validateInt32","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":72,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateInt32"}},{"kind":"import","name":"validateNumber","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":72,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateNumber"}},{"kind":"import","name":"validatePort","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":72,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validatePort"}},{"kind":"import","name":"validateString","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":72,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateString"}},{"kind":"import","name":"TCPConstants","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":80,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","imported":"constants"}},{"kind":"import","name":"TCP","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":80,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","imported":"TCP"}},{"kind":"import","name":"TCPConnectWrap","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":80,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","imported":"TCPConnectWrap"}},{"kind":"import","name":"PipeConstants","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":85,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","imported":"constants"}},{"kind":"import","name":"Pipe","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":85,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","imported":"Pipe"}},{"kind":"import","name":"PipeConnectWrap","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":85,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","imported":"PipeConnectWrap"}},{"kind":"import","name":"ShutdownWrap","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":90,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","imported":"ShutdownWrap"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":91,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":92,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"ADDRCONFIG","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":93,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/dns.ts","imported":"ADDRCONFIG"}},{"kind":"import","name":"dnsLookup","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":93,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/dns.ts","imported":"lookup"}},{"kind":"import","name":"codeMap","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":94,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","imported":"codeMap"}},{"kind":"import","name":"guessHandleType","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":95,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/util.ts","imported":"guessHandleType"}},{"kind":"import","name":"debuglog","location":{"filename":"https://deno.land/std@0.113.0/node/net.ts","line":96,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_debuglog.ts","imported":"debuglog"}}],"/node/os.ts":[{"kind":"interface","name":"UserInfoOptions","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":81,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"encoding","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":82,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"arch","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":115,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the operating system CPU architecture for which the Deno binary was compiled"},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"cpus","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":126,"col":0},"declarationKind":"export","jsDoc":{"doc":"Not yet implemented"},"functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"CPUCoreInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CPUCoreInfo"}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"endianness","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":135,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a string identifying the endianness of the CPU for which the Deno\nbinary was compiled. Possible values are 'BE' for big endian and 'LE' for\nlittle endian."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"BE","kind":"literal","literal":{"kind":"string","string":"BE"}},{"repr":"LE","kind":"literal","literal":{"kind":"string","string":"LE"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"freemem","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":144,"col":0},"declarationKind":"export","jsDoc":{"doc":"Return free memory amount"},"functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getPriority","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":149,"col":0},"declarationKind":"export","jsDoc":{"doc":"Not yet implemented"},"functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"pid","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"homedir","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":155,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the string path of the current user's home directory."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"hostname","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":168,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the host name of the operating system as a string."},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"loadavg","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":173,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns an array containing the 1, 5, and 15 minute load averages"},"functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"networkInterfaces","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":181,"col":0},"declarationKind":"export","jsDoc":{"doc":"Not yet implemented"},"functionDef":{"params":[],"returnType":{"repr":"NetworkInterfaces","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NetworkInterfaces"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"platform","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":185,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the a string identifying the operating system platform. The value is set at compile time. Possible values are 'darwin', 'linux', and 'win32'."},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"release","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":190,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the operating system as a string"},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"setPriority","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":195,"col":0},"declarationKind":"export","jsDoc":{"doc":"Not yet implemented"},"functionDef":{"params":[{"kind":"identifier","name":"pid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"priority","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"tmpdir","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":209,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns the operating system's default directory for temporary files as a string."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"totalmem","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":236,"col":0},"declarationKind":"export","jsDoc":{"doc":"Return total physical memory amount"},"functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"type","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":241,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns operating system type (i.e. 'Windows_NT', 'Linux', 'Darwin')"},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"uptime","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":255,"col":0},"declarationKind":"export","jsDoc":{"doc":"Not yet implemented"},"functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"userInfo","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":260,"col":0},"declarationKind":"export","jsDoc":{"doc":"Not yet implemented"},"functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"UserInfoOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UserInfoOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"UserInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UserInfo"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":267,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"EOL","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":316,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"devNull","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":317,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":319,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":21,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"validateIntegerRange","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"validateIntegerRange"}},{"kind":"import","name":"fsEOL","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fs/eol.ts","imported":"EOL"}},{"kind":"import","name":"process","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/process.ts","imported":"default"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"osType","location":{"filename":"https://deno.land/std@0.113.0/node/os.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"osType"}}],"/node/path.ts":[{"kind":"function","name":"common","location":{"filename":"https://deno.land/std@0.113.0/path/common.ts","line":18,"col":0},"declarationKind":"export","jsDoc":{"doc":"Determines the common path from a set of paths, using an optional separator,\nwhich defaults to the OS default separator.\n\n```ts\n      import { common } from \"https://deno.land/std@$STD_VERSION/path/mod.ts\";\n      const p = common([\n        \"./deno/std/path/mod.ts\",\n        \"./deno/std/fs/mod.ts\",\n      ]);\n      console.log(p); // \"./deno/std/\"\n```"},"functionDef":{"params":[{"kind":"identifier","name":"paths","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"assign","left":{"kind":"identifier","name":"sep","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"SEP","location":{"filename":"https://deno.land/std@0.113.0/path/common.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/separator.ts","imported":"SEP"}},{"kind":"interface","name":"GlobOptions","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":13,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"extended","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":17,"col":2},"jsDoc":{"doc":"Extended glob syntax.\nSee https://www.linuxjournal.com/content/bash-extended-globbing. Defaults\nto true."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"globstar","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":21,"col":2},"jsDoc":{"doc":"Globstar syntax.\nSee https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.\nIf false, `**` is treated like `*`. Defaults to true."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"caseInsensitive","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":23,"col":2},"jsDoc":{"doc":"Whether globstar should be case insensitive."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"os","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":25,"col":2},"jsDoc":{"doc":"Operating system. Defaults to the native OS."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"OSType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OSType"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"GlobToRegExpOptions","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":28,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}},"typeParams":[]}},{"kind":"function","name":"globToRegExp","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":103,"col":0},"declarationKind":"export","jsDoc":{"doc":"Convert a glob string to a regular expression.\n\nTries to match bash glob expansion as closely as possible.\n\nBasic glob syntax:\n- `*` - Matches everything without leaving the path segment.\n- `?` - Matches any single character.\n- `{foo,bar}` - Matches `foo` or `bar`.\n- `[abcd]` - Matches `a`, `b`, `c` or `d`.\n- `[a-d]` - Matches `a`, `b`, `c` or `d`.\n- `[!abcd]` - Matches any single character besides `a`, `b`, `c` or `d`.\n- `[[:<class>:]]` - Matches any character belonging to `<class>`.\n    - `[[:alnum:]]` - Matches any digit or letter.\n    - `[[:digit:]abc]` - Matches any digit, `a`, `b` or `c`.\n    - See https://facelessuser.github.io/wcmatch/glob/#posix-character-classes\n      for a complete list of supported character classes.\n- `\\` - Escapes the next character for an `os` other than `\"windows\"`.\n- \\` - Escapes the next character for `os` set to `\"windows\"`.\n- `/` - Path separator.\n- `\\` - Additional path separator only for `os` set to `\"windows\"`.\n\nExtended syntax:\n- Requires `{ extended: true }`.\n- `?(foo|bar)` - Matches 0 or 1 instance of `{foo,bar}`.\n- `@(foo|bar)` - Matches 1 instance of `{foo,bar}`. They behave the same.\n- `*(foo|bar)` - Matches _n_ instances of `{foo,bar}`.\n- `+(foo|bar)` - Matches _n > 0_ instances of `{foo,bar}`.\n- `!(foo|bar)` - Matches anything other than `{foo,bar}`.\n- See https://www.linuxjournal.com/content/bash-extended-globbing.\n\nGlobstar syntax:\n- Requires `{ globstar: true }`.\n- `**` - Matches any number of any path segments.\n    - Must comprise its entire path segment in the provided glob.\n- See https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.\n\nNote the following properties:\n- The generated `RegExp` is anchored at both start and end.\n- Repeating and trailing separators are tolerated. Trailing separators in the\n  provided glob have no meaning and are discarded.\n- Absolute globs will only match absolute paths, etc.\n- Empty globs will match nothing.\n- Any special glob syntax must be contained to one path segment. For example,\n  `?(foo|bar/baz)` is invalid. The separator will take precedence and the\n  first segment ends with an unclosed group.\n- If a path segment ends with unclosed groups or a dangling escape prefix, a\n  parse error has occurred. Every character for that segment is taken\n  literally in this event.\n\nLimitations:\n- A negative group like `!(foo|bar)` will wrongly be converted to a negative\n  look-ahead followed by a wildcard. This means that `!(foo).js` will wrongly\n  fail to match `foobar.js`, even though `foobar` is not `foo`. Effectively,\n  `!(foo|bar)` is treated like `!(@(foo|bar)*)`. This will work correctly if\n  the group occurs not nested at the end of the segment."},"functionDef":{"params":[{"kind":"identifier","name":"glob","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"extended","value":"[UNSUPPORTED]"},{"kind":"keyValue","key":"globstar","value":{"kind":"assign","left":{"kind":"identifier","name":"globstarOption","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}},{"kind":"assign","key":"os","value":"[UNSUPPORTED]"},{"kind":"assign","key":"caseInsensitive","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"GlobToRegExpOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobToRegExpOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isGlob","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":343,"col":0},"declarationKind":"export","jsDoc":{"doc":"Test whether the given string is a glob"},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"normalizeGlob","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":376,"col":0},"declarationKind":"export","jsDoc":{"doc":"Like normalize(), but doesn't collapse \"**\\/..\" when `globstar` is true."},"functionDef":{"params":[{"kind":"identifier","name":"glob","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"globstar","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"joinGlobs","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":395,"col":0},"declarationKind":"export","jsDoc":{"doc":"Like join(), but doesn't collapse \"**\\/..\" when `globstar` is true."},"functionDef":{"params":[{"kind":"identifier","name":"globs","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"extended","value":"[UNSUPPORTED]"},{"kind":"assign","key":"globstar","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"osType","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"osType"}},{"kind":"import","name":"SEP","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/separator.ts","imported":"SEP"}},{"kind":"import","name":"SEP_PATTERN","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/separator.ts","imported":"SEP_PATTERN"}},{"kind":"import","name":"_win32","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/win32.ts","imported":null}},{"kind":"import","name":"_posix","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/posix.ts","imported":null}},{"kind":"import","name":"OSType","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"OSType"}},{"kind":"interface","name":"ParsedPath","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":7,"col":0},"declarationKind":"export","jsDoc":{"doc":"A parsed path object generated by path.parse() or consumed by path.format()."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"root","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":11,"col":2},"jsDoc":{"doc":"The root of the path such as '/' or 'c:\\'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"dir","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":15,"col":2},"jsDoc":{"doc":"The full directory path such as '/home/user/dir' or 'c:\\path\\dir'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"base","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":19,"col":2},"jsDoc":{"doc":"The file name including extension (if any) such as 'index.html'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"ext","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":23,"col":2},"jsDoc":{"doc":"The file extension (if any) such as '.html'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":27,"col":2},"jsDoc":{"doc":"The file name without extension (if any) such as 'index'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"FormatInputPathObject","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":30,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"Partial","kind":"typeRef","typeRef":{"typeParams":[{"repr":"ParsedPath","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParsedPath"}}],"typeName":"Partial"}},"typeParams":[]}},{"kind":"variable","name":"SEP","location":{"filename":"https://deno.land/std@0.113.0/path/separator.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"SEP_PATTERN","location":{"filename":"https://deno.land/std@0.113.0/path/separator.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"win32","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"posix","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":13,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"_win32","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/win32.ts","imported":null}},{"kind":"import","name":"_posix","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/posix.ts","imported":null}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/path.ts","line":4,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"m","location":{"filename":"https://deno.land/std@0.113.0/node/path.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":null}}],"/node/perf_hooks.ts":[{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/perf_hooks.ts","line":59,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"variable","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/perf_hooks.ts","line":9,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"monitorEventLoopDelay","location":{"filename":"https://deno.land/std@0.113.0/node/perf_hooks.ts","line":54,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[],"typeParams":[]}},"kind":"const"}},{"kind":"variable","name":"performance","location":{"filename":"https://deno.land/std@0.113.0/node/perf_hooks.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"Omit","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Performance","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Performance"}},{"repr":"","kind":"union","union":[{"repr":"clearMeasures","kind":"literal","literal":{"kind":"string","string":"clearMeasures"}},{"repr":"getEntries","kind":"literal","literal":{"kind":"string","string":"getEntries"}},{"repr":"getEntriesByName","kind":"literal","literal":{"kind":"string","string":"getEntriesByName"}},{"repr":"getEntriesByType","kind":"literal","literal":{"kind":"string","string":"getEntriesByType"}}]}],"typeName":"Omit"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"eventLoopUtilization","params":[],"computed":false,"optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"typeParams":[]},{"name":"nodeTiming","params":[],"computed":false,"optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"typeParams":[]},{"name":"timerify","params":[],"computed":false,"optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"typeParams":[]},{"name":"timeOrigin","params":[],"computed":false,"optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"kind":"const"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/perf_hooks.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}}],"/node/process.ts":[{"kind":"variable","name":"arch","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":35,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_arch"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"chdir","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":46,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_chdir_directory"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"cwd","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":49,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_cwd"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"env","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":55,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_env\nRequires env permissions"},"variableDef":{"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"kind":"const"}},{"kind":"variable","name":"exit","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":68,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_exit_code"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"nextTick","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":71,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_nexttick_callback_args"},"functionDef":{"params":[{"kind":"identifier","name":"this","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"nextTick","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":72,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"this","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Array"}}}]}},{"kind":"function","name":"nextTick","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":77,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"this","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Array"}}}]}},{"kind":"variable","name":"pid","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":90,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_pid"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"platform","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":93,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_platform"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"version","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":103,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_version\n\nThis value is hard coded to latest stable release of Node, as\nsome packages are checking it for compatibility. Previously\nit pointed to Deno version, but that led to incompability\nwith some packages."},"variableDef":{"tsType":{"repr":"v16.11.1","kind":"literal","literal":{"kind":"string","string":"v16.11.1"}},"kind":"const"}},{"kind":"variable","name":"versions","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":113,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_versions\n\nThis value is hard coded to latest stable release of Node, as\nsome packages are checking it for compatibility. Previously\nit contained only output of `Deno.version`, but that led to incompability\nwith some packages. Value of `v8` field is still taken from `Deno.version`."},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"stderr","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":200,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_stderr"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"stdin","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":203,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_stdin"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"stdout","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":221,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_stdout"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"emitWarning","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":271,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process_emitwarning_warning_options"},"functionDef":{"params":[{"kind":"identifier","name":"warning","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}},{"kind":"identifier","name":"type","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"type","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"detail","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"code","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"ctor","params":[],"computed":false,"optional":false,"tsType":{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"code","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"ctor","optional":true,"tsType":{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"removeListener","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":477,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"removeAllListeners","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":478,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":465,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process"},"variableDef":{"tsType":{"repr":"Process","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Process"}},"kind":"const"}},{"kind":"variable","name":"process","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":465,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/process.html#process_process"},"variableDef":{"tsType":{"repr":"Process","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Process"}},"kind":"const"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"EventEmitter","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/events.ts","imported":"EventEmitter"}},{"kind":"import","name":"fromFileUrl","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"fromFileUrl"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"Readable","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Readable"}},{"kind":"import","name":"Writable","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"Writable"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"validateString","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_validators.ts","imported":"validateString"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"getOptionValue","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_options.ts","imported":"getOptionValue"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/process.ts","line":12,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}}],"/node/querystring.ts":[{"kind":"interface","name":"ParsedUrlQuery","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":3,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}}],"typeParams":[]}},{"kind":"variable","name":"hexTable","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":14,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Array"}},"kind":"const"}},{"kind":"function","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":26,"col":0},"declarationKind":"export","jsDoc":{"doc":"Parses a URL query string into a collection of key and value pairs.","tags":[{"kind":"param","name":"str","doc":"The URL query string to parse"},{"kind":"param","name":"sep","doc":"The substring used to delimit key and value pairs in the query string. Default: '&'."},{"kind":"param","name":"eq","doc":"The substring used to delimit keys and values in the query string. Default: '='."},{"kind":"param","name":"options","doc":"The parse options"}]},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"identifier","name":"sep","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"eq","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"decodeURIComponent","value":"[UNSUPPORTED]"},{"kind":"assign","key":"maxKeys","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"ParseOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParseOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"ParsedUrlQuery","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParsedUrlQuery"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"encodeStr","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":65,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"noEscapeTable","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}}},{"kind":"identifier","name":"hexTable","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"stringify","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":130,"col":0},"declarationKind":"export","jsDoc":{"doc":"Produces a URL query string from a given obj by iterating through the object's \"own properties\".","tags":[{"kind":"param","name":"obj","doc":"The object to serialize into a URL query string."},{"kind":"param","name":"sep","doc":"The substring used to delimit key and value pairs in the query string. Default: '&'."},{"kind":"param","name":"eq","doc":"The substring used to delimit keys and values in the query string. Default: '='."},{"kind":"param","name":"options","doc":"The stringify options"}]},"functionDef":{"params":[{"kind":"identifier","name":"obj","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Record"}}},{"kind":"assign","left":{"kind":"identifier","name":"sep","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"identifier","name":"eq","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"encodeURIComponent","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"StringifyOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"StringifyOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"decode","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":155,"col":0},"declarationKind":"export","jsDoc":{"doc":"Alias of querystring.parse()"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"encode","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":157,"col":0},"declarationKind":"export","jsDoc":{"doc":"Alias of querystring.stringify()"},"variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"unescape","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":158,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"escape","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":159,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/querystring.ts","line":161,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}}],"/node/stream.ts":[{"kind":"namespace","name":"promises","location":{"filename":"./_stream/promises.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"function","name":"pipeline","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":10,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"streams","optional":false,"tsType":null},"tsType":{"repr":"PipelineArguments","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PipelineArguments"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"finished","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":25,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"stream","optional":false,"tsType":{"repr":"FinishedStreams","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FinishedStreams"}}},{"kind":"identifier","name":"opts","optional":true,"tsType":{"repr":"FinishedOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FinishedOptions"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"pl","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/pipeline.ts","imported":"default"}},{"kind":"import","name":"PipelineArguments","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/pipeline.ts","imported":"PipelineArguments"}},{"kind":"import","name":"eos","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/end_of_stream.ts","imported":"default"}},{"kind":"import","name":"FinishedOptions","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/end_of_stream.ts","imported":"FinishedOptions"}},{"kind":"import","name":"FinishedStreams","location":{"filename":"https://deno.land/std@0.113.0/node/_stream/promises.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/end_of_stream.ts","imported":"StreamImplementations"}}]}},{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":53,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"Duplex","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":20,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/duplex.ts","imported":"default"}},{"kind":"import","name":"eos","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":21,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/end_of_stream.ts","imported":"default"}},{"kind":"import","name":"PassThrough","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/passthrough.ts","imported":"default"}},{"kind":"import","name":"pipeline","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/pipeline.ts","imported":"default"}},{"kind":"import","name":"promises","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":24,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/promises.ts","imported":null}},{"kind":"import","name":"Readable","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":25,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/readable.ts","imported":"default"}},{"kind":"import","name":"Stream","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/stream.ts","imported":"default"}},{"kind":"import","name":"Transform","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/transform.ts","imported":"default"}},{"kind":"import","name":"Writable","location":{"filename":"https://deno.land/std@0.113.0/node/stream.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_stream/writable.ts","imported":"default"}}],"/node/string_decoder.ts":[{"kind":"class","name":"StringDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":280,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"encoding","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":290,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"encoding","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":281,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"buf","optional":true,"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}}],"typeParams":[]}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"end","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":282,"col":2}},{"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}}],"typeParams":[]}}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"fillLast","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":283,"col":2}},{"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"lastChar","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":284,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"lastNeed","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":285,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"lastTotal","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":286,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}},{"kind":"identifier","name":"n","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"text","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":287,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"Buffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Buffer"}}}],"typeParams":[]}},"readonly":false,"accessibility":"public","optional":false,"isAbstract":false,"isStatic":false,"name":"write","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":288,"col":2}}],"indexSignatures":[],"methods":[],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":320,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/buffer.ts","imported":"Buffer"}},{"kind":"import","name":"castEncoding","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"normalizeEncoding"}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/string_decoder.ts","line":23,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}}],"/node/sys.ts":[{"kind":"function","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_promisify.ts","line":59,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"original","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"callbackify","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_callbackify.ts","line":87,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"original","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"PromiseLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"ResultT","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResultT"}}],"typeName":"PromiseLike"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"ResultT"}]}},{"kind":"namespace","name":"types","location":{"filename":"./_util/_util_types.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"function","name":"isAnyArrayBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":32,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArrayBufferView","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":40,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArgumentsObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":44,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArrayBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":48,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isAsyncFunction","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":54,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBigInt64Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":60,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBigUint64Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":66,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBooleanObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":72,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBoxedPrimitive","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":76,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isDataView","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":86,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isDate","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":90,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isFloat32Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":96,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isFloat64Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":102,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isGeneratorFunction","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":108,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isGeneratorObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":115,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isInt8Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":119,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isInt16Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":123,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isInt32Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":129,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isMap","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":135,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isMapIterator","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":139,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isModuleNamespaceObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":145,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNativeError","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":149,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNumberObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":153,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBigIntObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":157,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isPromise","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":161,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isRegExp","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":165,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSet","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":169,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSetIterator","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":173,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSharedArrayBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":179,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isStringObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":186,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSymbolObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":190,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isTypedArray","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":195,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint8Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":202,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"value is Uint8Array","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"value"},"type":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint8ClampedArray","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":208,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint16Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":215,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint32Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":221,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isWeakMap","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":227,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isWeakSet","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":231,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}}]}},{"kind":"function","name":"inspect","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":30,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"object","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"rest","arg":{"kind":"identifier","name":"opts","optional":false,"tsType":null},"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArray","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":47,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `Array.isArray()` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBoolean","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":52,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"boolean\" || value instanceof Boolean` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNull","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":57,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === null` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNullOrUndefined","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":62,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === null || value === undefined` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNumber","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":67,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"number\" || value instanceof Number` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isString","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":72,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"string\" || value instanceof String` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":77,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"symbol\"` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUndefined","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":82,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === undefined` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isObject","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":87,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value !== null && typeof value === \"object\"` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isError","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":92,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `e instanceof Error` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isFunction","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":97,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"function\"` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isRegExp","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":102,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value instanceof RegExp` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isPrimitive","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":107,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === null || (typeof value !== \"object\" && typeof value !== \"function\")` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getSystemErrorName","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":117,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a system error name from an error code number.","tags":[{"kind":"param","name":"code","doc":"error code number"}]},"functionDef":{"params":[{"kind":"identifier","name":"code","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"deprecate","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":132,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/util.html#util_util_deprecate_fn_msg_code","tags":[{"kind":"param","name":"_code","doc":"This implementation of deprecate won't apply the deprecation code"}]},"functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"_code","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"ReturnType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReturnType"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"Parameters","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Parameters"}}}],"typeParams":[]}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}}}]}},{"kind":"function","name":"format","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":190,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"inherits","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":230,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor","tags":[{"kind":"param","name":"ctor","doc":"Constructor function which needs to inherit the prototype."},{"kind":"param","name":"superCtor","doc":"Constructor function to inherit prototype from."}]},"functionDef":{"params":[{"kind":"identifier","name":"ctor","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}},{"kind":"identifier","name":"superCtor","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"U"}]}},{"kind":"typeAlias","name":"TextDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":260,"col":0},"declarationKind":"export","jsDoc":{"doc":"The global TextDecoder"},"typeAliasDef":{"tsType":{"repr":"","kind":"importType","importType":{"specifier":"./_utils.ts","qualifier":"_TextDecoder"}},"typeParams":[]}},{"kind":"variable","name":"TextDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":261,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"typeAlias","name":"TextEncoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":264,"col":0},"declarationKind":"export","jsDoc":{"doc":"The global TextEncoder"},"typeAliasDef":{"tsType":{"repr":"","kind":"importType","importType":{"specifier":"./_utils.ts","qualifier":"_TextEncoder"}},"typeParams":[]}},{"kind":"variable","name":"TextEncoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":265,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":267,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_promisify.ts","imported":"promisify"}},{"kind":"import","name":"callbackify","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_callbackify.ts","imported":"callbackify"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"ERR_OUT_OF_RANGE","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_OUT_OF_RANGE"}},{"kind":"import","name":"errorMap","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"errorMap"}},{"kind":"import","name":"types","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","imported":null}},{"kind":"import","name":"_TextDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":257,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"_TextDecoder"}},{"kind":"import","name":"_TextEncoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":257,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"_TextEncoder"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":267,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}}],"/node/timers.ts":[{"kind":"variable","name":"setTimeout","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":4,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"clearTimeout","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":5,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"setInterval","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"clearInterval","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"setImmediate","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":8,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"params":[{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}},"kind":"const"}},{"kind":"variable","name":"clearImmediate","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":14,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/timers.ts","line":16,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}}],"/node/tty.ts":[{"kind":"function","name":"isatty","location":{"filename":"https://deno.land/std@0.113.0/node/tty.ts","line":7,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/tty.ts","line":22,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}}],"/node/url.ts":[{"kind":"variable","name":"URL","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":45,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"format","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":61,"col":0},"declarationKind":"export","jsDoc":{"doc":"The URL object has both a `toString()` method and `href` property that return string serializations of the URL.\nThese are not, however, customizable in any way.\nThis method allows for basic customization of the output.","tags":[{"kind":"unsupported","value":"@see Tested in `parallel/test-url-format-whatwg.js`."},{"kind":"param","name":"urlObject"},{"kind":"param","name":"options"},{"kind":"param","name":"options.auth","doc":"`true` if the serialized URL string should include the username and password, `false` otherwise. **Default**: `true`."},{"kind":"param","name":"options.fragment","doc":"`true` if the serialized URL string should include the fragment, `false` otherwise. **Default**: `true`."},{"kind":"param","name":"options.search","doc":"`true` if the serialized URL string should include the search query, **Default**: `true`."},{"kind":"param","name":"options.unicode","doc":"`true` if Unicode characters appearing in the host component of the URL string should be encoded directly as opposed to being Punycode encoded. **Default**: `false`."},{"kind":"return","doc":"a customizable serialization of a URL `String` representation of a `WHATWG URL` object."}]},"functionDef":{"params":[{"kind":"identifier","name":"urlObject","optional":false,"tsType":{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"auth","params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"fragment","params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"search","params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"unicode","params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fileURLToPath","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":125,"col":0},"declarationKind":"export","jsDoc":{"doc":"This function ensures the correct decodings of percent-encoded characters as well as ensuring a cross-platform valid absolute path string.","tags":[{"kind":"unsupported","value":"@see Tested in `parallel/test-fileurltopath.js`."},{"kind":"param","name":"path","doc":"The file URL string or URL object to convert to a path."},{"kind":"return","doc":"The fully-resolved platform-specific Node.js file path."}]},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"pathToFileURL","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":230,"col":0},"declarationKind":"export","jsDoc":{"doc":"This function ensures that `filepath` is resolved absolutely, and that the URL control characters are correctly encoded when converting into a File URL.","tags":[{"kind":"unsupported","value":"@see Tested in `parallel/test-url-pathtofileurl.js`."},{"kind":"param","name":"filepath","doc":"The file path string to convert to a file URL."},{"kind":"return","doc":"The file URL object."}]},"functionDef":{"params":[{"kind":"identifier","name":"filepath","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":324,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"ERR_INVALID_ARG_VALUE","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_VALUE"}},{"kind":"import","name":"ERR_INVALID_FILE_URL_HOST","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_FILE_URL_HOST"}},{"kind":"import","name":"ERR_INVALID_FILE_URL_PATH","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_FILE_URL_PATH"}},{"kind":"import","name":"ERR_INVALID_URL_SCHEME","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":22,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_URL_SCHEME"}},{"kind":"import","name":"CHAR_BACKWARD_SLASH","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/_constants.ts","imported":"CHAR_BACKWARD_SLASH"}},{"kind":"import","name":"CHAR_FORWARD_SLASH","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/_constants.ts","imported":"CHAR_FORWARD_SLASH"}},{"kind":"import","name":"CHAR_LOWERCASE_A","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/_constants.ts","imported":"CHAR_LOWERCASE_A"}},{"kind":"import","name":"CHAR_LOWERCASE_Z","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/_constants.ts","imported":"CHAR_LOWERCASE_Z"}},{"kind":"import","name":"path","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":35,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/path.ts","imported":null}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"osType","location":{"filename":"https://deno.land/std@0.113.0/node/url.ts","line":36,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"osType"}}],"/node/util.ts":[{"kind":"function","name":"callbackify","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_callbackify.ts","line":87,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"original","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"PromiseLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"ResultT","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ResultT"}}],"typeName":"PromiseLike"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"ResultT"}]}},{"kind":"namespace","name":"types","location":{"filename":"./_util/_util_types.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"function","name":"isAnyArrayBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":32,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArrayBufferView","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":40,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArgumentsObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":44,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArrayBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":48,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isAsyncFunction","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":54,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBigInt64Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":60,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBigUint64Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":66,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBooleanObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":72,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBoxedPrimitive","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":76,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isDataView","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":86,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isDate","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":90,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isFloat32Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":96,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isFloat64Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":102,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isGeneratorFunction","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":108,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isGeneratorObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":115,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isInt8Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":119,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isInt16Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":123,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isInt32Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":129,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isMap","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":135,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isMapIterator","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":139,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isModuleNamespaceObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":145,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNativeError","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":149,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNumberObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":153,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBigIntObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":157,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isPromise","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":161,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isRegExp","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":165,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSet","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":169,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSetIterator","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":173,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSharedArrayBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":179,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isStringObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":186,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSymbolObject","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":190,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isTypedArray","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":195,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint8Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":202,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"value is Uint8Array","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"value"},"type":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint8ClampedArray","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":208,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint16Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":215,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUint32Array","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":221,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isWeakMap","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":227,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isWeakSet","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","line":231,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}}]}},{"kind":"function","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/_util/_util_promisify.ts","line":59,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"original","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}}],"returnType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"inspect","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":30,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"object","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"rest","arg":{"kind":"identifier","name":"opts","optional":false,"tsType":null},"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isArray","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":47,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `Array.isArray()` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isBoolean","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":52,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"boolean\" || value instanceof Boolean` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNull","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":57,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === null` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNullOrUndefined","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":62,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === null || value === undefined` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isNumber","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":67,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"number\" || value instanceof Number` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isString","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":72,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"string\" || value instanceof String` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":77,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"symbol\"` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isUndefined","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":82,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === undefined` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isObject","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":87,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value !== null && typeof value === \"object\"` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isError","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":92,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `e instanceof Error` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isFunction","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":97,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `typeof value === \"function\"` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isRegExp","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":102,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value instanceof RegExp` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isPrimitive","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":107,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"- use `value === null || (typeof value !== \"object\" && typeof value !== \"function\")` instead."}]},"functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getSystemErrorName","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":117,"col":0},"declarationKind":"export","jsDoc":{"doc":"Returns a system error name from an error code number.","tags":[{"kind":"param","name":"code","doc":"error code number"}]},"functionDef":{"params":[{"kind":"identifier","name":"code","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"deprecate","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":132,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/util.html#util_util_deprecate_fn_msg_code","tags":[{"kind":"param","name":"_code","doc":"This implementation of deprecate won't apply the deprecation code"}]},"functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"_code","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"ReturnType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReturnType"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"Parameters","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Parameters"}}}],"typeParams":[]}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"any","kind":"keyword","keyword":"any"}}],"typeParams":[]}}}]}},{"kind":"function","name":"format","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":190,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"inherits","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":230,"col":0},"declarationKind":"export","jsDoc":{"doc":"https://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor","tags":[{"kind":"param","name":"ctor","doc":"Constructor function which needs to inherit the prototype."},{"kind":"param","name":"superCtor","doc":"Constructor function to inherit prototype from."}]},"functionDef":{"params":[{"kind":"identifier","name":"ctor","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}},{"kind":"identifier","name":"superCtor","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"U","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"U"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"},{"name":"U"}]}},{"kind":"typeAlias","name":"TextDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":260,"col":0},"declarationKind":"export","jsDoc":{"doc":"The global TextDecoder"},"typeAliasDef":{"tsType":{"repr":"","kind":"importType","importType":{"specifier":"./_utils.ts","qualifier":"_TextDecoder"}},"typeParams":[]}},{"kind":"variable","name":"TextDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":261,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"typeAlias","name":"TextEncoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":264,"col":0},"declarationKind":"export","jsDoc":{"doc":"The global TextEncoder"},"typeAliasDef":{"tsType":{"repr":"","kind":"importType","importType":{"specifier":"./_utils.ts","qualifier":"_TextEncoder"}},"typeParams":[]}},{"kind":"variable","name":"TextEncoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":265,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":267,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_promisify.ts","imported":"promisify"}},{"kind":"import","name":"callbackify","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_callbackify.ts","imported":"callbackify"}},{"kind":"import","name":"ERR_INVALID_ARG_TYPE","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_INVALID_ARG_TYPE"}},{"kind":"import","name":"ERR_OUT_OF_RANGE","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ERR_OUT_OF_RANGE"}},{"kind":"import","name":"errorMap","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"errorMap"}},{"kind":"import","name":"types","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","imported":null}},{"kind":"import","name":"_TextDecoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":257,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"_TextDecoder"}},{"kind":"import","name":"_TextEncoder","location":{"filename":"https://deno.land/std@0.113.0/node/util.ts","line":257,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"_TextEncoder"}}],"/node/assert/strict.ts":[{"kind":"class","name":"AssertionError","location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":376,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"AssertionErrorConstructorOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AssertionErrorConstructorOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":380,"col":2}}],"properties":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"toString","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":536,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[inspect.custom]","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_recurseTimes","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"ctx","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/assertion_error.ts","line":540,"col":2}}],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"AssertionError","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/assertion_error.ts","imported":"AssertionError"}},{"kind":"function","name":"deepEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":320,"col":0},"declarationKind":"export","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"deepStrictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":336,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"doesNotMatch","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":390,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"string","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"regexp","optional":false,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"doesNotReject","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":520,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"asyncFn","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}}]}},{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"doesNotThrow","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":193,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"expected","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"equal","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":217,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fail","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":365,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"never","kind":"keyword","keyword":"never"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"match","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":376,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"regexp","optional":false,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notDeepEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":328,"col":0},"declarationKind":"export","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notDeepStrictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":350,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":252,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"notStrictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":305,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"ok","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":81,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"rejects","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":444,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"asyncFn","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}}]}},{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"strictEqual","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":291,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"throws","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":83,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"error","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},{"repr":"Function","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Function"}},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"strict","location":{"filename":"https://deno.land/std@0.113.0/node/assert.ts","line":422,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"message","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}]}}],"returnType":{"repr":"asserts actual","kind":"typePredicate","typePredicate":{"asserts":true,"param":{"type":"identifier","name":"actual"},"type":null}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"strict","location":{"filename":"https://deno.land/std@0.113.0/node/assert/strict.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/assert.ts","imported":"strict"}}],"/node/fs/promises.ts":[{"kind":"variable","name":"access","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":4,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"copyFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":5,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"open","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"rename","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":8,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"truncate","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":9,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"rmdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"mkdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readdir","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":13,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":14,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"symlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":15,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"lstat","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":16,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"stat","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":17,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"link","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":18,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"unlink","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":19,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"chmod","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":20,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"chown","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":23,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"utimes","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":24,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"realpath","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":26,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"mkdtemp","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":27,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"writeFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":28,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"appendFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":29,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"readFile","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":30,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"watch","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":31,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":33,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"promisify"}},{"kind":"import","name":"fs","location":{"filename":"https://deno.land/std@0.113.0/node/fs/promises.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/fs.ts","imported":null}}],"/node/internal_binding/async_wrap.ts":[{"kind":"enum","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":27,"col":0},"declarationKind":"export","enumDef":{"members":[{"name":"kInit"},{"name":"kBefore"},{"name":"kAfter"},{"name":"kDestroy"},{"name":"kPromiseResolve"},{"name":"kTotals"},{"name":"kCheck"},{"name":"kExecutionAsyncId"},{"name":"kTriggerAsyncId"},{"name":"kAsyncIdCounter"},{"name":"kDefaultTriggerAsyncId"},{"name":"kUsesExecutionAsyncResource"},{"name":"kStackLength"}]}},{"kind":"function","name":"newAsyncId","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":44,"col":0},"declarationKind":"export","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"variable","name":"asyncIdFields","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":56,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Float64Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Float64Array"}},"kind":"const"}},{"kind":"enum","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":70,"col":0},"declarationKind":"export","enumDef":{"members":[{"name":"NONE"},{"name":"GETADDRINFOREQWRAP"},{"name":"PIPECONNECTWRAP"},{"name":"PIPESERVERWRAP"},{"name":"PIPEWRAP"},{"name":"SHUTDOWNWRAP"},{"name":"TCPCONNECTWRAP"},{"name":"TCPSERVERWRAP"},{"name":"TCPWRAP"},{"name":"WRITEWRAP"}]}},{"kind":"class","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":85,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"provider","optional":false,"tsType":{"repr":"providerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"providerType"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":89,"col":2}}],"properties":[{"tsType":{"repr":"providerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"providerType"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"provider","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":86,"col":2}},{"tsType":null,"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"asyncId","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":87,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getAsyncId","kind":"method","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":94,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getProviderType","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","line":102,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}}],"/node/internal_binding/cares_wrap.ts":[{"kind":"variable","name":"ARES_AI_CANONNAME","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":33,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"ARES_AI_NUMERICHOST","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":34,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"ARES_AI_PASSIVE","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":35,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"ARES_AI_NUMERICSERV","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":36,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"AI_V4MAPPED","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":37,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"AI_ALL","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":38,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"AI_ADDRCONFIG","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":39,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"ARES_AI_NOSORT","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":40,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"ARES_AI_ENVHOSTS","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":41,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"class","name":"GetAddrInfoReqWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":43,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":53,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"ErrnoException","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ErrnoException"}},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"addressOrAddresses","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"LookupAddress","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LookupAddress"}}},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"family","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"callback","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":44,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"family","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":49,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"hostname","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":50,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"err","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"addresses","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"oncomplete","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":51,"col":2}}],"indexSignatures":[],"methods":[],"extends":"AsyncWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"getaddrinfo","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":58,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"GetAddrInfoReqWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GetAddrInfoReqWrap"}}},{"kind":"identifier","name":"hostname","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"family","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"_hints","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"verbatim","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"ErrnoException","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_errors.ts","imported":"ErrnoException"}},{"kind":"import","name":"LookupAddress","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/dns.ts","imported":"LookupAddress"}},{"kind":"import","name":"isIPv4","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"isIPv4"}},{"kind":"import","name":"codeMap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","imported":"codeMap"}},{"kind":"import","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"AsyncWrap"}},{"kind":"import","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/cares_wrap.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"providerType"}}],"/node/internal_binding/connection_wrap.ts":[{"kind":"class","name":"ConnectionWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":29,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"jsDoc":{"doc":"Creates a new ConnectionWrap class instance.","tags":[{"kind":"param","name":"provider","doc":"Provider type."},{"kind":"param","name":"object","doc":"Optional stream object."}]},"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"provider","optional":false,"tsType":{"repr":"providerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"providerType"}}},{"kind":"identifier","name":"object","optional":true,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},{"repr":"Deno.Closer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Closer"}}]}}],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":39,"col":2}}],"properties":[{"jsDoc":{"doc":"Optional connection callback."},"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"handle","optional":true,"tsType":{"repr":"ConnectionWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionWrap"}}}],"typeParams":[]}}},{"repr":"null","kind":"keyword","keyword":"null"}]},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"onconnection","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":31,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"tags":[{"kind":"param","name":"req","doc":"A connect request."},{"kind":"param","name":"status","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"afterConnect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"","kind":"intersection","intersection":[{"repr":"AsyncWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AsyncWrap"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[{"name":"oncomplete","kind":"method","params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"handle","optional":false,"tsType":{"repr":"ConnectionWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionWrap"}}},{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"readable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"writeable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"optional":false,"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[],"callSignatures":[],"indexSignatures":[]}}]}}]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":50,"col":2}}],"extends":"LibuvStreamWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"LibuvStreamWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","imported":"LibuvStreamWrap"}},{"kind":"import","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"AsyncWrap"}},{"kind":"import","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"providerType"}}],"/node/internal_binding/handle_wrap.ts":[{"kind":"class","name":"HandleWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":30,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"provider","optional":false,"tsType":{"repr":"providerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"providerType"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":31,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[{"kind":"assign","left":{"kind":"identifier","name":"cb","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":35,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ref","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":40,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"unref","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":44,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_onClose","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":49,"col":2}}],"extends":"AsyncWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"nextTick","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/process.ts","imported":"nextTick"}},{"kind":"import","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"AsyncWrap"}},{"kind":"import","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"providerType"}}],"/node/internal_binding/node_file.ts":[{"kind":"function","name":"writeBuffer","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/node_file.ts","line":42,"col":0},"declarationKind":"export","jsDoc":{"doc":"Write to the given file from the given buffer synchronously.\n\nImplements sync part of WriteBuffer in src/node_file.cc\nSee: https://github.com/nodejs/node/blob/e9ed113/src/node_file.cc#L1818\n","tags":[{"kind":"param","name":"fs","doc":"file descriptor"},{"kind":"param","name":"buffer","doc":"the data to write"},{"kind":"param","name":"offset","doc":"where in the buffer to start from"},{"kind":"param","name":"length","doc":"how much to write"},{"kind":"param","name":"position","doc":"if integer, position to write at in the file. if null, write from the current position"},{"kind":"param","name":"context","doc":"context object for passing error number"}]},"functionDef":{"params":[{"kind":"identifier","name":"fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"buffer","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"offset","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"length","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"position","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"ctx","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"errno","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/node_file.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/asserts.ts","imported":"assert"}}],"/node/internal_binding/node_options.ts":[{"kind":"function","name":"getOptions","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/node_options.ts","line":29,"col":0},"declarationKind":"export","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"parse","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/node_options.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/flags/mod.ts","imported":"parse"}}],"/node/internal_binding/pipe_wrap.ts":[{"kind":"enum","name":"socketType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":31,"col":0},"declarationKind":"export","enumDef":{"members":[{"name":"SOCKET"},{"name":"SERVER"},{"name":"IPC"}]}},{"kind":"class","name":"Pipe","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":37,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"type","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":41,"col":2}}],"properties":[{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reading","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":38,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ipc","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":39,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bind","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":73,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":77,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_req","optional":false,"tsType":{"repr":"PipeConnectWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PipeConnectWrap"}}},{"kind":"identifier","name":"_address","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"_afterConnect","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"handle","optional":false,"tsType":{"repr":"Pipe","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Pipe"}}},{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"PipeConnectWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PipeConnectWrap"}}},{"kind":"identifier","name":"readable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"writable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"typeParams":[]}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":81,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"open","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":95,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setPendingInstances","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_instances","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":101,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"fchmod","kind":"method","functionDef":{"params":[],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":105,"col":2}}],"extends":"ConnectionWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"PipeConnectWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":110,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":120,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"handle","optional":false,"tsType":{"repr":"ConnectionWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionWrap"}}},{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"PipeConnectWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PipeConnectWrap"}}},{"kind":"identifier","name":"readable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"writeable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"oncomplete","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":111,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"address","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":118,"col":2}}],"indexSignatures":[],"methods":[],"extends":"AsyncWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"enum","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":125,"col":0},"declarationKind":"export","enumDef":{"members":[{"name":"SOCKET"},{"name":"SERVER"},{"name":"IPC"},{"name":"UV_READABLE"},{"name":"UV_WRITABLE"}]}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"unreachable","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/asserts.ts","imported":"unreachable"}},{"kind":"import","name":"ConnectionWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","imported":"ConnectionWrap"}},{"kind":"import","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"AsyncWrap"}},{"kind":"import","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/pipe_wrap.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"providerType"}}],"/node/internal_binding/stream_wrap.ts":[{"kind":"variable","name":"kReadBytesOrError","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":43,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"kArrayBufferOffset","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":44,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"kBytesWritten","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":45,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"kLastWriteWasAsync","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":46,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"kNumStreamBaseStateFields","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":47,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"streamBaseState","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":50,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"kind":"const"}},{"kind":"class","name":"WriteWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":55,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":64,"col":2}}],"properties":[{"tsType":{"repr":"H","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"H"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"handle","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":56,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"oncomplete","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":57,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"async","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":58,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bytes","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":59,"col":2}},{"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"buffer","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":60,"col":2}},{"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"callback","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":61,"col":2}},{"tsType":{"repr":"","kind":"array","array":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_chunks","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":62,"col":2}}],"indexSignatures":[],"methods":[],"extends":"AsyncWrap","implements":[],"typeParams":[{"name":"H","constraint":{"repr":"HandleWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HandleWrap"}}}],"superTypeParams":[]}},{"kind":"class","name":"ShutdownWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":69,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":74,"col":2}}],"properties":[{"tsType":{"repr":"H","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"H"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"handle","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":70,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"oncomplete","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":71,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"callback","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":72,"col":2}}],"indexSignatures":[],"methods":[],"extends":"AsyncWrap","implements":[],"typeParams":[{"name":"H","constraint":{"repr":"HandleWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HandleWrap"}}}],"superTypeParams":[]}},{"kind":"variable","name":"kStreamBaseField","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":79,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Symbol","kind":"keyword","keyword":"symbol"},"kind":"const"}},{"kind":"class","name":"LibuvStreamWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":83,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"provider","optional":false,"tsType":{"repr":"providerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"providerType"}}},{"kind":"identifier","name":"stream","optional":true,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},{"repr":"Deno.Closer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Closer"}}]}}],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":97,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},{"repr":"Deno.Closer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Closer"}}]},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"[kStreamBaseField]","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":84,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reading","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":86,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"destroyed","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":90,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeQueueSize","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":91,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bytesRead","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":92,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bytesWritten","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":93,"col":2}},{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"params":[{"kind":"identifier","name":"_arrayBuffer","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"_nread","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"onread","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":95,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Start the reading of the stream.","tags":[{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readStart","kind":"method","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":109,"col":2}},{"jsDoc":{"doc":"Stop the reading of the stream.","tags":[{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readStop","kind":"method","functionDef":{"params":[],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":127,"col":2}},{"jsDoc":{"doc":"Shutdown the stream.","tags":[{"kind":"param","name":"req","doc":"A shutdown request wrapper."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"shutdown","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"ShutdownWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"ShutdownWrap"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":138,"col":2}},{"jsDoc":{"tags":[{"kind":"param","name":"userBuf"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"useUserBuffer","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_userBuf","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":156,"col":2}},{"jsDoc":{"doc":"Write a buffer to the stream.","tags":[{"kind":"param","name":"req","doc":"A write request wrapper."},{"kind":"param","name":"data","doc":"The Uint8Array buffer to write to the stream."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeBuffer","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"WriteWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"WriteWrap"}}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":167,"col":2}},{"jsDoc":{"doc":"Write multiple chunks at once.","tags":[{"kind":"param","name":"req","doc":"A write request wrapper."},{"kind":"param","name":"chunks"},{"kind":"param","name":"allBuffers"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writev","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_req","optional":false,"tsType":{"repr":"WriteWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"WriteWrap"}}},{"kind":"identifier","name":"_chunks","optional":false,"tsType":{"repr":"any","kind":"keyword","keyword":"any"}},{"kind":"identifier","name":"_allBuffers","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":185,"col":2}},{"jsDoc":{"doc":"Write an ASCII string to the stream.","tags":[{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeAsciiString","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"WriteWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"WriteWrap"}}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":199,"col":2}},{"jsDoc":{"doc":"Write an UTF8 string to the stream.","tags":[{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUtf8String","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"WriteWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"WriteWrap"}}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":209,"col":2}},{"jsDoc":{"doc":"Write an UCS2 string to the stream.","tags":[{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeUcs2String","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_req","optional":false,"tsType":{"repr":"WriteWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"WriteWrap"}}},{"kind":"identifier","name":"_data","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":219,"col":2}},{"jsDoc":{"doc":"Write an LATIN1 string to the stream.","tags":[{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"writeLatin1String","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_req","optional":false,"tsType":{"repr":"WriteWrap","kind":"typeRef","typeRef":{"typeParams":[{"repr":"LibuvStreamWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"LibuvStreamWrap"}}],"typeName":"WriteWrap"}}},{"kind":"identifier","name":"_data","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":227,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_onClose","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":231,"col":2}}],"extends":"HandleWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"HandleWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/handle_wrap.ts","imported":"HandleWrap"}},{"kind":"import","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"AsyncWrap"}},{"kind":"import","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"providerType"}},{"kind":"import","name":"codeMap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":32,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","imported":"codeMap"}},{"kind":"import","name":"writeAll","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","line":33,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/util.ts","imported":"writeAll"}}],"/node/internal_binding/symbols.ts":[{"kind":"variable","name":"asyncIdSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/symbols.ts","line":25,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"unique","tsType":{"repr":"symbol","kind":"keyword","keyword":"symbol"}}},"kind":"const"}},{"kind":"variable","name":"ownerSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/symbols.ts","line":26,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"unique","tsType":{"repr":"symbol","kind":"keyword","keyword":"symbol"}}},"kind":"const"}}],"/node/internal_binding/tcp_wrap.ts":[{"kind":"class","name":"TCPConnectWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":65,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":78,"col":2}}],"properties":[{"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[{"kind":"identifier","name":"status","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"handle","optional":false,"tsType":{"repr":"ConnectionWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectionWrap"}}},{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"TCPConnectWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TCPConnectWrap"}}},{"kind":"identifier","name":"readable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"writeable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"typeParams":[]}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"oncomplete","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":66,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"address","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":73,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"port","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":74,"col":2}},{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"localAddress","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":75,"col":2}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"localPort","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":76,"col":2}}],"indexSignatures":[],"methods":[],"extends":"AsyncWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"enum","name":"constants","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":83,"col":0},"declarationKind":"export","enumDef":{"members":[{"name":"SOCKET"},{"name":"SERVER"},{"name":"UV_TCP_IPV6ONLY"}]}},{"kind":"class","name":"TCP","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":89,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"jsDoc":{"doc":"Creates a new TCP class instance.","tags":[{"kind":"param","name":"type","doc":"The socket type."},{"kind":"param","name":"conn","doc":"Optional connection object to wrap."}]},"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"type","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"conn","optional":true,"tsType":{"repr":"Deno.Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Conn"}}}],"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":112,"col":2}}],"properties":[{"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"[ownerSymbol]","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":90,"col":2}},{"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"reading","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":91,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Opens a file descriptor.","tags":[{"kind":"param","name":"fd","doc":"The file descriptor to open."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"open","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":152,"col":2}},{"jsDoc":{"doc":"Bind to an IPv4 address.","tags":[{"kind":"param","name":"address","doc":"The hostname to bind to."},{"kind":"param","name":"port","doc":"The port to bind to"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bind","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"address","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":163,"col":2}},{"jsDoc":{"doc":"Bind to an IPv4 address.","tags":[{"kind":"param","name":"address","doc":"The hostname to bind to."},{"kind":"param","name":"port","doc":"The port to bind to"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"bind6","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"address","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"flags","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":173,"col":2}},{"jsDoc":{"doc":"Connect to an IPv4 address.","tags":[{"kind":"param","name":"req","doc":"A TCPConnectWrap instance."},{"kind":"param","name":"address","doc":"The hostname to connect to."},{"kind":"param","name":"port","doc":"The port to connect to."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"TCPConnectWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TCPConnectWrap"}}},{"kind":"identifier","name":"address","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":184,"col":2}},{"jsDoc":{"doc":"Connect to an IPv6 address.","tags":[{"kind":"param","name":"req","doc":"A TCPConnectWrap instance."},{"kind":"param","name":"address","doc":"The hostname to connect to."},{"kind":"param","name":"port","doc":"The port to connect to."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connect6","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"TCPConnectWrap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TCPConnectWrap"}}},{"kind":"identifier","name":"address","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"port","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":195,"col":2}},{"jsDoc":{"doc":"Listen for new connections.","tags":[{"kind":"param","name":"backlog"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"listen","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"backlog","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":204,"col":2}},{"jsDoc":{"doc":"Populates the provided object with local address entries.","tags":[{"kind":"param","name":"sockname","doc":"An object to add the local address entries to."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getsockname","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"sockname","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}},{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}}]}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":243,"col":2}},{"jsDoc":{"doc":"Populates the provided object with remote address entries.","tags":[{"kind":"param","name":"peername","doc":"An object to add the remote address entries to."},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getpeername","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"peername","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"never","kind":"keyword","keyword":"never"}],"typeName":"Record"}},{"repr":"AddressInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AddressInfo"}}]}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":262,"col":2}},{"jsDoc":{"tags":[{"kind":"param","name":"noDelay"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setNoDelay","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_noDelay","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":281,"col":2}},{"jsDoc":{"tags":[{"kind":"param","name":"enable"},{"kind":"param","name":"initialDelay"},{"kind":"return","doc":"An error status code."}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setKeepAlive","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_enable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"_initialDelay","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":290,"col":2}},{"jsDoc":{"doc":"Windows only.\n\nDeprecated by Node.\nREF: https://github.com/nodejs/node/blob/master/lib/net.js#L1731\n","tags":[{"kind":"param","name":"enable"},{"kind":"return","doc":"An error status code."},{"kind":"deprecated"}]},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"setSimultaneousAccepts","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"_enable","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":304,"col":2}},{"jsDoc":{"doc":"Handle server closure."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"_onClose","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":443,"col":2}}],"extends":"ConnectionWrap","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":26,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}},{"kind":"import","name":"unreachable","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/asserts.ts","imported":"unreachable"}},{"kind":"import","name":"ConnectionWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/connection_wrap.ts","imported":"ConnectionWrap"}},{"kind":"import","name":"AsyncWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"AsyncWrap"}},{"kind":"import","name":"providerType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/async_wrap.ts","imported":"providerType"}},{"kind":"import","name":"LibuvStreamWrap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":30,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","imported":"LibuvStreamWrap"}},{"kind":"import","name":"ownerSymbol","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":31,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/symbols.ts","imported":"ownerSymbol"}},{"kind":"import","name":"codeMap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":32,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","imported":"codeMap"}},{"kind":"import","name":"delay","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":33,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/mod.ts","imported":"delay"}},{"kind":"import","name":"kStreamBaseField","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":34,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/internal_binding/stream_wrap.ts","imported":"kStreamBaseField"}},{"kind":"import","name":"isIP","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/tcp_wrap.ts","line":35,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_net.ts","imported":"isIP"}}],"/node/internal_binding/util.ts":[{"kind":"function","name":"guessHandleType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/util.ts","line":29,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"_fd","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"notImplemented","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/util.ts","line":27,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_utils.ts","imported":"notImplemented"}}],"/node/internal_binding/uv.ts":[{"kind":"variable","name":"errorMap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","line":307,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Map","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"","kind":"tuple","tuple":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}]}],"typeName":"Map"}},"kind":"const"}},{"kind":"variable","name":"codeMap","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","line":317,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"Map","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Map"}},"kind":"const"}},{"kind":"import","name":"unreachable","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","line":28,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/asserts.ts","imported":"unreachable"}},{"kind":"import","name":"osType","location":{"filename":"https://deno.land/std@0.113.0/node/internal_binding/uv.ts","line":29,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"osType"}}],"/node/path/posix.ts":[{"kind":"variable","name":"posix","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/node/path/posix.ts","line":3,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/path/posix.ts","line":22,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"posix","location":{"filename":"https://deno.land/std@0.113.0/node/path/posix.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/path.ts","imported":"posix"}}],"/node/path/win32.ts":[{"kind":"variable","name":"win32","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/node/path/win32.ts","line":3,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/path/win32.ts","line":22,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"win32","location":{"filename":"https://deno.land/std@0.113.0/node/path/win32.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/path.ts","imported":"win32"}}],"/node/stream/promises.ts":[{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/node/stream/promises.ts","line":3,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"promises","location":{"filename":"https://deno.land/std@0.113.0/node/stream/promises.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/stream.ts","imported":"promises"}}],"/node/timers/promises.ts":[{"kind":"variable","name":"setTimeout","location":{"filename":"https://deno.land/std@0.113.0/node/timers/promises.ts","line":4,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"default","location":{"filename":"https://deno.land/std@0.113.0/node/timers/promises.ts","line":8,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"var"}},{"kind":"import","name":"promisify","location":{"filename":"https://deno.land/std@0.113.0/node/timers/promises.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/util.ts","imported":"promisify"}},{"kind":"import","name":"timers","location":{"filename":"https://deno.land/std@0.113.0/node/timers/promises.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/timers.ts","imported":"default"}}],"/node/util/types.ts":[{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/node/util/types.ts","line":5,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"types","location":{"filename":"https://deno.land/std@0.113.0/node/util/types.ts","line":1,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/node/_util/_util_types.ts","imported":null}}],"/path/mod.ts":[{"kind":"variable","name":"SEP","location":{"filename":"https://deno.land/std@0.113.0/path/separator.ts","line":6,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"SEP_PATTERN","location":{"filename":"https://deno.land/std@0.113.0/path/separator.ts","line":7,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"function","name":"common","location":{"filename":"https://deno.land/std@0.113.0/path/common.ts","line":18,"col":0},"declarationKind":"export","jsDoc":{"doc":"Determines the common path from a set of paths, using an optional separator,\nwhich defaults to the OS default separator.\n\n```ts\n      import { common } from \"https://deno.land/std@$STD_VERSION/path/mod.ts\";\n      const p = common([\n        \"./deno/std/path/mod.ts\",\n        \"./deno/std/fs/mod.ts\",\n      ]);\n      console.log(p); // \"./deno/std/\"\n```"},"functionDef":{"params":[{"kind":"identifier","name":"paths","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"assign","left":{"kind":"identifier","name":"sep","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"SEP","location":{"filename":"https://deno.land/std@0.113.0/path/common.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/separator.ts","imported":"SEP"}},{"kind":"interface","name":"GlobOptions","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":13,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"extended","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":17,"col":2},"jsDoc":{"doc":"Extended glob syntax.\nSee https://www.linuxjournal.com/content/bash-extended-globbing. Defaults\nto true."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"globstar","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":21,"col":2},"jsDoc":{"doc":"Globstar syntax.\nSee https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.\nIf false, `**` is treated like `*`. Defaults to true."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"caseInsensitive","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":23,"col":2},"jsDoc":{"doc":"Whether globstar should be case insensitive."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"os","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":25,"col":2},"jsDoc":{"doc":"Operating system. Defaults to the native OS."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"OSType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OSType"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"GlobToRegExpOptions","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":28,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}},"typeParams":[]}},{"kind":"function","name":"globToRegExp","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":103,"col":0},"declarationKind":"export","jsDoc":{"doc":"Convert a glob string to a regular expression.\n\nTries to match bash glob expansion as closely as possible.\n\nBasic glob syntax:\n- `*` - Matches everything without leaving the path segment.\n- `?` - Matches any single character.\n- `{foo,bar}` - Matches `foo` or `bar`.\n- `[abcd]` - Matches `a`, `b`, `c` or `d`.\n- `[a-d]` - Matches `a`, `b`, `c` or `d`.\n- `[!abcd]` - Matches any single character besides `a`, `b`, `c` or `d`.\n- `[[:<class>:]]` - Matches any character belonging to `<class>`.\n    - `[[:alnum:]]` - Matches any digit or letter.\n    - `[[:digit:]abc]` - Matches any digit, `a`, `b` or `c`.\n    - See https://facelessuser.github.io/wcmatch/glob/#posix-character-classes\n      for a complete list of supported character classes.\n- `\\` - Escapes the next character for an `os` other than `\"windows\"`.\n- \\` - Escapes the next character for `os` set to `\"windows\"`.\n- `/` - Path separator.\n- `\\` - Additional path separator only for `os` set to `\"windows\"`.\n\nExtended syntax:\n- Requires `{ extended: true }`.\n- `?(foo|bar)` - Matches 0 or 1 instance of `{foo,bar}`.\n- `@(foo|bar)` - Matches 1 instance of `{foo,bar}`. They behave the same.\n- `*(foo|bar)` - Matches _n_ instances of `{foo,bar}`.\n- `+(foo|bar)` - Matches _n > 0_ instances of `{foo,bar}`.\n- `!(foo|bar)` - Matches anything other than `{foo,bar}`.\n- See https://www.linuxjournal.com/content/bash-extended-globbing.\n\nGlobstar syntax:\n- Requires `{ globstar: true }`.\n- `**` - Matches any number of any path segments.\n    - Must comprise its entire path segment in the provided glob.\n- See https://www.linuxjournal.com/content/globstar-new-bash-globbing-option.\n\nNote the following properties:\n- The generated `RegExp` is anchored at both start and end.\n- Repeating and trailing separators are tolerated. Trailing separators in the\n  provided glob have no meaning and are discarded.\n- Absolute globs will only match absolute paths, etc.\n- Empty globs will match nothing.\n- Any special glob syntax must be contained to one path segment. For example,\n  `?(foo|bar/baz)` is invalid. The separator will take precedence and the\n  first segment ends with an unclosed group.\n- If a path segment ends with unclosed groups or a dangling escape prefix, a\n  parse error has occurred. Every character for that segment is taken\n  literally in this event.\n\nLimitations:\n- A negative group like `!(foo|bar)` will wrongly be converted to a negative\n  look-ahead followed by a wildcard. This means that `!(foo).js` will wrongly\n  fail to match `foobar.js`, even though `foobar` is not `foo`. Effectively,\n  `!(foo|bar)` is treated like `!(@(foo|bar)*)`. This will work correctly if\n  the group occurs not nested at the end of the segment."},"functionDef":{"params":[{"kind":"identifier","name":"glob","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"extended","value":"[UNSUPPORTED]"},{"kind":"keyValue","key":"globstar","value":{"kind":"assign","left":{"kind":"identifier","name":"globstarOption","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}},{"kind":"assign","key":"os","value":"[UNSUPPORTED]"},{"kind":"assign","key":"caseInsensitive","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"GlobToRegExpOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobToRegExpOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"isGlob","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":343,"col":0},"declarationKind":"export","jsDoc":{"doc":"Test whether the given string is a glob"},"functionDef":{"params":[{"kind":"identifier","name":"str","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"normalizeGlob","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":376,"col":0},"declarationKind":"export","jsDoc":{"doc":"Like normalize(), but doesn't collapse \"**\\/..\" when `globstar` is true."},"functionDef":{"params":[{"kind":"identifier","name":"glob","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"globstar","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"joinGlobs","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":395,"col":0},"declarationKind":"export","jsDoc":{"doc":"Like join(), but doesn't collapse \"**\\/..\" when `globstar` is true."},"functionDef":{"params":[{"kind":"identifier","name":"globs","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}}},{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"extended","value":"[UNSUPPORTED]"},{"kind":"assign","key":"globstar","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"GlobOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"GlobOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"osType","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"osType"}},{"kind":"import","name":"SEP","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/separator.ts","imported":"SEP"}},{"kind":"import","name":"SEP_PATTERN","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/separator.ts","imported":"SEP_PATTERN"}},{"kind":"import","name":"_win32","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/win32.ts","imported":null}},{"kind":"import","name":"_posix","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/posix.ts","imported":null}},{"kind":"import","name":"OSType","location":{"filename":"https://deno.land/std@0.113.0/path/glob.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"OSType"}},{"kind":"interface","name":"ParsedPath","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":7,"col":0},"declarationKind":"export","jsDoc":{"doc":"A parsed path object generated by path.parse() or consumed by path.format()."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"root","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":11,"col":2},"jsDoc":{"doc":"The root of the path such as '/' or 'c:\\'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"dir","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":15,"col":2},"jsDoc":{"doc":"The full directory path such as '/home/user/dir' or 'c:\\path\\dir'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"base","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":19,"col":2},"jsDoc":{"doc":"The file name including extension (if any) such as 'index.html'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"ext","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":23,"col":2},"jsDoc":{"doc":"The file extension (if any) such as '.html'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":27,"col":2},"jsDoc":{"doc":"The file name without extension (if any) such as 'index'"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"FormatInputPathObject","location":{"filename":"https://deno.land/std@0.113.0/path/_interface.ts","line":30,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"Partial","kind":"typeRef","typeRef":{"typeParams":[{"repr":"ParsedPath","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ParsedPath"}}],"typeName":"Partial"}},"typeParams":[]}},{"kind":"variable","name":"win32","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":11,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"posix","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":12,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"variable","name":"[UNSUPPORTED]","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":13,"col":0},"declarationKind":"export","variableDef":{"tsType":null,"kind":"const"}},{"kind":"import","name":"isWindows","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/os.ts","imported":"isWindows"}},{"kind":"import","name":"_win32","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/win32.ts","imported":null}},{"kind":"import","name":"_posix","location":{"filename":"https://deno.land/std@0.113.0/path/mod.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/posix.ts","imported":null}}],"/permissions/mod.ts":[{"kind":"function","name":"grant","location":{"filename":"https://deno.land/std@0.113.0/permissions/mod.ts","line":44,"col":0},"declarationKind":"export","jsDoc":{"doc":"Attempts to grant a set of permissions, resolving with the descriptors of\nthe permissions that are granted.\n\n```ts\n     import { grant } from \"./mod.ts\";\n     const perms = await grant({ name: \"net\" }, { name: \"read\" });\n     if (perms && perms.length === 2) {\n       // do something cool that connects to the net and reads files\n     } else {\n       // notify user of missing permissions\n     }\n```\n\nIf one of the permissions requires a prompt, the function will attempt to\nprompt for it.  The function resolves with all of the granted permissions."},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"descriptors","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"grant","location":{"filename":"https://deno.land/std@0.113.0/permissions/mod.ts","line":62,"col":0},"declarationKind":"export","jsDoc":{"doc":"Attempts to grant a set of permissions, resolving with the descriptors of\nthe permissions that are granted.\n\n```ts\n     import { grant } from \"./mod.ts\";\n     const perms = await grant([{ name: \"net\" }, { name: \"read\" }]);\n     if (perms && perms.length === 2) {\n       // do something cool that connects to the net and reads files\n     } else {\n       // notify user of missing permissions\n     }\n```\n\nIf one of the permissions requires a prompt, the function will attempt to\nprompt for it.  The function resolves with all of the granted permissions."},"functionDef":{"params":[{"kind":"identifier","name":"descriptors","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"grant","location":{"filename":"https://deno.land/std@0.113.0/permissions/mod.ts","line":65,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"descriptor","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}},{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"descriptors","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"grantOrThrow","location":{"filename":"https://deno.land/std@0.113.0/permissions/mod.ts","line":96,"col":0},"declarationKind":"export","jsDoc":{"doc":"Attempts to grant a set of permissions or rejects.\n\n```ts\n     import { grantOrThrow } from \"./mod.ts\";\n     await grantOrThrow({ name: \"env\" }, { name: \"net\" });\n```\n\nIf the permission can be prompted for, the function will attempt to prompt.\nIf any of the permissions are denied, the function will reject for the first\npermission that is denied.  If all permissions are granted, the function\nwill resolve."},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"descriptors","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"grantOrThrow","location":{"filename":"https://deno.land/std@0.113.0/permissions/mod.ts","line":110,"col":0},"declarationKind":"export","jsDoc":{"doc":"Attempts to grant a set of permissions or rejects.\n\n```ts\n     import { grantOrThrow } from \"./mod.ts\";\n     await grantOrThrow([{ name: \"env\" }, { name: \"net\" }]);\n```\n\nIf the permission can be prompted for, the function will attempt to prompt.\nIf any of the permissions are denied, the function will reject mentioning the\nthe denied permissions.  If all permissions are granted, the function will\nresolve."},"functionDef":{"params":[{"kind":"identifier","name":"descriptors","optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"grantOrThrow","location":{"filename":"https://deno.land/std@0.113.0/permissions/mod.ts","line":113,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"descriptor","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}},{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}]}},{"kind":"rest","arg":{"kind":"identifier","name":"descriptors","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"Deno.PermissionDescriptor","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionDescriptor"}}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}}],"/signal/mod.ts":[{"kind":"typeAlias","name":"Disposable","location":{"filename":"https://deno.land/std@0.113.0/signal/mod.ts","line":4,"col":0},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"dispose","params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"function","name":"signal","location":{"filename":"https://deno.land/std@0.113.0/signal/mod.ts","line":28,"col":0},"declarationKind":"export","jsDoc":{"doc":"Generates an AsyncIterable which can be awaited on for one or more signals.\n`dispose()` can be called when you are finished waiting on the events.\n\nExample:\n\n```ts\n      import { signal } from \"./mod.ts\";\n\n      const sig = signal(\"SIGUSR1\", \"SIGINT\");\n      setTimeout(() => {}, 5000); // Prevents exiting immediately\n\n      for await (const _ of sig) {\n        console.log(\"interrupt or usr1 signal received\");\n      }\n\n      // At some other point in your code when finished listening:\n      sig.dispose();\n```\n","tags":[{"kind":"param","name":"signos","doc":"- one or more `Deno.Signal`s to await on"}]},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"signos","optional":false,"tsType":null},"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"Deno.Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Signal"}},{"repr":"","kind":"rest","rest":{"repr":"","kind":"array","array":{"repr":"Deno.Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Signal"}}}}]}}],"returnType":{"repr":"","kind":"intersection","intersection":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"AsyncIterable"}},{"repr":"Disposable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Disposable"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"onSignal","location":{"filename":"https://deno.land/std@0.113.0/signal/mod.ts","line":70,"col":0},"declarationKind":"export","jsDoc":{"doc":"Registers a callback function to be called on triggering of a signal event.\n\n```ts\n      import { onSignal } from \"./mod.ts\";\n\n      const handle = onSignal(\"SIGINT\", () => {\n        console.log('Received SIGINT');\n        handle.dispose();  // de-register from receiving further events\n      });\n```\n","tags":[{"kind":"param","name":"signo","doc":"One of Deno.Signal (e.g. \"SIGINT\")"},{"kind":"param","name":"callback","doc":"Callback function triggered upon signal event"}]},"functionDef":{"params":[{"kind":"identifier","name":"signo","optional":false,"tsType":{"repr":"Deno.Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Signal"}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}}}],"returnType":{"repr":"Disposable","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Disposable"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"MuxAsyncIterator","location":{"filename":"https://deno.land/std@0.113.0/signal/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/mux_async_iterator.ts","imported":"MuxAsyncIterator"}}],"/streams/mod.ts":[{"kind":"class","name":"LineStream","location":{"filename":"https://deno.land/std@0.113.0/streams/delimiter.ts","line":17,"col":0},"declarationKind":"export","jsDoc":{"doc":"Transform a stream into a stream where each chunk is divided by a newline,\nbe it `\\n` or `\\r\\n`.\n\n```ts\nimport { LineStream } from \"./delimiter.ts\";\nconst res = await fetch(\"https://example.com\");\nconst lines = res.body!.pipeThrough(new LineStream());\n```"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[],"location":{"filename":"https://deno.land/std@0.113.0/streams/delimiter.ts","line":21,"col":2}}],"properties":[],"indexSignatures":[],"methods":[],"extends":"TransformStream","implements":[],"typeParams":[],"superTypeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"class","name":"DelimiterStream","location":{"filename":"https://deno.land/std@0.113.0/streams/delimiter.ts","line":85,"col":0},"declarationKind":"export","jsDoc":{"doc":"Transform a stream into a stream where each chunk is divided by a given delimiter.\n\n```ts\nimport { DelimiterStream } from \"./delimiter.ts\";\nconst res = await fetch(\"https://example.com\");\nconst parts = res.body!\n  .pipeThrough(new DelimiterStream(new TextEncoder().encode(\"foo\")))\n  .pipeThrough(new TextDecoderStream());\n```"},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"delimiter","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"location":{"filename":"https://deno.land/std@0.113.0/streams/delimiter.ts","line":93,"col":2}}],"properties":[],"indexSignatures":[],"methods":[],"extends":"TransformStream","implements":[],"typeParams":[],"superTypeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}},{"kind":"import","name":"BytesList","location":{"filename":"https://deno.land/std@0.113.0/streams/delimiter.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/bytes_list.ts","imported":"BytesList"}},{"kind":"function","name":"mergeReadableStreams","location":{"filename":"https://deno.land/std@0.113.0/streams/merge.ts","line":10,"col":0},"declarationKind":"export","jsDoc":{"doc":"Merge multiple streams into a single one, not taking order into account.\nIf a stream ends before other ones, the other will continue adding data,\nand the finished one will not add any more data."},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"streams","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReadableStream"}}}}],"returnType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReadableStream"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"zipReadableStreams","location":{"filename":"https://deno.land/std@0.113.0/streams/merge.ts","line":41,"col":0},"declarationKind":"export","jsDoc":{"doc":"Merge multiple streams into a single one, taking order into account, and each stream\nwill wait for a chunk to enqueue before the next stream can append another chunk.\nIf a stream ends before other ones, the other will continue adding data in order,\nand the finished one will not add any more data."},"functionDef":{"params":[{"kind":"rest","arg":{"kind":"identifier","name":"streams","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReadableStream"}}}}],"returnType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReadableStream"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"import","name":"deferred","location":{"filename":"https://deno.land/std@0.113.0/streams/merge.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"deferred"}},{"kind":"function","name":"readerFromIterable","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":35,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a `Deno.Reader` from an iterable of `Uint8Array`s.\n\n```ts\n     import { readerFromIterable } from \"./conversion.ts\";\n     import { serve } from \"../http/server_legacy.ts\";\n\n     for await (const request of serve({ port: 8000 })) {\n       // Server-sent events: Send runtime metrics to the client every second.\n       request.respond({\n         headers: new Headers({ \"Content-Type\": \"text/event-stream\" }),\n         body: readerFromIterable((async function* () {\n           while (true) {\n             await new Promise((r) => setTimeout(r, 1000));\n             const message = `data: ${JSON.stringify(Deno.metrics())}\\n\\n`;\n             yield new TextEncoder().encode(message);\n           }\n         })()),\n       });\n     }\n```"},"functionDef":{"params":[{"kind":"identifier","name":"iterable","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Iterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"Iterable"}},{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"AsyncIterable"}}]}}],"returnType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writerFromStreamWriter","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":69,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a `Writer` from a `WritableStreamDefaultWriter`."},"functionDef":{"params":[{"kind":"identifier","name":"streamWriter","optional":false,"tsType":{"repr":"WritableStreamDefaultWriter","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"WritableStreamDefaultWriter"}}}],"returnType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readerFromStreamReader","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":82,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a `Reader` from a `ReadableStreamDefaultReader`."},"functionDef":{"params":[{"kind":"identifier","name":"streamReader","optional":false,"tsType":{"repr":"ReadableStreamDefaultReader","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"ReadableStreamDefaultReader"}}}],"returnType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"WritableStreamFromWriterOptions","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":103,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"autoClose","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":109,"col":2},"jsDoc":{"doc":"If the `writer` is also a `Deno.Closer`, automatically close the `writer`\nwhen the stream is closed, aborted, or a write error occurs.\n\nDefaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"writableStreamFromWriter","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":113,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a `WritableStream` from a `Writer`."},"functionDef":{"params":[{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"WritableStreamFromWriterOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WritableStreamFromWriterOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"WritableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"WritableStream"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readableStreamFromIterable","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":179,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a `ReadableStream` from any kind of iterable.\n\n```ts\n     import { readableStreamFromIterable } from \"./conversion.ts\";\n\n     const r1 = readableStreamFromIterable([\"foo, bar, baz\"]);\n     const r2 = readableStreamFromIterable(async function* () {\n       await new Promise(((r) => setTimeout(r, 1000)));\n       yield \"foo\";\n       await new Promise(((r) => setTimeout(r, 1000)));\n       yield \"bar\";\n       await new Promise(((r) => setTimeout(r, 1000)));\n       yield \"baz\";\n     }());\n```\n\nIf the produced iterator (`iterable[Symbol.asyncIterator]()` or\n`iterable[Symbol.iterator]()`) is a generator, or more specifically is found\nto have a `.throw()` method on it, that will be called upon\n`readableStream.cancel()`. This is the case for the second input type above:\n\n```ts\nimport { readableStreamFromIterable } from \"./conversion.ts\";\n\nconst r3 = readableStreamFromIterable(async function* () {\n  try {\n    yield \"foo\";\n  } catch (error) {\n    console.log(error); // Error: Cancelled by consumer.\n  }\n}());\nconst reader = r3.getReader();\nconsole.log(await reader.read()); // { value: \"foo\", done: false }\nawait reader.cancel(new Error(\"Cancelled by consumer.\"));\n```"},"functionDef":{"params":[{"kind":"identifier","name":"iterable","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Iterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Iterable"}},{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"AsyncIterable"}}]}}],"returnType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ReadableStream"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"interface","name":"ReadableStreamFromReaderOptions","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":204,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"autoClose","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":209,"col":2},"jsDoc":{"doc":"If the `reader` is also a `Deno.Closer`, automatically close the `reader`\nwhen `EOF` is encountered, or a read error occurs.\n\nDefaults to `true`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"chunkSize","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":213,"col":2},"jsDoc":{"doc":"The size of chunks to allocate to read, the default is ~16KiB, which is\nthe maximum size that Deno operations can currently support."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"strategy","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":216,"col":2},"jsDoc":{"doc":"The queuing strategy to create the `ReadableStream` with."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"highWaterMark","params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]},"typeParams":[]},{"name":"size","params":[],"computed":false,"optional":true,"tsType":{"repr":"undefined","kind":"keyword","keyword":"undefined"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"readableStreamFromReader","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":235,"col":0},"declarationKind":"export","jsDoc":{"doc":"Create a `ReadableStream<Uint8Array>` from from a `Deno.Reader`.\n\nWhen the pull algorithm is called on the stream, a chunk from the reader\nwill be read.  When `null` is returned from the reader, the stream will be\nclosed along with the reader (if it is also a `Deno.Closer`).\n\nAn example converting a `Deno.File` into a readable stream:\n\n```ts\nimport { readableStreamFromReader } from \"./mod.ts\";\n\nconst file = await Deno.open(\"./file.txt\", { read: true });\nconst fileStream = readableStreamFromReader(file);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"reader","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"intersection","intersection":[{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}},{"repr":"Deno.Closer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Closer"}}]}}]}},{"kind":"assign","left":{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"ReadableStreamFromReaderOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ReadableStreamFromReaderOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"ReadableStream"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readAll","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":295,"col":0},"declarationKind":"export","jsDoc":{"doc":"Read Reader `r` until EOF (`null`) and resolve to the content as\nUint8Array`.\n\n```ts\nimport { Buffer } from \"../io/buffer.ts\";\nimport { readAll } from \"./conversion.ts\";\n\n// Example from stdin\nconst stdinContent = await readAll(Deno.stdin);\n\n// Example from file\nconst file = await Deno.open(\"my_file.txt\", {read: true});\nconst myFileContent = await readAll(file);\nDeno.close(file.rid);\n\n// Example from buffer\nconst myData = new Uint8Array(100);\n// ... fill myData array with data\nconst reader = new Buffer(myData.buffer);\nconst bufferContent = await readAll(reader);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readAllSync","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":323,"col":0},"declarationKind":"export","jsDoc":{"doc":"Synchronously reads Reader `r` until EOF (`null`) and returns the content\nas `Uint8Array`.\n\n```ts\nimport { Buffer } from \"../io/buffer.ts\";\nimport { readAllSync } from \"./conversion.ts\";\n\n// Example from stdin\nconst stdinContent = readAllSync(Deno.stdin);\n\n// Example from file\nconst file = Deno.openSync(\"my_file.txt\", {read: true});\nconst myFileContent = readAllSync(file);\nDeno.close(file.rid);\n\n// Example from buffer\nconst myData = new Uint8Array(100);\n// ... fill myData array with data\nconst reader = new Buffer(myData.buffer);\nconst bufferContent = readAllSync(reader);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.ReaderSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.ReaderSync"}}}],"returnType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeAll","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":352,"col":0},"declarationKind":"export","jsDoc":{"doc":"Write all the content of the array buffer (`arr`) to the writer (`w`).\n\n```ts\nimport { Buffer } from \"../io/buffer.ts\";\nimport { writeAll } from \"./conversion.ts\";\n\n// Example writing to stdout\nlet contentBytes = new TextEncoder().encode(\"Hello World\");\nawait writeAll(Deno.stdout, contentBytes);\n\n// Example writing to file\ncontentBytes = new TextEncoder().encode(\"Hello World\");\nconst file = await Deno.open('test.file', {write: true});\nawait writeAll(file, contentBytes);\nDeno.close(file.rid);\n\n// Example writing to buffer\ncontentBytes = new TextEncoder().encode(\"Hello World\");\nconst writer = new Buffer();\nawait writeAll(writer, contentBytes);\nconsole.log(writer.bytes().length);  // 11\n```"},"functionDef":{"params":[{"kind":"identifier","name":"w","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}},{"kind":"identifier","name":"arr","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeAllSync","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":383,"col":0},"declarationKind":"export","jsDoc":{"doc":"Synchronously write all the content of the array buffer (`arr`) to the\nwriter (`w`).\n\n```ts\nimport { Buffer } from \"../io/buffer.ts\";\nimport { writeAllSync } from \"./conversion.ts\";\n\n// Example writing to stdout\nlet contentBytes = new TextEncoder().encode(\"Hello World\");\nwriteAllSync(Deno.stdout, contentBytes);\n\n// Example writing to file\ncontentBytes = new TextEncoder().encode(\"Hello World\");\nconst file = Deno.openSync('test.file', {write: true});\nwriteAllSync(file, contentBytes);\nDeno.close(file.rid);\n\n// Example writing to buffer\ncontentBytes = new TextEncoder().encode(\"Hello World\");\nconst writer = new Buffer();\nwriteAllSync(writer, contentBytes);\nconsole.log(writer.bytes().length);  // 11\n```"},"functionDef":{"params":[{"kind":"identifier","name":"w","optional":false,"tsType":{"repr":"Deno.WriterSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.WriterSync"}}},{"kind":"identifier","name":"arr","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"iterateReader","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":423,"col":0},"declarationKind":"export","jsDoc":{"doc":"Turns a Reader, `r`, into an async iterator.\n\n```ts\nimport { iterateReader } from \"./conversion.ts\";\n\nlet f = await Deno.open(\"/etc/passwd\");\nfor await (const chunk of iterateReader(f)) {\n  console.log(chunk);\n}\nf.close();\n```\n\nSecond argument can be used to tune size of a buffer.\nDefault size of the buffer is 32kB.\n\n```ts\nimport { iterateReader } from \"./conversion.ts\";\n\nlet f = await Deno.open(\"/etc/passwd\");\nconst it = iterateReader(f, {\n  bufSize: 1024 * 1024\n});\nfor await (const chunk of it) {\n  console.log(chunk);\n}\nf.close();\n```\n\nIterator uses an internal buffer of fixed size for efficiency; it returns\na view on that buffer on each iteration. It is therefore caller's\nresponsibility to copy contents of the buffer if needed; otherwise the\nnext iteration will overwrite contents of previously returned chunk."},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bufSize","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"AsyncIterableIterator"}},"isAsync":true,"isGenerator":true,"typeParams":[]}},{"kind":"function","name":"iterateReaderSync","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":474,"col":0},"declarationKind":"export","jsDoc":{"doc":"Turns a ReaderSync, `r`, into an iterator.\n\n```ts\nimport { iterateReaderSync } from \"./conversion.ts\";\n\nlet f = Deno.openSync(\"/etc/passwd\");\nfor (const chunk of iterateReaderSync(f)) {\n  console.log(chunk);\n}\nf.close();\n```\n\nSecond argument can be used to tune size of a buffer.\nDefault size of the buffer is 32kB.\n\n```ts\nimport { iterateReaderSync } from \"./conversion.ts\";\n\nlet f = await Deno.open(\"/etc/passwd\");\nconst iter = iterateReaderSync(f, {\n  bufSize: 1024 * 1024\n});\nfor (const chunk of iter) {\n  console.log(chunk);\n}\nf.close();\n```\n\nIterator uses an internal buffer of fixed size for efficiency; it returns\na view on that buffer on each iteration. It is therefore caller's\nresponsibility to copy contents of the buffer if needed; otherwise the\nnext iteration will overwrite contents of previously returned chunk."},"functionDef":{"params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"Deno.ReaderSync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.ReaderSync"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bufSize","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"IterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"IterableIterator"}},"isAsync":false,"isGenerator":true,"typeParams":[]}},{"kind":"function","name":"copy","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":509,"col":0},"declarationKind":"export","jsDoc":{"doc":"Copies from `src` to `dst` until either EOF (`null`) is read from `src` or\nan error occurs. It resolves to the number of bytes copied or rejects with\nthe first error encountered while copying.\n\n```ts\nimport { copy } from \"./conversion.ts\";\n\nconst source = await Deno.open(\"my_file.txt\");\nconst bytesCopied1 = await copy(source, Deno.stdout);\nconst destination = await Deno.create(\"my_file_2.txt\");\nconst bytesCopied2 = await copy(source, destination);\n```\n","tags":[{"kind":"param","name":"src","doc":"The source to copy from"},{"kind":"param","name":"dst","doc":"The destination to copy to"},{"kind":"param","name":"options","doc":"Can be used to tune size of the buffer. Default size is 32kB"}]},"functionDef":{"params":[{"kind":"identifier","name":"src","optional":false,"tsType":{"repr":"Deno.Reader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Reader"}}},{"kind":"identifier","name":"dst","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"bufSize","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"Buffer","location":{"filename":"https://deno.land/std@0.113.0/streams/conversion.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"Buffer"}}],"/testing/asserts.ts":[{"kind":"class","name":"AssertionError","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":19,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"message","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":21,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"name","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":20,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"_format","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":31,"col":0},"declarationKind":"export","jsDoc":{"doc":"Converts the input into a string. Objects, Sets and Maps are sorted so as to\nmake tests less flaky","tags":[{"kind":"param","name":"v","doc":"Value to be formatted"}]},"functionDef":{"params":[{"kind":"identifier","name":"v","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"equal","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":117,"col":0},"declarationKind":"export","jsDoc":{"doc":"Deep equality comparison used in assertions","tags":[{"kind":"param","name":"c","doc":"actual value"},{"kind":"param","name":"d","doc":"expected value"}]},"functionDef":{"params":[{"kind":"identifier","name":"c","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"d","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":217,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion, error will be thrown if `expr` does not have truthy value."},"functionDef":{"params":[{"kind":"identifier","name":"expr","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"assign","left":{"kind":"identifier","name":"msg","optional":false,"tsType":null},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"asserts expr","kind":"typePredicate","typePredicate":{"asserts":true,"param":{"type":"identifier","name":"expr"},"type":null}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":235,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` and `expected` are equal, deeply. If not\ndeeply equal, then throw.\n\nType parameter can be specified to ensure values under comparison have the same type.\nFor example:\n```ts\nimport { assertEquals } from \"./asserts.ts\";\n\nassertEquals<number>(1, 2)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":240,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"assertEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":241,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertNotEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":281,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` and `expected` are not equal, deeply.\nIf not then throw.\n\nType parameter can be specified to ensure values under comparison have the same type.\nFor example:\n```ts\nimport { assertNotEquals } from \"./asserts.ts\";\n\nassertNotEquals<number>(1, 2)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertNotEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":286,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"assertNotEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":287,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertStrictEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":323,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` and `expected` are strictly equal. If\nnot then throw.\n\n```ts\nimport { assertStrictEquals } from \"./asserts.ts\";\n\nassertStrictEquals(1, 2)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertStrictEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":328,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"assertStrictEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":333,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertNotStrictEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":387,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` and `expected` are not strictly equal.\nIf the values are strictly equal then throw.\n\n```ts\nimport { assertNotStrictEquals } from \"./asserts.ts\";\n\nassertNotStrictEquals(1, 1)\n```"},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertNotStrictEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":392,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"assertNotStrictEquals","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":397,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertExists","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":415,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that actual is not null or undefined.\nIf not then throw."},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"asserts actual is NonNullable<T>","kind":"typePredicate","typePredicate":{"asserts":true,"param":{"type":"identifier","name":"actual"},"type":{"repr":"NonNullable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"NonNullable"}}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"assertStringIncludes","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":431,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that actual includes expected. If not\nthen throw."},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertArrayIncludes","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":457,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` includes the `expected` values.\nIf not then an error will be thrown.\n\nType parameter can be specified to ensure values under comparison have the same type.\nFor example:\n\n```ts\nimport { assertArrayIncludes } from \"./asserts.ts\";\n\nassertArrayIncludes<number>([1, 2], [2])\n```"},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"ArrayLike"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"ArrayLike"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertArrayIncludes","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":462,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ArrayLike"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"ArrayLike"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T"}]}},{"kind":"function","name":"assertArrayIncludes","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":467,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"ArrayLike"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"ArrayLike","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"ArrayLike"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertMatch","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":500,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` match RegExp `expected`. If not\nthen throw."},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertNotMatch","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":517,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` not match RegExp `expected`. If match\nthen throw."},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertObjectMatch","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":534,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `actual` object is a subset of `expected` object, deeply.\nIf not, then throw."},"functionDef":{"params":[{"kind":"identifier","name":"actual","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"any","kind":"keyword","keyword":"any"}],"typeName":"Record"}}},{"kind":"identifier","name":"expected","optional":false,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"PropertyKey","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"PropertyKey"}},{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Record"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"fail","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":596,"col":0},"declarationKind":"export","jsDoc":{"doc":"Forcefully throws a failed assertion"},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"never","kind":"keyword","keyword":"never"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertIsError","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":606,"col":0},"declarationKind":"export","jsDoc":{"doc":"Make an assertion that `error` is an `Error`.\nIf not then an error will be thrown.\nAn error class and a string that should be included in the\nerror message can also be asserted."},"functionDef":{"params":[{"kind":"identifier","name":"error","optional":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"}},{"kind":"identifier","name":"ErrorClass","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"kind":"identifier","name":"msgIncludes","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"asserts error is E","kind":"typePredicate","typePredicate":{"asserts":true,"param":{"type":"identifier","name":"error"},"type":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}}}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"E","constraint":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"default":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}]}},{"kind":"function","name":"assertThrows","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":640,"col":0},"declarationKind":"export","jsDoc":{"doc":"Executes a function, expecting it to throw.  If it does not, then it\nthrows. An error class and a string that should be included in the\nerror message can also be asserted. Or you can pass a\ncallback which will be passed the error, usually to apply some custom\nassertions on it."},"functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"ErrorClass","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"kind":"identifier","name":"msgIncludes","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"E","constraint":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"default":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}]}},{"kind":"function","name":"assertThrows","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":647,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"errorCallback","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertThrows","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":652,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"errorClassOrCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}}]}},{"kind":"identifier","name":"msgIncludesOrMsg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"E","constraint":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"default":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}]}},{"kind":"function","name":"assertRejects","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":709,"col":0},"declarationKind":"export","jsDoc":{"doc":"Executes a function which returns a promise, expecting it to throw or reject.\nIf it does not, then it throws. An error class and a string that should be\nincluded in the error message can also be asserted. Or you can pass a\ncallback which will be passed the error, usually to apply some custom\nassertions on it."},"functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"ErrorClass","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"kind":"identifier","name":"msgIncludes","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"E","constraint":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"default":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}]}},{"kind":"function","name":"assertRejects","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":716,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"errorCallback","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"assertRejects","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":721,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"errorClassOrCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}}]}},{"kind":"identifier","name":"msgIncludesOrMsg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[{"name":"E","constraint":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"default":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}]}},{"kind":"function","name":"assertThrowsAsync","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":721,"col":0},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"unknown","kind":"keyword","keyword":"unknown"}],"typeName":"Promise"}},"params":[],"typeParams":[]}}},{"kind":"identifier","name":"errorClassOrCallback","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":true,"tsType":{"repr":"E","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"E"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"","kind":"array","array":{"repr":"any","kind":"keyword","keyword":"any"}}}],"typeParams":[]}}},{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"unknown","kind":"keyword","keyword":"unknown"},"params":[{"kind":"identifier","name":"e","optional":false,"tsType":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}],"typeParams":[]}}}]}},{"kind":"identifier","name":"msgIncludesOrMsg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[{"name":"E","constraint":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}},"default":{"repr":"Error","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Error"}}}]}},{"kind":"function","name":"unimplemented","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":781,"col":0},"declarationKind":"export","jsDoc":{"doc":"Use this to stub out methods that will throw when invoked."},"functionDef":{"params":[{"kind":"identifier","name":"msg","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"never","kind":"keyword","keyword":"never"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"unreachable","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":786,"col":0},"declarationKind":"export","jsDoc":{"doc":"Use this to assert unreachable code."},"functionDef":{"params":[],"returnType":{"repr":"never","kind":"keyword","keyword":"never"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"bgGreen","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"bgGreen"}},{"kind":"import","name":"bgRed","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"bgRed"}},{"kind":"import","name":"bold","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"bold"}},{"kind":"import","name":"gray","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"gray"}},{"kind":"import","name":"green","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"green"}},{"kind":"import","name":"red","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"red"}},{"kind":"import","name":"stripColor","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"stripColor"}},{"kind":"import","name":"white","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/fmt/colors.ts","imported":"white"}},{"kind":"import","name":"diff","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/_diff.ts","imported":"diff"}},{"kind":"import","name":"DiffResult","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/_diff.ts","imported":"DiffResult"}},{"kind":"import","name":"diffstr","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/_diff.ts","imported":"diffstr"}},{"kind":"import","name":"DiffType","location":{"filename":"https://deno.land/std@0.113.0/testing/asserts.ts","line":15,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/_diff.ts","imported":"DiffType"}}],"/testing/bench.ts":[{"kind":"interface","name":"BenchmarkTimer","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":12,"col":0},"declarationKind":"export","jsDoc":{"doc":"Provides methods for starting and stopping a benchmark clock."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"start","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":13,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}},"typeParams":[]},{"name":"stop","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":14,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"void","kind":"keyword","keyword":"void"},"params":[],"typeParams":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkFunction","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":18,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines a benchmark through a named function."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":20,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[{"location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":19,"col":2},"params":[{"kind":"identifier","name":"b","optional":false,"tsType":{"repr":"BenchmarkTimer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkTimer"}}}],"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"typeParams":[]}],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkDefinition","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":24,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines a benchmark definition with configurable runs."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"func","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":25,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"BenchmarkFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkFunction"}},"typeParams":[]},{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":26,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"runs","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":28,"col":2},"jsDoc":{"doc":"Defines how many times the provided `func` should be benchmarked in succession"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkRunOptions","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":32,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines runBenchmark's run constraints by matching benchmark names."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"only","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":34,"col":2},"jsDoc":{"doc":"Only benchmarks which name match this regexp will be run"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"typeParams":[]},{"name":"skip","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":36,"col":2},"jsDoc":{"doc":"Benchmarks which name match this regexp will be skipped"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"typeParams":[]},{"name":"silent","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":38,"col":2},"jsDoc":{"doc":"Setting it to true prevents default benchmarking progress logs to the commandline"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkClearOptions","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":42,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines clearBenchmark's constraints by matching benchmark names."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"only","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":44,"col":2},"jsDoc":{"doc":"Only benchmarks which name match this regexp will be removed"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"typeParams":[]},{"name":"skip","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":46,"col":2},"jsDoc":{"doc":"Benchmarks which name match this regexp will be kept"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"RegExp","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RegExp"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkResult","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":50,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines the result of a single benchmark"},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":52,"col":2},"jsDoc":{"doc":"The name of the benchmark"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"totalMs","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":54,"col":2},"jsDoc":{"doc":"The total time it took to run a given benchmark"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"runsCount","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":56,"col":2},"jsDoc":{"doc":"Times the benchmark was run in succession."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"measuredRunsAvgMs","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":58,"col":2},"jsDoc":{"doc":"The average time of running the benchmark in milliseconds."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"measuredRunsMs","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":60,"col":2},"jsDoc":{"doc":"The individual measurements in milliseconds it took to run the benchmark."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkRunResult","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":64,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines the result of a `runBenchmarks` call"},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"filtered","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":66,"col":2},"jsDoc":{"doc":"How many benchmark were ignored by the provided `only` and `skip`"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"results","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":68,"col":2},"jsDoc":{"doc":"The individual results for each benchmark that was run"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"BenchmarkResult","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkResult"}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BenchmarkRunProgress","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":72,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines the current progress during the run of `runBenchmarks`"},"interfaceDef":{"extends":[{"repr":"BenchmarkRunResult","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkRunResult"}}],"methods":[],"properties":[{"name":"queued","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":74,"col":2},"jsDoc":{"doc":"List of the queued benchmarks to run with their name and their run count"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Array","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"name","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"runsCount","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}],"typeName":"Array"}},"typeParams":[]},{"name":"running","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":76,"col":2},"jsDoc":{"doc":"The currently running benchmark with its name, run count and the already finished measurements in milliseconds"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"name","params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"runsCount","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"measuredRunsMs","params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]},{"name":"state","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":78,"col":2},"jsDoc":{"doc":"Indicates in which state benchmarking currently is"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"ProgressState","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ProgressState"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"enum","name":"ProgressState","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":82,"col":0},"declarationKind":"export","jsDoc":{"doc":"Defines the states `BenchmarkRunProgress` can be in"},"enumDef":{"members":[{"name":"BenchmarkingStart","init":{"repr":"benchmarking_start","kind":"literal","literal":{"kind":"string","string":"benchmarking_start"}}},{"name":"BenchStart","init":{"repr":"bench_start","kind":"literal","literal":{"kind":"string","string":"bench_start"}}},{"name":"BenchPartialResult","init":{"repr":"bench_partial_result","kind":"literal","literal":{"kind":"string","string":"bench_partial_result"}}},{"name":"BenchResult","init":{"repr":"bench_result","kind":"literal","literal":{"kind":"string","string":"bench_result"}}},{"name":"BenchmarkingEnd","init":{"repr":"benchmarking_end","kind":"literal","literal":{"kind":"string","string":"benchmarking_end"}}}]}},{"kind":"class","name":"BenchmarkRunError","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":90,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"msg","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"benchmarkName","optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":92,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":true,"isAbstract":false,"isStatic":false,"name":"benchmarkName","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":91,"col":2}}],"indexSignatures":[],"methods":[],"extends":"Error","implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":151,"col":0},"declarationKind":"export","jsDoc":{"doc":"Registers a benchmark as a candidate for the runBenchmarks executor."},"functionDef":{"params":[{"kind":"identifier","name":"benchmark","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"BenchmarkDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkDefinition"}},{"repr":"BenchmarkFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkFunction"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"clearBenchmarks","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":170,"col":0},"declarationKind":"export","jsDoc":{"doc":"Clears benchmark candidates which name matches `only` and doesn't match `skip`.\nRemoves all candidates if options were not provided"},"functionDef":{"params":[{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"only","value":"[UNSUPPORTED]"},{"kind":"assign","key":"skip","value":"[UNSUPPORTED]"}],"optional":false,"tsType":{"repr":"BenchmarkClearOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkClearOptions"}}},"right":"[UNSUPPORTED]","tsType":null}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"runBenchmarks","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":187,"col":0},"declarationKind":"export","jsDoc":{"doc":"Runs all registered and non-skipped benchmarks serially.\n","tags":[{"kind":"unsupported","value":"@param [progressCb] provides the possibility to get updates of the current progress during the run of the benchmarking"},{"kind":"return","doc":"results of the benchmarking"}]},"functionDef":{"params":[{"kind":"assign","left":{"kind":"object","props":[{"kind":"assign","key":"only","value":"[UNSUPPORTED]"},{"kind":"assign","key":"skip","value":"[UNSUPPORTED]"},{"kind":"assign","key":"silent","value":null}],"optional":false,"tsType":{"repr":"BenchmarkRunOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkRunOptions"}}},"right":"[UNSUPPORTED]","tsType":null},{"kind":"identifier","name":"progressCb","optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[{"kind":"identifier","name":"progress","optional":false,"tsType":{"repr":"BenchmarkRunProgress","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkRunProgress"}}}],"typeParams":[]}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"BenchmarkRunResult","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchmarkRunResult"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"deepAssign","location":{"filename":"https://deno.land/std@0.113.0/testing/bench.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/deep_assign.ts","imported":"deepAssign"}}],"/testing/bench_example.ts":[{"kind":"import","name":"bench","location":{"filename":"https://deno.land/std@0.113.0/testing/bench_example.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/bench.ts","imported":"bench"}},{"kind":"import","name":"BenchmarkTimer","location":{"filename":"https://deno.land/std@0.113.0/testing/bench_example.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/bench.ts","imported":"BenchmarkTimer"}},{"kind":"import","name":"runBenchmarks","location":{"filename":"https://deno.land/std@0.113.0/testing/bench_example.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/testing/bench.ts","imported":"runBenchmarks"}}],"/testing/chai_example.ts":[{"kind":"import","name":"chai","location":{"filename":"https://deno.land/std@0.113.0/testing/chai_example.ts","line":6,"col":0},"declarationKind":"private","jsDoc":{"doc":"Run this example with:\n\ndeno test ./testing/chai_example.ts"},"importDef":{"src":"https://cdn.skypack.dev/-/chai@v4.3.4-4LD1LjgHWVQjvyMFe7sm/dist=es2019,mode=types/index.d.ts","imported":"default"}}],"/testing/fast_check_example.ts":[{"kind":"import","name":"fc","location":{"filename":"https://deno.land/std@0.113.0/testing/fast_check_example.ts","line":8,"col":0},"declarationKind":"private","jsDoc":{"doc":"Run this example with:\n\nIf using the nested testing API, use the unstable flag as indicated in the command below\ndeno test --unstable ./testing/fast_check_example.ts"},"importDef":{"src":"https://cdn.skypack.dev/fast-check","imported":"default"}}],"/testing/sinon_example.ts":[{"kind":"import","name":"sinon","location":{"filename":"https://deno.land/std@0.113.0/testing/sinon_example.ts","line":6,"col":0},"declarationKind":"private","jsDoc":{"doc":"Run this example with:\n\ndeno test ./testing/sinon_example.ts"},"importDef":{"src":"https://cdn.skypack.dev/-/sinon@v11.1.2-gD7yE198nweGBLV5XWgz/dist=es2019,mode=types/index.d.ts","imported":"default"}},{"kind":"import","name":"chai","location":{"filename":"https://deno.land/std@0.113.0/testing/sinon_example.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://cdn.skypack.dev/-/chai@v4.3.4-4LD1LjgHWVQjvyMFe7sm/dist=es2019,mode=types/index.d.ts","imported":"default"}}],"/textproto/mod.ts":[{"kind":"class","name":"TextProtoReader","location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":26,"col":0},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"r","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}}],"location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":27,"col":2}}],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"readLine() reads a single line from the TextProtoReader,\neliding the final \\n or \\r\\n from the returned string."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readLine","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":32,"col":2}},{"jsDoc":{"doc":"ReadMIMEHeader reads a MIME-style header from r.\nThe header is a sequence of possibly continued Key: Value lines\nending in a blank line.\nThe returned map m maps CanonicalMIMEHeaderKey(key) to a\nsequence of values in the same order encountered in the input.\n\nFor example, consider this input:\n\n\tMy-Key: Value 1\n\tLong-Key: Even\n\t       Longer Value\n\tMy-Key: Value 2\n\nGiven that input, ReadMIMEHeader returns the map:\n\n\tmap[string][]string{\n\t\t\"My-Key\": {\"Value 1\", \"Value 2\"},\n\t\t\"Long-Key\": {\"Even Longer Value\"},\n\t}"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readMIMEHeader","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":57,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"readLineSlice","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":126,"col":2}},{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"skipSpace","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"l","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":146,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"BufReader","location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"BufReader"}},{"kind":"import","name":"ReadLineResult","location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"ReadLineResult"}},{"kind":"import","name":"concat","location":{"filename":"https://deno.land/std@0.113.0/textproto/mod.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"concat"}}],"/uuid/mod.ts":[{"kind":"namespace","name":"v1","location":{"filename":"./v1.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"function","name":"validate","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":11,"col":0},"declarationKind":"export","jsDoc":{"doc":"Validates the UUID v1.","tags":[{"kind":"param","name":"id","doc":"UUID value."}]},"functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"V1Options","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":22,"col":0},"declarationKind":"export","jsDoc":{"doc":"The options used for generating a v1 UUID."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"node","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":23,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"typeParams":[]},{"name":"clockseq","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":24,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"msecs","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":25,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"nsecs","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":26,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"random","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":27,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"typeParams":[]},{"name":"rng","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":28,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"params":[],"typeParams":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"generate","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":37,"col":0},"declarationKind":"export","jsDoc":{"doc":"Generates a RFC4122 v1 UUID (time-based).","tags":[{"kind":"param","name":"options","doc":"Can use RFC time sequence values as overwrites."},{"kind":"param","name":"buf","doc":"Can allow the UUID to be written in byte-form starting at the offset."},{"kind":"param","name":"offset","doc":"Index to start writing on the UUID bytes in buffer."}]},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"V1Options","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"V1Options"}},{"repr":"null","kind":"keyword","keyword":"null"}]}},{"kind":"identifier","name":"buf","optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}}},{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"bytesToUuid","location":{"filename":"https://deno.land/std@0.113.0/uuid/v1.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/uuid/_common.ts","imported":"bytesToUuid"}}]}},{"kind":"namespace","name":"v4","location":{"filename":"./v4.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"function","name":"validate","location":{"filename":"https://deno.land/std@0.113.0/uuid/v4.ts","line":18,"col":0},"declarationKind":"export","jsDoc":{"doc":"Validate that the passed UUID is an RFC4122 v4 UUID.\n\n```ts\nimport { validate } from \"./v4.ts\";\nimport { generate as generateV1 } from \"./v1.ts\";\n\nvalidate(crypto.randomUUID()); // true\nvalidate(generateV1() as string); // false\nvalidate(\"this-is-not-a-uuid\"); // false\n```"},"functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"generate","location":{"filename":"https://deno.land/std@0.113.0/uuid/v4.ts","line":29,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"v4 UUID generation is deprecated and will be removed in a future\nstd/uuid release. Use the web standard `globalThis.crypto.randomUUID()`\nfunction instead.\n\nGenerate a RFC4122 v4 UUID (pseudo-random)."}]},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}}]}},{"kind":"namespace","name":"v5","location":{"filename":"./v5.ts","line":1,"col":0},"declarationKind":"export","namespaceDef":{"elements":[{"kind":"function","name":"validate","location":{"filename":"https://deno.land/std@0.113.0/uuid/v5.ts","line":20,"col":0},"declarationKind":"export","jsDoc":{"doc":"Validate that the passed UUID is an RFC4122 v5 UUID.\n\n```ts\nimport { generate as generateV5, validate } from \"./v5.ts\";\n\nvalidate(await generateV5(\"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", new Uint8Array())); // true\nvalidate(crypto.randomUUID()); // false\nvalidate(\"this-is-not-a-uuid\"); // false\n```"},"functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"generate","location":{"filename":"https://deno.land/std@0.113.0/uuid/v5.ts","line":39,"col":0},"declarationKind":"export","jsDoc":{"doc":"Generate a RFC4122 v5 UUID (SHA-1 namespace).\n\n```js\nimport { generate } from \"./v5.ts\";\n\nconst NAMESPACE_URL = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\n\nconst uuid = await generate(NAMESPACE_URL, new TextEncoder().encode(\"python.org\"));\nuuid === \"886313e1-3b8a-5372-9b90-0c9aee199e5d\" // true\n```\n","tags":[{"kind":"param","name":"namespace","doc":"The namespace to use, encoded as a UUID."},{"kind":"param","name":"data","doc":"The data to hash to calculate the SHA-1 digest for the UUID."}]},"functionDef":{"params":[{"kind":"identifier","name":"namespace","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"bytesToUuid","location":{"filename":"https://deno.land/std@0.113.0/uuid/v5.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/uuid/_common.ts","imported":"bytesToUuid"}},{"kind":"import","name":"uuidToBytes","location":{"filename":"https://deno.land/std@0.113.0/uuid/v5.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/uuid/_common.ts","imported":"uuidToBytes"}},{"kind":"import","name":"concat","location":{"filename":"https://deno.land/std@0.113.0/uuid/v5.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"concat"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/uuid/v5.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}}]}},{"kind":"variable","name":"NIL_UUID","location":{"filename":"https://deno.land/std@0.113.0/uuid/mod.ts","line":10,"col":0},"declarationKind":"export","variableDef":{"tsType":{"repr":"00000000-0000-0000-0000-000000000000","kind":"literal","literal":{"kind":"string","string":"00000000-0000-0000-0000-000000000000"}},"kind":"const"}},{"kind":"function","name":"isNil","location":{"filename":"https://deno.land/std@0.113.0/uuid/mod.ts","line":22,"col":0},"declarationKind":"export","jsDoc":{"doc":"Check if the passed UUID is the nil UUID.\n\n```js\nimport { isNil } from \"./mod.ts\";\n\nisNil(\"00000000-0000-0000-0000-000000000000\") // true\nisNil(crypto.randomUUID()) // false\n```"},"functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"v1","location":{"filename":"https://deno.land/std@0.113.0/uuid/mod.ts","line":6,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/uuid/v1.ts","imported":null}},{"kind":"import","name":"v4","location":{"filename":"https://deno.land/std@0.113.0/uuid/mod.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/uuid/v4.ts","imported":null}},{"kind":"import","name":"v5","location":{"filename":"https://deno.land/std@0.113.0/uuid/mod.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/uuid/v5.ts","imported":null}}],"/wasi/snapshot_preview1.ts":[{"kind":"interface","name":"ContextOptions","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":286,"col":0},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"args","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":293,"col":2},"jsDoc":{"doc":"An array of strings that the WebAssembly instance will see as command-line\narguments.\n\nThe first argument is the virtual path to the command itself."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"env","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":298,"col":2},"jsDoc":{"doc":"An object of string keys mapped to string values that the WebAssembly module will see as its environment."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}}]}},"typeParams":[]},{"name":"preopens","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":307,"col":2},"jsDoc":{"doc":"An object of string keys mapped to string values that the WebAssembly module will see as it's filesystem.\n\nThe string keys of are treated as directories within the sandboxed\nfilesystem, the values are the real paths to those directories on the host\nmachine."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"key","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}]}},"typeParams":[]},{"name":"exitOnReturn","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":312,"col":2},"jsDoc":{"doc":"Determines if calls to exit from within the WebAssembly module will terminate the proess or return."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"stdin","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":317,"col":2},"jsDoc":{"doc":"The resource descriptor used as standard input in the WebAssembly module."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"stdout","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":322,"col":2},"jsDoc":{"doc":"The resource descriptor used as standard output in the WebAssembly module."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"stderr","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":327,"col":2},"jsDoc":{"doc":"The resource descriptor used as standard error in the WebAssembly module."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"default","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":338,"col":0},"declarationKind":"export","jsDoc":{"doc":"The Context class provides the environment required to run WebAssembly\nmodules compiled to run with the WebAssembly System Interface.\n\nEach context represents a distinct sandboxed environment and must have its\ncommand-line arguments, environment variables, and pre-opened directory\nstructure configured explicitly."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"ContextOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ContextOptions"}}}],"location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":348,"col":2}}],"properties":[{"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"WebAssembly.ImportValue","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebAssembly.ImportValue"}}],"typeName":"Record"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"exports","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":346,"col":2}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Attempt to begin execution of instance as a command by invoking its\n_start() export.\n\nIf the instance does not contain a _start() export, or if the instance\ncontains an _initialize export an error will be thrown.\n\nThe instance must also have a WebAssembly.Memory export named \"memory\"\nwhich will be used as the address space, if it does not an error will be\nthrown."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"start","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"instance","optional":false,"tsType":{"repr":"WebAssembly.Instance","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebAssembly.Instance"}}}],"returnType":{"repr":"","kind":"union","union":[{"repr":"null","kind":"keyword","keyword":"null"},{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"never","kind":"keyword","keyword":"never"}]},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":1665,"col":2}},{"jsDoc":{"doc":"Attempt to initialize instance as a reactor by invoking its _initialize() export.\n\nIf instance contains a _start() export, then an exception is thrown.\n\nThe instance must also have a WebAssembly.Memory export named \"memory\"\nwhich will be used as the address space, if it does not an error will be\nthrown."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"initialize","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"instance","optional":false,"tsType":{"repr":"WebAssembly.Instance","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebAssembly.Instance"}}}],"returnType":null,"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":1714,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"import","name":"relative","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"relative"}},{"kind":"import","name":"resolve","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/path/mod.ts","imported":"resolve"}}],"/wasi/snapshot_preview1_test_runner.ts":[{"kind":"import","name":"Context","location":{"filename":"https://deno.land/std@0.113.0/wasi/snapshot_preview1_test_runner.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/wasi/snapshot_preview1.ts","imported":"default"}}],"/ws/mod.ts":[{"kind":"enum","name":"OpCode","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":15,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"enumDef":{"members":[{"name":"Continue","init":{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}}},{"name":"TextFrame","init":{"repr":"1","kind":"literal","literal":{"kind":"number","number":1}}},{"name":"BinaryFrame","init":{"repr":"2","kind":"literal","literal":{"kind":"number","number":2}}},{"name":"Close","init":{"repr":"8","kind":"literal","literal":{"kind":"number","number":8}}},{"name":"Ping","init":{"repr":"9","kind":"literal","literal":{"kind":"number","number":9}}},{"name":"Pong","init":{"repr":"10","kind":"literal","literal":{"kind":"number","number":10}}}]}},{"kind":"typeAlias","name":"WebSocketEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":25,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"WebSocketCloseEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketCloseEvent"}},{"repr":"WebSocketPingEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketPingEvent"}},{"repr":"WebSocketPongEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketPongEvent"}}]},"typeParams":[]}},{"kind":"interface","name":"WebSocketCloseEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":33,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"code","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":34,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"reason","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":35,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"isWebSocketCloseEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":41,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nReturns true if input value is a WebSocketCloseEvent, false otherwise."}]},"functionDef":{"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"WebSocketEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketEvent"}}}],"returnType":{"repr":"a is WebSocketCloseEvent","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"a"},"type":{"repr":"WebSocketCloseEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketCloseEvent"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"WebSocketPingEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":49,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"ping","kind":"literal","literal":{"kind":"string","string":"ping"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]},"typeParams":[]}},{"kind":"function","name":"isWebSocketPingEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":54,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nReturns true if input value is a WebSocketPingEvent, false otherwise."}]},"functionDef":{"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"WebSocketEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketEvent"}}}],"returnType":{"repr":"a is WebSocketPingEvent","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"a"},"type":{"repr":"WebSocketPingEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketPingEvent"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"WebSocketPongEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":61,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"pong","kind":"literal","literal":{"kind":"string","string":"pong"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]},"typeParams":[]}},{"kind":"function","name":"isWebSocketPongEvent","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":66,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nReturns true if input value is a WebSocketPongEvent, false otherwise."}]},"functionDef":{"params":[{"kind":"identifier","name":"a","optional":false,"tsType":{"repr":"WebSocketEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketEvent"}}}],"returnType":{"repr":"a is WebSocketPongEvent","kind":"typePredicate","typePredicate":{"asserts":false,"param":{"type":"identifier","name":"a"},"type":{"repr":"WebSocketPongEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketPongEvent"}}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"WebSocketMessage","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":73,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]},"typeParams":[]}},{"kind":"interface","name":"WebSocketFrame","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":76,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"isLastFrame","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":77,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"opcode","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":78,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"OpCode","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"OpCode"}},"typeParams":[]},{"name":"mask","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":79,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"typeParams":[]},{"name":"payload","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":80,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocket","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":84,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"interfaceDef":{"extends":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketEvent"}}],"typeName":"AsyncIterable"}}],"methods":[{"name":"[Symbol.asyncIterator]","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":88,"col":2},"computed":true,"optional":false,"params":[],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketEvent","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketEvent"}}],"typeName":"AsyncIterableIterator"}},"typeParams":[]},{"name":"send","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":93,"col":2},"jsDoc":{"tags":[{"kind":"unsupported","value":"@throws `Deno.errors.ConnectionReset`"}]},"optional":false,"params":[{"kind":"identifier","name":"data","optional":false,"tsType":{"repr":"WebSocketMessage","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketMessage"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"typeParams":[]},{"name":"ping","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":99,"col":2},"jsDoc":{"tags":[{"kind":"param","name":"data"},{"kind":"unsupported","value":"@throws `Deno.errors.ConnectionReset`"}]},"optional":false,"params":[{"kind":"identifier","name":"data","optional":true,"tsType":{"repr":"WebSocketMessage","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketMessage"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"typeParams":[]},{"name":"close","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":106,"col":2},"jsDoc":{"doc":"Close connection after sending close frame to peer.\nThis is canonical way of disconnection but it may hang because of peer's response delay.\nDefault close code is 1000 (Normal Closure)","tags":[{"kind":"unsupported","value":"@throws `Deno.errors.ConnectionReset`"}]},"optional":false,"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"typeParams":[]},{"name":"close","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":107,"col":2},"optional":false,"params":[{"kind":"identifier","name":"code","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"typeParams":[]},{"name":"close","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":108,"col":2},"optional":false,"params":[{"kind":"identifier","name":"code","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"reason","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"typeParams":[]},{"name":"closeForce","kind":"method","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":112,"col":2},"jsDoc":{"doc":"Close connection forcely without sending close frame to peer.\n This is basically undesirable way of disconnection. Use carefully."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[{"name":"conn","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":85,"col":2},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"Deno.Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Conn"}},"typeParams":[]},{"name":"isClosed","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":86,"col":2},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"unmask","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":118,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nUnmask masked websocket payload"}]},"functionDef":{"params":[{"kind":"identifier","name":"payload","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"mask","optional":true,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"writeFrame","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":130,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nWrite WebSocket frame to inputted writer."}]},"functionDef":{"params":[{"kind":"identifier","name":"frame","optional":false,"tsType":{"repr":"WebSocketFrame","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketFrame"}}},{"kind":"identifier","name":"writer","optional":false,"tsType":{"repr":"Deno.Writer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Writer"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"readFrame","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":173,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nRead websocket frame from given BufReader"},{"kind":"unsupported","value":"@throws `Deno.errors.UnexpectedEof` When peer closed connection without close frame"},{"kind":"unsupported","value":"@throws `Error` Frame is invalid"}]},"functionDef":{"params":[{"kind":"identifier","name":"buf","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketFrame","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketFrame"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"acceptable","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":421,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nReturns true if input headers are usable for WebSocket, otherwise false."}]},"functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"headers","params":[],"computed":false,"optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"createSecAccept","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":439,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nCreate value of Sec-WebSocket-Accept header from inputted nonce."}]},"functionDef":{"params":[{"kind":"identifier","name":"nonce","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"acceptWebSocket","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":448,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nUpgrade inputted TCP connection into WebSocket connection."}]},"functionDef":{"params":[{"kind":"identifier","name":"req","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"conn","params":[],"computed":false,"optional":false,"tsType":{"repr":"Deno.Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Conn"}},"typeParams":[]},{"name":"bufWriter","params":[],"computed":false,"optional":false,"tsType":{"repr":"BufWriter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufWriter"}},"typeParams":[]},{"name":"bufReader","params":[],"computed":false,"optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}},"typeParams":[]},{"name":"headers","params":[],"computed":false,"optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocket","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocket"}}],"typeName":"Promise"}},"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"createSecKey","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":489,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket\nReturns base64 encoded 16 bytes string for Sec-WebSocket-Key header."}]},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"handshake","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":499,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"functionDef":{"params":[{"kind":"identifier","name":"url","optional":false,"tsType":{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}},{"kind":"identifier","name":"headers","optional":false,"tsType":{"repr":"Headers","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Headers"}}},{"kind":"identifier","name":"bufReader","optional":false,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}}},{"kind":"identifier","name":"bufWriter","optional":false,"tsType":{"repr":"BufWriter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufWriter"}}}],"returnType":null,"isAsync":true,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"createWebSocket","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":560,"col":0},"declarationKind":"export","jsDoc":{"tags":[{"kind":"deprecated","doc":"use Deno.upgradeWebSocket"}]},"functionDef":{"params":[{"kind":"identifier","name":"params","optional":false,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"conn","params":[],"computed":false,"optional":false,"tsType":{"repr":"Deno.Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Conn"}},"typeParams":[]},{"name":"bufWriter","params":[],"computed":false,"optional":true,"tsType":{"repr":"BufWriter","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufWriter"}},"typeParams":[]},{"name":"bufReader","params":[],"computed":false,"optional":true,"tsType":{"repr":"BufReader","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BufReader"}},"typeParams":[]},{"name":"mask","params":[],"computed":false,"optional":true,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}}],"returnType":{"repr":"WebSocket","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocket"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"import","name":"BufReader","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"BufReader"}},{"kind":"import","name":"BufWriter","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":2,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/buffer.ts","imported":"BufWriter"}},{"kind":"import","name":"readLong","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/util.ts","imported":"readLong"}},{"kind":"import","name":"readShort","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/util.ts","imported":"readShort"}},{"kind":"import","name":"sliceLongToBytes","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":3,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/io/util.ts","imported":"sliceLongToBytes"}},{"kind":"import","name":"crypto","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":4,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/crypto/mod.ts","imported":"crypto"}},{"kind":"import","name":"base64","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":5,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/encoding/base64.ts","imported":null}},{"kind":"import","name":"writeResponse","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":7,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/http/_io.ts","imported":"writeResponse"}},{"kind":"import","name":"TextProtoReader","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":8,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/textproto/mod.ts","imported":"TextProtoReader"}},{"kind":"import","name":"Deferred","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"Deferred"}},{"kind":"import","name":"deferred","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":9,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/async/deferred.ts","imported":"deferred"}},{"kind":"import","name":"assert","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":10,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/_util/assert.ts","imported":"assert"}},{"kind":"import","name":"concat","location":{"filename":"https://deno.land/std@0.113.0/ws/mod.ts","line":11,"col":0},"declarationKind":"private","importDef":{"src":"https://deno.land/std@0.113.0/bytes/mod.ts","imported":"concat"}}]}}