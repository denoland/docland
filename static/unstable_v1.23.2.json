[{"kind":"namespace","name":"Deno","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":6,"col":0},"declarationKind":"declare","namespaceDef":{"elements":[{"kind":"interface","name":"BenchDefinition","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":7,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"fn","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":8,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[],"typeParams":[]}},"typeParams":[]},{"name":"name","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":9,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"ignore","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":10,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"group","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":13,"col":4},"jsDoc":{"doc":"Group name for the benchmark.\nGrouped benchmarks produce a time summary"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"baseline","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":16,"col":4},"jsDoc":{"doc":"Benchmark should be used as the baseline for other benchmarks\nIf there are multiple baselines in a group, the first one is used as the baseline"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"only","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":19,"col":4},"jsDoc":{"doc":"If at least one bench has `only` set to true, only run benches that have\n`only` set to true and fail the bench suite."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"sanitizeExit","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":22,"col":4},"jsDoc":{"doc":"Ensure the bench case does not prematurely cause the process to exit,\nfor example via a call to `Deno.exit`. Defaults to true."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"permissions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":30,"col":4},"jsDoc":{"doc":"Specifies the permissions that should be used to run the bench.\nSet this to \"inherit\" to keep the calling thread's permissions.\nSet this to \"none\" to revoke all permissions.\n\nDefaults to \"inherit\"."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Deno.PermissionOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionOptions"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":64,"col":2},"declarationKind":"export","jsDoc":{"doc":"Register a bench which will be run when `deno bench` is used on the command\nline and the containing module looks like a bench module.\n`fn` can be async if required.\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.bench({\n  name: \"example test\",\n  fn(): void {\n    assertEquals(\"world\", \"world\");\n  },\n});\n\nDeno.bench({\n  name: \"example ignored test\",\n  ignore: Deno.build.os === \"windows\",\n  fn(): void {\n    // This test is ignored only on Windows machines\n  },\n});\n\nDeno.bench({\n  name: \"example async test\",\n  async fn() {\n    const decoder = new TextDecoder(\"utf-8\");\n    const data = await Deno.readFile(\"hello_world.txt\");\n    assertEquals(decoder.decode(data), \"Hello world\");\n  }\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"t","optional":false,"tsType":{"repr":"BenchDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchDefinition"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":84,"col":2},"declarationKind":"export","jsDoc":{"doc":"Register a bench which will be run when `deno bench` is used on the command\nline and the containing module looks like a bench module.\n`fn` can be async if required.\n\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.bench(\"My test description\", (): void => {\n  assertEquals(\"hello\", \"hello\");\n});\n\nDeno.bench(\"My async test description\", async (): Promise<void> => {\n  const decoder = new TextDecoder(\"utf-8\");\n  const data = await Deno.readFile(\"hello_world.txt\");\n  assertEquals(decoder.decode(data), \"Hello world\");\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[],"typeParams":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":107,"col":2},"declarationKind":"export","jsDoc":{"doc":"Register a bench which will be run when `deno bench` is used on the command\nline and the containing module looks like a bench module.\n`fn` can be async if required. Declared function must have a name.\n\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.bench(function myTestName(): void {\n  assertEquals(\"hello\", \"hello\");\n});\n\nDeno.bench(async function myOtherTestName(): Promise<void> {\n  const decoder = new TextDecoder(\"utf-8\");\n  const data = await Deno.readFile(\"hello_world.txt\");\n  assertEquals(decoder.decode(data), \"Hello world\");\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[],"typeParams":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":127,"col":2},"declarationKind":"export","jsDoc":{"doc":"Register a bench which will be run when `deno bench` is used on the command\nline and the containing module looks like a bench module.\n`fn` can be async if required.\n\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.bench(\"My test description\", { permissions: { read: true } }, (): void => {\n  assertEquals(\"hello\", \"hello\");\n});\n\nDeno.bench(\"My async test description\", { permissions: { read: false } }, async (): Promise<void> => {\n  const decoder = new TextDecoder(\"utf-8\");\n  const data = await Deno.readFile(\"hello_world.txt\");\n  assertEquals(decoder.decode(data), \"Hello world\");\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"Omit","kind":"typeRef","typeRef":{"typeParams":[{"repr":"BenchDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchDefinition"}},{"repr":"","kind":"union","union":[{"repr":"fn","kind":"literal","literal":{"kind":"string","string":"fn"}},{"repr":"name","kind":"literal","literal":{"kind":"string","string":"name"}}]}],"typeName":"Omit"}}},{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[],"typeParams":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":151,"col":2},"declarationKind":"export","jsDoc":{"doc":"Register a bench which will be run when `deno bench` is used on the command\nline and the containing module looks like a bench module.\n`fn` can be async if required.\n\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.bench({ name: \"My test description\", permissions: { read: true } }, (): void => {\n  assertEquals(\"hello\", \"hello\");\n});\n\nDeno.bench({ name: \"My async test description\", permissions: { read: false } }, async (): Promise<void> => {\n  const decoder = new TextDecoder(\"utf-8\");\n  const data = await Deno.readFile(\"hello_world.txt\");\n  assertEquals(decoder.decode(data), \"Hello world\");\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"Omit","kind":"typeRef","typeRef":{"typeParams":[{"repr":"BenchDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchDefinition"}},{"repr":"fn","kind":"literal","literal":{"kind":"string","string":"fn"}}],"typeName":"Omit"}}},{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[],"typeParams":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"bench","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":174,"col":2},"declarationKind":"export","jsDoc":{"doc":"Register a bench which will be run when `deno bench` is used on the command\nline and the containing module looks like a bench module.\n`fn` can be async if required. Declared function must have a name.\n\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.bench({ permissions: { read: true } }, function myTestName(): void {\n  assertEquals(\"hello\", \"hello\");\n});\n\nDeno.bench({ permissions: { read: false } }, async function myOtherTestName(): Promise<void> {\n  const decoder = new TextDecoder(\"utf-8\");\n  const data = await Deno.readFile(\"hello_world.txt\");\n  assertEquals(decoder.decode(data), \"Hello world\");\n});\n```"},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"Omit","kind":"typeRef","typeRef":{"typeParams":[{"repr":"BenchDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BenchDefinition"}},{"repr":"","kind":"union","union":[{"repr":"fn","kind":"literal","literal":{"kind":"string","string":"fn"}},{"repr":"name","kind":"literal","literal":{"kind":"string","string":"name"}}]}],"typeName":"Omit"}}},{"kind":"identifier","name":"fn","optional":false,"tsType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"void","kind":"keyword","keyword":"void"},{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}}]},"params":[],"typeParams":[]}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"umask","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":194,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.  This API is under consideration to\ndetermine if permissions are required to call it.\n\nRetrieve the process umask.  If `mask` is provided, sets the process umask.\nThis call always returns what the umask was before the call.\n\n```ts\nconsole.log(Deno.umask());  // e.g. 18 (0o022)\nconst prevUmaskValue = Deno.umask(0o077);  // e.g. 18 (0o022)\nconsole.log(Deno.umask());  // e.g. 63 (0o077)\n```\n\nNOTE:  This API is not implemented on Windows"},"functionDef":{"params":[{"kind":"identifier","name":"mask","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"consoleSize","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":204,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\n\nGets the size of the console as columns/rows.\n\n```ts\nconst { columns, rows } = Deno.consoleSize(Deno.stdout.rid);\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"columns","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"rows","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"loadavg","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":226,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable**  There are questions around which permission this needs. And\nmaybe should be renamed (loadAverage?)\n\nReturns an array containing the 1, 5, and 15 minute load averages. The\nload average is a measure of CPU and IO utilization of the last one, five,\nand 15 minute periods expressed as a fractional number.  Zero means there\nis no load. On Windows, the three values are always the same and represent\nthe current load, not the 1, 5 and 15 minute load averages.\n\n```ts\nconsole.log(Deno.loadavg());  // e.g. [ 0.71, 0.44, 0.44 ]\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"number","kind":"keyword","keyword":"number"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"osRelease","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":240,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted. Under consideration to possibly move to\nDeno.build or Deno.versions and if it should depend sys-info, which may not\nbe desireable.\n\nReturns the release version of the Operating System.\n\n```ts\nconsole.log(Deno.osRelease());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"systemMemoryInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":255,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted.\n\nDisplays the total amount of free and used physical and swap memory in the\nsystem, as well as the buffers and caches used by the kernel.\n\nThis is similar to the `free` command in Linux\n\n```ts\nconsole.log(Deno.systemMemoryInfo());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"SystemMemoryInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SystemMemoryInfo"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"SystemMemoryInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":257,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"total","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":259,"col":4},"jsDoc":{"doc":"Total installed memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"free","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":261,"col":4},"jsDoc":{"doc":"Unused memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"available","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":267,"col":4},"jsDoc":{"doc":"Estimation of how much memory is available  for  starting  new\napplications, without  swapping. Unlike the data provided by the cache or\nfree fields, this field takes into account page cache and also that not\nall reclaimable memory slabs will be reclaimed due to items being in use"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"buffers","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":269,"col":4},"jsDoc":{"doc":"Memory used by kernel buffers"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"cached","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":271,"col":4},"jsDoc":{"doc":"Memory  used  by  the  page  cache  and  slabs"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"swapTotal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":273,"col":4},"jsDoc":{"doc":"Total swap memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"swapFree","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":275,"col":4},"jsDoc":{"doc":"Unused swap memory"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"NetworkInterfaceInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":279,"col":2},"declarationKind":"export","jsDoc":{"doc":"The information of the network interface"},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":281,"col":4},"jsDoc":{"doc":"The network interface name"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"family","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":283,"col":4},"jsDoc":{"doc":"The IP protocol version"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"IPv4","kind":"literal","literal":{"kind":"string","string":"IPv4"}},{"repr":"IPv6","kind":"literal","literal":{"kind":"string","string":"IPv6"}}]},"typeParams":[]},{"name":"address","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":285,"col":4},"jsDoc":{"doc":"The IP address"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"netmask","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":287,"col":4},"jsDoc":{"doc":"The netmask"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"scopeid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":289,"col":4},"jsDoc":{"doc":"The IPv6 scope id or null"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"typeParams":[]},{"name":"cidr","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":291,"col":4},"jsDoc":{"doc":"The CIDR range"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"mac","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":293,"col":4},"jsDoc":{"doc":"The MAC address"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"networkInterfaces","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":306,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted.\n\nReturns an array of the network interface informations.\n\n```ts\nconsole.log(Deno.networkInterfaces());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"array","array":{"repr":"NetworkInterfaceInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NetworkInterfaceInfo"}}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getUid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":318,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted.\n\nReturns the user id of the process on POSIX platforms. Returns null on windows.\n\n```ts\nconsole.log(Deno.getUid());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"getGid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":330,"col":2},"declarationKind":"export","jsDoc":{"doc":"**Unstable** new API. yet to be vetted.\n\nReturns the group id of the process on POSIX platforms. Returns null on windows.\n\n```ts\nconsole.log(Deno.getGid());\n```\n\nRequires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"null","kind":"keyword","keyword":"null"}]},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"typeAlias","name":"NativeNumberType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":333,"col":2},"declarationKind":"private","jsDoc":{"doc":"All plain number types for interfacing with foreign functions"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"u8","kind":"literal","literal":{"kind":"string","string":"u8"}},{"repr":"i8","kind":"literal","literal":{"kind":"string","string":"i8"}},{"repr":"u16","kind":"literal","literal":{"kind":"string","string":"u16"}},{"repr":"i16","kind":"literal","literal":{"kind":"string","string":"i16"}},{"repr":"u32","kind":"literal","literal":{"kind":"string","string":"u32"}},{"repr":"i32","kind":"literal","literal":{"kind":"string","string":"i32"}},{"repr":"f32","kind":"literal","literal":{"kind":"string","string":"f32"}},{"repr":"f64","kind":"literal","literal":{"kind":"string","string":"f64"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"NativeBigIntType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":344,"col":2},"declarationKind":"private","jsDoc":{"doc":"All BigInt number type sfor interfacing with foreign functions"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"u64","kind":"literal","literal":{"kind":"string","string":"u64"}},{"repr":"i64","kind":"literal","literal":{"kind":"string","string":"i64"}},{"repr":"usize","kind":"literal","literal":{"kind":"string","string":"usize"}},{"repr":"isize","kind":"literal","literal":{"kind":"string","string":"isize"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"NativePointerType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":350,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"pointer","kind":"literal","literal":{"kind":"string","string":"pointer"}},"typeParams":[]}},{"kind":"typeAlias","name":"NativeFunctionType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":352,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"function","kind":"literal","literal":{"kind":"string","string":"function"}},"typeParams":[]}},{"kind":"typeAlias","name":"NativeVoidType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":354,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"void","kind":"literal","literal":{"kind":"string","string":"void"}},"typeParams":[]}},{"kind":"typeAlias","name":"NativeType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":357,"col":2},"declarationKind":"export","jsDoc":{"doc":"All possible types for interfacing with foreign functions"},"typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"NativeNumberType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeNumberType"}},{"repr":"NativeBigIntType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeBigIntType"}},{"repr":"NativePointerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativePointerType"}},{"repr":"NativeFunctionType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeFunctionType"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"NativeResultType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":363,"col":2},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}},{"repr":"NativeVoidType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeVoidType"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"ToNativeTypeMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":365,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeNumberType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeNumberType"}},{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeBigIntType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeBigIntType"}},{"repr":"","kind":"union","union":[{"repr":"bigint","kind":"keyword","keyword":"bigint"},{"repr":"number","kind":"keyword","keyword":"number"}]}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativePointerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativePointerType"}},{"repr":"","kind":"union","union":[{"repr":"TypedArray","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TypedArray"}},{"repr":"bigint","kind":"keyword","keyword":"bigint"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeFunctionType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeFunctionType"}},{"repr":"","kind":"union","union":[{"repr":"bigint","kind":"keyword","keyword":"bigint"},{"repr":"null","kind":"keyword","keyword":"null"}]}],"typeName":"Record"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"ToNativeType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":372,"col":2},"declarationKind":"private","jsDoc":{"doc":"Type conversion for foreign symbol parameters and unsafe callback return types"},"typeAliasDef":{"tsType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"ToNativeTypeMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ToNativeTypeMap"}},"indexType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"typeParams":[{"name":"T","constraint":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}},"default":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}]}},{"kind":"typeAlias","name":"ToNativeResultTypeMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":374,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"ToNativeTypeMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ToNativeTypeMap"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeVoidType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeVoidType"}},{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Record"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"ToNativeResultType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":377,"col":2},"declarationKind":"private","jsDoc":{"doc":"Type conversion for unsafe callback return types"},"typeAliasDef":{"tsType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"ToNativeResultTypeMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ToNativeResultTypeMap"}},"indexType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"typeParams":[{"name":"T","constraint":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}},"default":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}}}]}},{"kind":"typeAlias","name":"ToNativeParameterTypes","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":380,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"array","array":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}}}]},"extendsType":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}]},"trueType":{"repr":"","kind":"array","array":{"repr":"ToNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}],"typeName":"ToNativeType"}}},"falseType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}}}}}]},"extendsType":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}]},"trueType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"ToNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}],"typeName":"ToNativeType"}}}}},"falseType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"rest","rest":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}]}}},"trueType":{"repr":"","kind":"mapped","mappedType":{"typeParam":{"name":"K","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"keyof","tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},"tsType":{"repr":"ToNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"K","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"K"}}}}],"typeName":"ToNativeType"}}}},"falseType":{"repr":"never","kind":"keyword","keyword":"never"}}}}}}},"typeParams":[{"name":"T","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}}}]}},{"kind":"typeAlias","name":"FromNativeTypeMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":390,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeNumberType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeNumberType"}},{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeBigIntType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeBigIntType"}},{"repr":"bigint","kind":"keyword","keyword":"bigint"}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativePointerType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativePointerType"}},{"repr":"bigint","kind":"keyword","keyword":"bigint"}],"typeName":"Record"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeFunctionType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeFunctionType"}},{"repr":"bigint","kind":"keyword","keyword":"bigint"}],"typeName":"Record"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"FromNativeType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":397,"col":2},"declarationKind":"private","jsDoc":{"doc":"Type conversion for foreign symbol return types and unsafe callback parameters"},"typeAliasDef":{"tsType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"FromNativeTypeMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FromNativeTypeMap"}},"indexType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"typeParams":[{"name":"T","constraint":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}},"default":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}]}},{"kind":"typeAlias","name":"FromNativeResultTypeMap","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":399,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"FromNativeTypeMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FromNativeTypeMap"}},{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"NativeVoidType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeVoidType"}},{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Record"}}]},"typeParams":[]}},{"kind":"typeAlias","name":"FromNativeResultType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":404,"col":2},"declarationKind":"private","jsDoc":{"doc":"Type conversion for foregin symbol return types"},"typeAliasDef":{"tsType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"FromNativeResultTypeMap","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"FromNativeResultTypeMap"}},"indexType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"typeParams":[{"name":"T","constraint":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}},"default":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}}}]}},{"kind":"typeAlias","name":"FromNativeParameterTypes","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":407,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"array","array":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}}}]},"extendsType":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}]},"trueType":{"repr":"","kind":"array","array":{"repr":"FromNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}],"typeName":"FromNativeType"}}},"falseType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"","kind":"parenthesized","parenthesized":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}}}}}]},"extendsType":{"repr":"","kind":"tuple","tuple":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}]},"trueType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"FromNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"number","kind":"keyword","keyword":"number"}}}],"typeName":"FromNativeType"}}}}},"falseType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"tuple","tuple":[{"repr":"","kind":"rest","rest":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}]}}},"trueType":{"repr":"","kind":"mapped","mappedType":{"typeParam":{"name":"K","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"keyof","tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},"tsType":{"repr":"FromNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"K","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"K"}}}}],"typeName":"FromNativeType"}}}},"falseType":{"repr":"never","kind":"keyword","keyword":"never"}}}}}}},"typeParams":[{"name":"T","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}}}]}},{"kind":"interface","name":"ForeignFunction","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":420,"col":2},"declarationKind":"export","jsDoc":{"doc":"A foreign function as defined by its parameter and result types"},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":426,"col":4},"jsDoc":{"doc":"Name of the symbol, defaults to the key name in symbols object."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"parameters","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":427,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Parameters","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Parameters"}},"typeParams":[]},{"name":"result","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":428,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Result","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Result"}},"typeParams":[]},{"name":"nonblocking","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":430,"col":4},"jsDoc":{"doc":"When true, function calls will run on a dedicated blocking thread and will return a Promise resolving to the `result`."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"NonBlocking","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NonBlocking"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"Parameters","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}},"default":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}}},{"name":"Result","constraint":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}},"default":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}}},{"name":"NonBlocking","constraint":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"default":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}]}},{"kind":"interface","name":"ForeignStatic","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":433,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"name","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":435,"col":4},"jsDoc":{"doc":"Name of the symbol, defaults to the key name in symbols object."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"type","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":436,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Type","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Type"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"Type","constraint":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}},"default":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}]}},{"kind":"interface","name":"ForeignLibraryInterface","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":440,"col":2},"declarationKind":"export","jsDoc":{"doc":"A foreign library interface descriptor"},"interfaceDef":{"extends":[],"methods":[],"properties":[],"callSignatures":[],"indexSignatures":[{"readonly":false,"params":[{"kind":"identifier","name":"name","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}}],"tsType":{"repr":"","kind":"union","union":[{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}},{"repr":"ForeignStatic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignStatic"}}]}}],"typeParams":[]}},{"kind":"typeAlias","name":"StaticForeignSymbol","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":445,"col":2},"declarationKind":"private","jsDoc":{"doc":"Infers a foreign symbol"},"typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}},"trueType":{"repr":"FromForeignFunction","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"FromForeignFunction"}},"falseType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"extendsType":{"repr":"ForeignStatic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignStatic"}},"trueType":{"repr":"FromNativeType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"type","kind":"literal","literal":{"kind":"string","string":"type"}}}}],"typeName":"FromNativeType"}},"falseType":{"repr":"never","kind":"keyword","keyword":"never"}}}}},"typeParams":[{"name":"T","constraint":{"repr":"","kind":"union","union":[{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}},{"repr":"ForeignStatic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignStatic"}}]}}]}},{"kind":"typeAlias","name":"FromForeignFunction","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":450,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"parameters","kind":"literal","literal":{"kind":"string","string":"parameters"}}}},"extendsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"tuple","tuple":[]}}},"trueType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"StaticForeignSymbolReturnType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"StaticForeignSymbolReturnType"}},"params":[],"typeParams":[]}},"falseType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"StaticForeignSymbolReturnType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"StaticForeignSymbolReturnType"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"ToNativeParameterTypes","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"parameters","kind":"literal","literal":{"kind":"string","string":"parameters"}}}}],"typeName":"ToNativeParameterTypes"}}}],"typeParams":[]}}}},"typeParams":[{"name":"T","constraint":{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}}}]}},{"kind":"typeAlias","name":"StaticForeignSymbolReturnType","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":456,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"ConditionalAsync","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"nonblocking","kind":"literal","literal":{"kind":"string","string":"nonblocking"}}}},{"repr":"FromNativeResultType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"result","kind":"literal","literal":{"kind":"string","string":"result"}}}}],"typeName":"FromNativeResultType"}}],"typeName":"ConditionalAsync"}},"typeParams":[{"name":"T","constraint":{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}}}]}},{"kind":"typeAlias","name":"ConditionalAsync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":459,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"IsAsync","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"IsAsync"}},"extendsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"trueType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Promise"}},"falseType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}},"typeParams":[{"name":"IsAsync","constraint":{"repr":"","kind":"union","union":[{"repr":"boolean","kind":"keyword","keyword":"boolean"},{"repr":"undefined","kind":"keyword","keyword":"undefined"}]}},{"name":"T"}]}},{"kind":"typeAlias","name":"StaticForeignLibraryInterface","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":463,"col":2},"declarationKind":"private","jsDoc":{"doc":"Infers a foreign library interface"},"typeAliasDef":{"tsType":{"repr":"","kind":"mapped","mappedType":{"typeParam":{"name":"K","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"keyof","tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}}},"tsType":{"repr":"StaticForeignSymbol","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"K","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"K"}}}}],"typeName":"StaticForeignSymbol"}}}},"typeParams":[{"name":"T","constraint":{"repr":"ForeignLibraryInterface","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignLibraryInterface"}}}]}},{"kind":"typeAlias","name":"TypedArray","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":467,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"Int8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Int8Array"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Int16Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Int16Array"}},{"repr":"Uint16Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint16Array"}},{"repr":"Int32Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Int32Array"}},{"repr":"Uint32Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint32Array"}},{"repr":"Uint8ClampedArray","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8ClampedArray"}},{"repr":"Float32Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Float32Array"}},{"repr":"Float64Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Float64Array"}},{"repr":"BigInt64Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigInt64Array"}},{"repr":"BigUint64Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BigUint64Array"}}]},"typeParams":[]}},{"kind":"class","name":"UnsafePointer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":484,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: Unsafe and new API, beware!\n\nAn unsafe pointer to a memory location for passing and returning pointers to and from the ffi"},"classDef":{"isAbstract":false,"constructors":[],"properties":[],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Return the direct memory pointer to the typed array in memory"},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":true,"name":"of","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"value","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Deno.UnsafeCallback","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.UnsafeCallback"}},{"repr":"TypedArray","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TypedArray"}}]}}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":488,"col":4}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"UnsafePointerView","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":498,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: Unsafe and new API, beware!\n\nAn unsafe pointer view to a memory location as specified by the `pointer`\nvalue. The `UnsafePointerView` API mimics the standard built in interface\n`DataView` for accessing the underlying types at an memory location\n(numbers, strings and raw bytes)."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"pointer","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}}],"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":499,"col":4}}],"properties":[{"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pointer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":501,"col":4}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Gets an unsigned 8-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getUint8","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":504,"col":4}},{"jsDoc":{"doc":"Gets a signed 8-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getInt8","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":506,"col":4}},{"jsDoc":{"doc":"Gets an unsigned 16-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getUint16","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":508,"col":4}},{"jsDoc":{"doc":"Gets a signed 16-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getInt16","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":510,"col":4}},{"jsDoc":{"doc":"Gets an unsigned 32-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getUint32","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":512,"col":4}},{"jsDoc":{"doc":"Gets a signed 32-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getInt32","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":514,"col":4}},{"jsDoc":{"doc":"Gets an unsigned 64-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getBigUint64","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":516,"col":4}},{"jsDoc":{"doc":"Gets a signed 64-bit integer at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getBigInt64","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":518,"col":4}},{"jsDoc":{"doc":"Gets a signed 32-bit float at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getFloat32","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":520,"col":4}},{"jsDoc":{"doc":"Gets a signed 64-bit float at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getFloat64","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"number","kind":"keyword","keyword":"number"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":522,"col":4}},{"jsDoc":{"doc":"Gets a C string (null terminated string) at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getCString","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":524,"col":4}},{"jsDoc":{"doc":"Gets an ArrayBuffer of length `byteLength` at the specified byte offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"getArrayBuffer","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"byteLength","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"ArrayBuffer","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ArrayBuffer"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":526,"col":4}},{"jsDoc":{"doc":"Copies the memory of the pointer into a typed array. Length is determined from the typed array's `byteLength`. Also takes optional offset from the pointer."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"copyInto","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"destination","optional":false,"tsType":{"repr":"TypedArray","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TypedArray"}}},{"kind":"identifier","name":"offset","optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":528,"col":4}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"class","name":"UnsafeFnPointer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":537,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: Unsafe and new API, beware!\n\nAn unsafe pointer to a function, for calling functions that are not\npresent as symbols."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"pointer","optional":false,"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"}},{"kind":"identifier","name":"definition","optional":false,"tsType":{"repr":"Fn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Fn"}}}],"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":541,"col":4}}],"properties":[{"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pointer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":538,"col":4}},{"tsType":{"repr":"Fn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Fn"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"definition","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":539,"col":4}},{"tsType":{"repr":"FromForeignFunction","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Fn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Fn"}}],"typeName":"FromForeignFunction"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"call","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":543,"col":4}}],"indexSignatures":[],"methods":[],"extends":null,"implements":[],"typeParams":[{"name":"Fn","constraint":{"repr":"ForeignFunction","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignFunction"}}}],"superTypeParams":[]}},{"kind":"interface","name":"UnsafeCallbackDefinition","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":546,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"parameters","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":550,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Parameters","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Parameters"}},"typeParams":[]},{"name":"result","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":551,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"Result","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Result"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"Parameters","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}},"default":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}}},{"name":"Result","constraint":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}},"default":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}}}]}},{"kind":"typeAlias","name":"UnsafeCallbackFunction","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":554,"col":2},"declarationKind":"private","typeAliasDef":{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"Parameters","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Parameters"}},"extendsType":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"tuple","tuple":[]}}},"trueType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"ToNativeResultType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Result","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Result"}}],"typeName":"ToNativeResultType"}},"params":[],"typeParams":[]}},"falseType":{"repr":"","kind":"fnOrConstructor","fnOrConstructor":{"constructor":false,"tsType":{"repr":"ToNativeResultType","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Result","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Result"}}],"typeName":"ToNativeResultType"}},"params":[{"kind":"rest","arg":{"kind":"identifier","name":"args","optional":false,"tsType":null},"tsType":{"repr":"FromNativeParameterTypes","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Parameters","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Parameters"}}],"typeName":"FromNativeParameterTypes"}}}],"typeParams":[]}}}},"typeParams":[{"name":"Parameters","constraint":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}},"default":{"repr":"","kind":"typeOperator","typeOperator":{"operator":"readonly","tsType":{"repr":"","kind":"array","array":{"repr":"NativeType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeType"}}}}}},{"name":"Result","constraint":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}},"default":{"repr":"NativeResultType","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"NativeResultType"}}}]}},{"kind":"class","name":"UnsafeCallback","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":572,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: Unsafe and new API, beware!\n\nAn unsafe function pointer for passing JavaScript functions\nas C function pointers to ffi calls.\n\nThe function pointer remains valid until the `close()` method is called.\n\nThe callback can be explicitly ref'ed and deref'ed to stop Deno's\nprocess from exiting."},"classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"definition","optional":false,"tsType":{"repr":"Definition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Definition"}}},{"kind":"identifier","name":"callback","optional":false,"tsType":{"repr":"UnsafeCallbackFunction","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"Definition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Definition"}},"indexType":{"repr":"parameters","kind":"literal","literal":{"kind":"string","string":"parameters"}}}},{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"Definition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Definition"}},"indexType":{"repr":"result","kind":"literal","literal":{"kind":"string","string":"result"}}}}],"typeName":"UnsafeCallbackFunction"}}}],"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":575,"col":4}}],"properties":[{"tsType":{"repr":"bigint","kind":"keyword","keyword":"bigint"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pointer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":583,"col":4}},{"tsType":{"repr":"Definition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Definition"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"definition","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":584,"col":4}},{"tsType":{"repr":"UnsafeCallbackFunction","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"Definition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Definition"}},"indexType":{"repr":"parameters","kind":"literal","literal":{"kind":"string","string":"parameters"}}}},{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"Definition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Definition"}},"indexType":{"repr":"result","kind":"literal","literal":{"kind":"string","string":"result"}}}}],"typeName":"UnsafeCallbackFunction"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"callback","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":585,"col":4}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Adds one to this callback's reference counting.\n\nIf the callback's reference count becomes non-zero, it will keep\nDeno's process from exiting."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"ref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":596,"col":4}},{"jsDoc":{"doc":"Removes one from this callback's reference counting.\n\nIf the callback's reference counter becomes zero, it will no longer\nkeep Deno's process from exiting."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"unref","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":604,"col":4}},{"jsDoc":{"doc":"Removes the C function pointer associated with the UnsafeCallback.\nContinuing to use the instance after calling this object will lead to errors\nand crashes.\n\nCalling this method will also immediately set the callback's reference\ncounting to zero and it will no longer keep Deno's process from exiting."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":614,"col":4}}],"extends":null,"implements":[],"typeParams":[{"name":"Definition","constraint":{"repr":"UnsafeCallbackDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnsafeCallbackDefinition"}},"default":{"repr":"UnsafeCallbackDefinition","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnsafeCallbackDefinition"}}}],"superTypeParams":[]}},{"kind":"interface","name":"DynamicLibrary","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":618,"col":2},"declarationKind":"export","jsDoc":{"doc":"A dynamic library resource"},"interfaceDef":{"extends":[],"methods":[{"name":"close","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":621,"col":4},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[{"name":"symbols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":620,"col":4},"jsDoc":{"doc":"All of the registered library along with functions for calling them"},"params":[],"computed":false,"optional":false,"tsType":{"repr":"StaticForeignLibraryInterface","kind":"typeRef","typeRef":{"typeParams":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}],"typeName":"StaticForeignLibraryInterface"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"S","constraint":{"repr":"ForeignLibraryInterface","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignLibraryInterface"}}}]}},{"kind":"function","name":"dlopen","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":628,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: Unsafe and new API, beware!\n\nOpens a dynamic library and registers symbols"},"functionDef":{"params":[{"kind":"identifier","name":"filename","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"symbols","optional":false,"tsType":{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}}],"returnType":{"repr":"DynamicLibrary","kind":"typeRef","typeRef":{"typeParams":[{"repr":"S","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"S"}}],"typeName":"DynamicLibrary"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"S","constraint":{"repr":"ForeignLibraryInterface","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ForeignLibraryInterface"}}}]}},{"kind":"enum","name":"DiagnosticCategory","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":634,"col":2},"declarationKind":"export","jsDoc":{"doc":"The log category for a diagnostic message."},"enumDef":{"members":[{"name":"Warning","init":{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":635,"col":4}},{"name":"Error","init":{"repr":"1","kind":"literal","literal":{"kind":"number","number":1}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":636,"col":4}},{"name":"Suggestion","init":{"repr":"2","kind":"literal","literal":{"kind":"number","number":2}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":637,"col":4}},{"name":"Message","init":{"repr":"3","kind":"literal","literal":{"kind":"number","number":3}},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":638,"col":4}}]}},{"kind":"interface","name":"DiagnosticMessageChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":641,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"messageText","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":642,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"category","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":643,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"DiagnosticCategory","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticCategory"}},"typeParams":[]},{"name":"code","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":644,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"next","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":645,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"DiagnosticMessageChain","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticMessageChain"}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"Diagnostic","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":648,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"messageText","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":650,"col":4},"jsDoc":{"doc":"A string message summarizing the diagnostic."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"messageChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":652,"col":4},"jsDoc":{"doc":"An ordered array of further diagnostics."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"DiagnosticMessageChain","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticMessageChain"}},"typeParams":[]},{"name":"relatedInformation","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":655,"col":4},"jsDoc":{"doc":"Information related to the diagnostic. This is present when there is a\nsuggestion or other additional diagnostic information"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"Diagnostic","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Diagnostic"}}},"typeParams":[]},{"name":"sourceLine","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":657,"col":4},"jsDoc":{"doc":"The text of the source line related to the diagnostic."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"source","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":658,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"start","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":660,"col":4},"jsDoc":{"doc":"The start position of the error. Zero based index."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"line","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"character","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]},{"name":"end","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":665,"col":4},"jsDoc":{"doc":"The end position of the error.  Zero based index."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"line","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"character","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]},{"name":"fileName","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":670,"col":4},"jsDoc":{"doc":"The filename of the resource related to the diagnostic message."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"category","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":672,"col":4},"jsDoc":{"doc":"The category of the diagnostic."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"DiagnosticCategory","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DiagnosticCategory"}},"typeParams":[]},{"name":"code","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":674,"col":4},"jsDoc":{"doc":"A number identifier."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"typeAlias","name":"SetRawOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":677,"col":2},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"cbreak","params":[],"computed":false,"optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}},{"kind":"function","name":"setRaw","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":697,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted\n\nSet TTY to be under raw mode or not. In raw mode, characters are read and\nreturned as is, without being processed. All special processing of\ncharacters by the terminal is disabled, including echoing input characters.\nReading from a TTY device in raw mode is faster than reading from a TTY\ndevice in canonical mode.\n\nThe `cbreak` option can be used to indicate that characters that correspond\nto a signal should still be generated. When disabling raw mode, this option\nis ignored. This functionality currently only works on Linux and Mac OS.\n\n```ts\nDeno.setRaw(Deno.stdin.rid, true, { cbreak: true });\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"mode","optional":false,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"SetRawOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SetRawOptions"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"utimeSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":714,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nSynchronously changes the access (`atime`) and modification (`mtime`) times\nof a file system object referenced by `path`. Given times are either in\nseconds (UNIX epoch time) or as `Date` objects.\n\n```ts\nDeno.utimeSync(\"myfile.txt\", 1556495550, new Date());\n```\n\nRequires `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"utime","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":731,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nChanges the access (`atime`) and modification (`mtime`) times of a file\nsystem object referenced by `path`. Given times are either in seconds\n(UNIX epoch time) or as `Date` objects.\n\n```ts\nawait Deno.utime(\"myfile.txt\", 1556495550, new Date());\n```\n\nRequires `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"path","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"run","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":737,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"opt","optional":false,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"Process","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Process"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"","kind":"intersection","intersection":[{"repr":"RunOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RunOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"clearEnv","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"gid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"uid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"default":{"repr":"","kind":"intersection","intersection":[{"repr":"RunOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RunOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"clearEnv","params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"gid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"uid","params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}]}},{"kind":"function","name":"hostname","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":760,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.  Additional consideration is still\nnecessary around the permissions required.\n\nGet the `hostname` of the machine the Deno process is running on.\n\n```ts\nconsole.log(Deno.hostname());\n```\n\n Requires `allow-env` permission."},"functionDef":{"params":[],"returnType":{"repr":"string","kind":"keyword","keyword":"string"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"class","name":"HttpClient","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":771,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\nA custom HttpClient for use with `fetch`.\n\n```ts\nconst caCert = await Deno.readTextFile(\"./ca.pem\");\nconst client = Deno.createHttpClient({ caCerts: [ caCert ] });\nconst req = await fetch(\"https://myserver.com\", { client });\n```"},"classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"rid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":772,"col":4}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":773,"col":4}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}},{"kind":"interface","name":"CreateHttpClientOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":779,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\nThe options used when creating a [HttpClient]."},"interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"caCerts","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":784,"col":4},"jsDoc":{"doc":"A list of root certificates that will be used in addition to the\ndefault root certificates to verify the peer's certificate.\n\nMust be in PEM format."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"proxy","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":786,"col":4},"jsDoc":{"doc":"A HTTP proxy to use for new connections."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Proxy","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Proxy"}},"typeParams":[]},{"name":"certChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":788,"col":4},"jsDoc":{"doc":"PEM formatted client certificate chain."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"privateKey","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":790,"col":4},"jsDoc":{"doc":"PEM formatted (RSA or PKCS8) private key of client certificate."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"Proxy","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":793,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"url","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":794,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"basicAuth","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":795,"col":4},"params":[],"computed":false,"optional":true,"tsType":{"repr":"BasicAuth","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"BasicAuth"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"BasicAuth","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":798,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"username","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":799,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"password","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":800,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"createHttpClient","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":817,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API, yet to be vetted.\nCreate a custom HttpClient for to use with `fetch`.\n\n```ts\nconst caCert = await Deno.readTextFile(\"./ca.pem\");\nconst client = Deno.createHttpClient({ caCerts: [ caCert ] });\nconst response = await fetch(\"https://myserver.com\", { client });\n```\n\n```ts\nconst client = Deno.createHttpClient({ proxy: { url: \"http://myproxy.com:8080\" } });\nconst response = await fetch(\"https://myserver.com\", { client });\n```"},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"CreateHttpClientOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"CreateHttpClientOptions"}}}],"returnType":{"repr":"HttpClient","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HttpClient"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"futimeSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":832,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nSynchronously changes the access (`atime`) and modification (`mtime`) times\nof a file stream resource referenced by `rid`. Given times are either in\nseconds (UNIX epoch time) or as `Date` objects.\n\n```ts\nconst file = Deno.openSync(\"file.txt\", { create: true, write: true });\nDeno.futimeSync(file.rid, 1556495550, new Date());\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"futime","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":849,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: needs investigation into high precision time.\n\nChanges the access (`atime`) and modification (`mtime`) times of a file\nstream resource referenced by `rid`. Given times are either in seconds\n(UNIX epoch time) or as `Date` objects.\n\n```ts\nconst file = await Deno.open(\"file.txt\", { create: true, write: true });\nawait Deno.futime(file.rid, 1556495550, new Date());\n```"},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"atime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}},{"kind":"identifier","name":"mtime","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"number","kind":"keyword","keyword":"number"},{"repr":"Date","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Date"}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"DatagramConn","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":858,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nA generic transport listener for message-oriented protocols."},"interfaceDef":{"extends":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}]}],"typeName":"AsyncIterable"}}],"methods":[{"name":"receive","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":862,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nWaits for and resolves to the next message to the `UDPConn`."},"optional":false,"params":[{"kind":"identifier","name":"p","optional":true,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}]}],"typeName":"Promise"}},"typeParams":[]},{"name":"send","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":866,"col":4},"jsDoc":{"doc":"UNSTABLE: new API, yet to be vetted.\n\nSends a message to the target."},"optional":false,"params":[{"kind":"identifier","name":"p","optional":false,"tsType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}},{"kind":"identifier","name":"addr","optional":false,"tsType":{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"number","kind":"keyword","keyword":"number"}],"typeName":"Promise"}},"typeParams":[]},{"name":"close","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":871,"col":4},"jsDoc":{"doc":"UNSTABLE: new API, yet to be vetted.\n\nClose closes the socket. Any pending message promises will be rejected\nwith errors."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]},{"name":"[Symbol.asyncIterator]","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":874,"col":4},"computed":true,"optional":false,"params":[],"returnType":{"repr":"AsyncIterableIterator","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}},{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}}]}],"typeName":"AsyncIterableIterator"}},"typeParams":[]}],"properties":[{"name":"addr","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":873,"col":4},"jsDoc":{"doc":"Return the address of the `UDPConn`."},"params":[],"readonly":true,"computed":false,"optional":false,"tsType":{"repr":"Addr","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Addr"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"UnixListenOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":877,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"path","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":879,"col":4},"jsDoc":{"doc":"A Path to the Unix Socket."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"listen","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":891,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nListen announces on the local transport address.\n\n```ts\nconst listener = Deno.listen({ path: \"/foo/bar.sock\", transport: \"unix\" })\n```\n\nRequires `allow-read` and `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"UnixListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixListenOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"transport","params":[],"computed":false,"optional":false,"tsType":{"repr":"unix","kind":"literal","literal":{"kind":"string","string":"unix"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"Listener","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Listener"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"listenDatagram","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":912,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted\n\nListen announces on the local transport address.\n\n```ts\nconst listener1 = Deno.listenDatagram({\n  port: 80,\n  transport: \"udp\"\n});\nconst listener2 = Deno.listenDatagram({\n  hostname: \"golang.org\",\n  port: 80,\n  transport: \"udp\"\n});\n```\n\nRequires `allow-net` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"ListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ListenOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"transport","params":[],"computed":false,"optional":false,"tsType":{"repr":"udp","kind":"literal","literal":{"kind":"string","string":"udp"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"DatagramConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DatagramConn"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"listenDatagram","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":928,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted\n\nListen announces on the local transport address.\n\n```ts\nconst listener = Deno.listenDatagram({\n  path: \"/foo/bar.sock\",\n  transport: \"unixpacket\"\n});\n```\n\nRequires `allow-read` and `allow-write` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"UnixListenOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixListenOptions"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"transport","params":[],"computed":false,"optional":false,"tsType":{"repr":"unixpacket","kind":"literal","literal":{"kind":"string","string":"unixpacket"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"DatagramConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"DatagramConn"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"UnixConnectOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":932,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"transport","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":933,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"unix","kind":"literal","literal":{"kind":"string","string":"unix"}},"typeParams":[]},{"name":"path","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":934,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"connect","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":952,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**:  The unix socket transport is unstable as a new API yet to\nbe vetted.  The TCP transport is considered stable.\n\nConnects to the hostname (default is \"127.0.0.1\") and port on the named\ntransport (default is \"tcp\"), and resolves to the connection (`Conn`).\n\n```ts\nconst conn1 = await Deno.connect({ port: 80 });\nconst conn2 = await Deno.connect({ hostname: \"192.0.2.1\", port: 80 });\nconst conn3 = await Deno.connect({ hostname: \"[2001:db8::1]\", port: 80 });\nconst conn4 = await Deno.connect({ hostname: \"golang.org\", port: 80, transport: \"tcp\" });\nconst conn5 = await Deno.connect({ path: \"/foo/bar.sock\", transport: \"unix\" });\n```\n\nRequires `allow-net` permission for \"tcp\" and `allow-read` for \"unix\"."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"ConnectOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"TcpConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TcpConn"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"connect","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":955,"col":2},"declarationKind":"export","functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"UnixConnectOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixConnectOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"UnixConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"UnixConn"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"ConnectTlsOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":959,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"certChain","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":961,"col":4},"jsDoc":{"doc":"PEM formatted client certificate chain."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"privateKey","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":963,"col":4},"jsDoc":{"doc":"PEM formatted (RSA or PKCS8) private key of client certificate."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"alpnProtocols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":970,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nApplication-Layer Protocol Negotiation (ALPN) protocols supported by\nthe client. If not specified, no ALPN extension will be included in the\nTLS handshake."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TlsHandshakeInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":973,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"alpnProtocol","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":979,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nContains the ALPN protocol selected during negotiation with the server.\nIf no ALPN protocol selected, returns `null`."},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"null","kind":"keyword","keyword":"null"}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"TlsConn","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":982,"col":2},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Conn"}}],"methods":[{"name":"handshake","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":986,"col":4},"jsDoc":{"doc":"Runs the client or server handshake protocol to completion if that has\nnot happened yet. Calling this method is optional; the TLS handshake\nwill be completed automatically as soon as data is sent or received."},"optional":false,"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"TlsHandshakeInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TlsHandshakeInfo"}}],"typeName":"Promise"}},"typeParams":[]}],"properties":[],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"connectTls","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1004,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE** New API, yet to be vetted.\n\nCreate a TLS connection with an attached client certificate.\n\n```ts\nconst conn = await Deno.connectTls({\n  hostname: \"deno.land\",\n  port: 443,\n  certChain: \"---- BEGIN CERTIFICATE ----\\n ...\",\n  privateKey: \"---- BEGIN PRIVATE KEY ----\\n ...\",\n});\n```\n\nRequires `allow-net` permission."},"functionDef":{"params":[{"kind":"identifier","name":"options","optional":false,"tsType":{"repr":"ConnectTlsOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ConnectTlsOptions"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"TlsConn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"TlsConn"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"ListenTlsOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1006,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"alpnProtocols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1013,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nApplication-Layer Protocol Negotiation (ALPN) protocols to announce to\nthe client. If not specified, no ALPN extension will be included in the\nTLS handshake."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"StartTlsOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1016,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"alpnProtocols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1023,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nApplication-Layer Protocol Negotiation (ALPN) protocols to announce to\nthe client. If not specified, no ALPN extension will be included in the\nTLS handshake."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"Listener","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1026,"col":2},"declarationKind":"export","interfaceDef":{"extends":[{"repr":"AsyncIterable","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Conn"}}],"typeName":"AsyncIterable"}}],"methods":[{"name":"ref","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1034,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nMake the listener block the event loop from finishing.\n\nNote: the listener blocks the event loop from finishing by default.\nThis method is only meaningful after `.unref()` is called."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]},{"name":"unref","kind":"method","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1039,"col":4},"jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nMake the listener not block the event loop from finishing."},"optional":false,"params":[],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"typeParams":[]}],"properties":[],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"flock","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1047,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nAcquire an advisory file-system lock for the provided file. `exclusive`\ndefaults to `false`."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"exclusive","optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"flockSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1054,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nAcquire an advisory file-system lock for the provided file. `exclusive`\ndefaults to `false`."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}},{"kind":"identifier","name":"exclusive","optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"funlock","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1060,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nRelease an advisory file-system lock for the provided file."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"void","kind":"keyword","keyword":"void"}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"funlockSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1066,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: New API should be tested first.\n\nRelease an advisory file-system lock for the provided file."},"functionDef":{"params":[{"kind":"identifier","name":"rid","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"refTimer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1072,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nMake the timer of the given id blocking the event loop from finishing"},"functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"unrefTimer","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1078,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetted.\n\nMake the timer of the given id not blocking the event loop from finishing"},"functionDef":{"params":[{"kind":"identifier","name":"id","optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"function","name":"upgradeHttp","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1090,"col":2},"declarationKind":"export","jsDoc":{"doc":"**UNSTABLE**: new API, yet to be vetter.\n\nAllows to \"hijack\" a connection that the request is associated with.\nCan be used to implement protocols that build on top of HTTP (eg.\nWebSockets).\n\nThe returned promise returns underlying connection and first packet\nreceived. The promise shouldn't be awaited before responding to the\n`request`, otherwise event loop might deadlock."},"functionDef":{"params":[{"kind":"identifier","name":"request","optional":false,"tsType":{"repr":"Request","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Request"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"tuple","tuple":[{"repr":"Deno.Conn","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.Conn"}},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"SpawnOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1094,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"args","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1096,"col":4},"jsDoc":{"doc":"Arguments to pass to the process."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"cwd","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1101,"col":4},"jsDoc":{"doc":"The working directory of the process.\nIf not specified, the cwd of the parent process is used."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]},"typeParams":[]},{"name":"clearEnv","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1107,"col":4},"jsDoc":{"doc":"Clear environmental variables from parent process.\nDoesn't guarantee that only `opt.env` variables are present,\nas the OS may set environmental variables for processes."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"boolean","kind":"keyword","keyword":"boolean"},"typeParams":[]},{"name":"env","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1109,"col":4},"jsDoc":{"doc":"Environmental variables to pass to the subprocess."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"Record","kind":"typeRef","typeRef":{"typeParams":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"string","kind":"keyword","keyword":"string"}],"typeName":"Record"}},"typeParams":[]},{"name":"uid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1114,"col":4},"jsDoc":{"doc":"Sets the child process’s user ID. This translates to a setuid call\nin the child process. Failure in the setuid call will cause the spawn to fail."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"gid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1116,"col":4},"jsDoc":{"doc":"Similar to `uid`, but sets the group ID of the child process."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"signal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1122,"col":4},"jsDoc":{"doc":"An AbortSignal that allows closing the process using the corresponding\nAbortController by sending the process a SIGTERM signal.\nNot Supported by execSync."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"AbortSignal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AbortSignal"}},"typeParams":[]},{"name":"stdin","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1125,"col":4},"jsDoc":{"doc":"Defaults to \"null\"."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"piped","kind":"literal","literal":{"kind":"string","string":"piped"}},{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"typeParams":[]},{"name":"stdout","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1127,"col":4},"jsDoc":{"doc":"Defaults to \"piped\"."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"piped","kind":"literal","literal":{"kind":"string","string":"piped"}},{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"typeParams":[]},{"name":"stderr","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1129,"col":4},"jsDoc":{"doc":"Defaults to \"piped\"."},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"union","union":[{"repr":"piped","kind":"literal","literal":{"kind":"string","string":"piped"}},{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"function","name":"spawnChild","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1154,"col":2},"declarationKind":"export","jsDoc":{"doc":"Spawns a child process.\n\nIf stdin is set to \"piped\", the stdin WritableStream needs to be closed manually.\n\n```ts\nconst child = Deno.spawnChild(Deno.execPath(), {\n  args: [\n    \"eval\",\n    \"console.log('Hello World')\",\n  ],\n  stdin: \"piped\",\n});\n\n// open a file and pipe the subprocess output to it.\nchild.stdout.pipeTo(Deno.openSync(\"output\").writable);\n\n// manually close stdin\nchild.stdin.close();\nconst status = await child.status;\n```"},"functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"Child","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"Child"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}},"default":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}]}},{"kind":"class","name":"Child","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1159,"col":2},"declarationKind":"export","classDef":{"isAbstract":false,"constructors":[],"properties":[{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"stdin","kind":"literal","literal":{"kind":"string","string":"stdin"}}}},"extendsType":{"repr":"piped","kind":"literal","literal":{"kind":"string","string":"piped"}},"trueType":{"repr":"WritableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"WritableStream"}},"falseType":{"repr":"null","kind":"keyword","keyword":"null"}}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stdin","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1160,"col":4}},{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"stdout","kind":"literal","literal":{"kind":"string","string":"stdout"}}}},"extendsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"trueType":{"repr":"null","kind":"keyword","keyword":"null"},"falseType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"ReadableStream"}}}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stdout","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1162,"col":4}},{"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"stderr","kind":"literal","literal":{"kind":"string","string":"stderr"}}}},"extendsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"trueType":{"repr":"null","kind":"keyword","keyword":"null"},"falseType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}],"typeName":"ReadableStream"}}}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"stderr","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1164,"col":4}},{"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"pid","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1167,"col":4}},{"jsDoc":{"doc":"Get the status of the child."},"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"ChildStatus","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildStatus"}}],"typeName":"Promise"}},"readonly":true,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"status","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1169,"col":4}}],"indexSignatures":[],"methods":[{"jsDoc":{"doc":"Waits for the child to exit completely, returning all its output and status."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"output","kind":"method","functionDef":{"params":[],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"SpawnOutput","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"SpawnOutput"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1172,"col":4}},{"jsDoc":{"doc":"Kills the process with given Signal. Defaults to SIGTERM."},"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"kill","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"signo","optional":true,"tsType":{"repr":"Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Signal"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1174,"col":4}}],"extends":null,"implements":[],"typeParams":[{"name":"T","constraint":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}],"superTypeParams":[]}},{"kind":"function","name":"spawn","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1194,"col":2},"declarationKind":"export","jsDoc":{"doc":"Executes a subprocess, waiting for it to finish and\ncollecting all of its output.\nWill throw an error if `stdin: \"piped\"` is passed.\n\n```ts\nconst { status, stdout, stderr } = await Deno.spawn(Deno.execPath(), {\n  args: [\n    \"eval\",\n       \"console.log('hello'); console.error('world')\",\n  ],\n});\nconsole.assert(status.code === 0);\nconsole.assert(\"hello\\n\" === new TextDecoder().decode(stdout));\nconsole.assert(\"world\\n\" === new TextDecoder().decode(stderr));\n```"},"functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"SpawnOutput","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"SpawnOutput"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}},"default":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}]}},{"kind":"function","name":"spawnSync","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1216,"col":2},"declarationKind":"export","jsDoc":{"doc":"Synchronously executes a subprocess, waiting for it to finish and\ncollecting all of its output.\nWill throw an error if `stdin: \"piped\"` is passed.\n\n```ts\nconst { status, stdout, stderr } = Deno.spawnSync(Deno.execPath(), {\n  args: [\n    \"eval\",\n      \"console.log('hello'); console.error('world')\",\n  ],\n});\nconsole.assert(status.code === 0);\nconsole.assert(\"hello\\n\" === new TextDecoder().decode(stdout));\nconsole.assert(\"world\\n\" === new TextDecoder().decode(stderr));\n```"},"functionDef":{"params":[{"kind":"identifier","name":"command","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}}]}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}}],"returnType":{"repr":"SpawnOutput","kind":"typeRef","typeRef":{"typeParams":[{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}}],"typeName":"SpawnOutput"}},"isAsync":false,"isGenerator":false,"typeParams":[{"name":"T","constraint":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}},"default":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}]}},{"kind":"typeAlias","name":"ChildStatus","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1221,"col":2},"declarationKind":"export","typeAliasDef":{"tsType":{"repr":"","kind":"union","union":[{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"success","params":[],"computed":false,"optional":false,"tsType":{"repr":"true","kind":"literal","literal":{"kind":"boolean","boolean":true}},"typeParams":[]},{"name":"code","params":[],"computed":false,"optional":false,"tsType":{"repr":"0","kind":"literal","literal":{"kind":"number","number":0}},"typeParams":[]},{"name":"signal","params":[],"computed":false,"optional":false,"tsType":{"repr":"null","kind":"keyword","keyword":"null"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"success","params":[],"computed":false,"optional":false,"tsType":{"repr":"false","kind":"literal","literal":{"kind":"boolean","boolean":false}},"typeParams":[]},{"name":"code","params":[],"computed":false,"optional":false,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"signal","params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Signal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Signal"}},{"repr":"null","kind":"keyword","keyword":"null"}]},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]},"typeParams":[]}},{"kind":"interface","name":"SpawnOutput","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1233,"col":2},"declarationKind":"export","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"status","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1234,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"ChildStatus","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"ChildStatus"}},"typeParams":[]},{"name":"stdout","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1235,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"stdout","kind":"literal","literal":{"kind":"string","string":"stdout"}}}},"extendsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"trueType":{"repr":"null","kind":"keyword","keyword":"null"},"falseType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}},"typeParams":[]},{"name":"stderr","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1236,"col":4},"params":[],"computed":false,"optional":false,"tsType":{"repr":"","kind":"conditional","conditionalType":{"checkType":{"repr":"","kind":"indexedAccess","indexedAccess":{"readonly":false,"objType":{"repr":"T","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"T"}},"indexType":{"repr":"stderr","kind":"literal","literal":{"kind":"string","string":"stderr"}}}},"extendsType":{"repr":"","kind":"union","union":[{"repr":"inherit","kind":"literal","literal":{"kind":"string","string":"inherit"}},{"repr":"null","kind":"literal","literal":{"kind":"string","string":"null"}}]},"trueType":{"repr":"null","kind":"keyword","keyword":"null"},"falseType":{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[{"name":"T","constraint":{"repr":"SpawnOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"SpawnOptions"}}}]}}]}},{"kind":"function","name":"fetch","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1240,"col":0},"declarationKind":"declare","functionDef":{"params":[{"kind":"identifier","name":"input","optional":false,"tsType":{"repr":"","kind":"union","union":[{"repr":"Request","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Request"}},{"repr":"URL","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"URL"}},{"repr":"string","kind":"keyword","keyword":"string"}]}},{"kind":"identifier","name":"init","optional":true,"tsType":{"repr":"","kind":"intersection","intersection":[{"repr":"RequestInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"RequestInit"}},{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"client","params":[],"computed":false,"optional":false,"tsType":{"repr":"Deno.HttpClient","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.HttpClient"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}}]}}],"returnType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"Response","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Response"}}],"typeName":"Promise"}},"isAsync":false,"isGenerator":false,"typeParams":[]}},{"kind":"interface","name":"WorkerOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1245,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"deno","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1272,"col":2},"jsDoc":{"doc":"UNSTABLE: New API.\n\nConfigure permissions options to change the level of access the worker will\nhave. By default it will have no permissions. Note that the permissions\nof a worker can't be extended beyond its parent's permissions reach.\n- \"inherit\" will take the permissions of the thread the worker is created in\n- \"none\" will use the default behavior and have no permission\n- You can provide a list of routes relative to the file the worker\n  is created in to limit the access of the worker (read/write permissions only)\n\nExample:\n\n```ts\n// mod.ts\nconst worker = new Worker(\n  new URL(\"deno_worker.ts\", import.meta.url).href, {\n    type: \"module\",\n    deno: {\n      permissions: {\n        read: true,\n      },\n    },\n  }\n);\n```"},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"typeLiteral","typeLiteral":{"methods":[],"properties":[{"name":"permissions","params":[],"computed":false,"optional":true,"tsType":{"repr":"Deno.PermissionOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Deno.PermissionOptions"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[]}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocketStreamOptions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1278,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"protocols","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1279,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"","kind":"array","array":{"repr":"string","kind":"keyword","keyword":"string"}},"typeParams":[]},{"name":"signal","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1280,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"AbortSignal","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"AbortSignal"}},"typeParams":[]},{"name":"headers","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1281,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"HeadersInit","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"HeadersInit"}},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocketConnection","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1284,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"readable","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1285,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"ReadableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}],"typeName":"ReadableStream"}},"typeParams":[]},{"name":"writable","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1286,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"WritableStream","kind":"typeRef","typeRef":{"typeParams":[{"repr":"","kind":"union","union":[{"repr":"string","kind":"keyword","keyword":"string"},{"repr":"Uint8Array","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"Uint8Array"}}]}],"typeName":"WritableStream"}},"typeParams":[]},{"name":"extensions","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1287,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]},{"name":"protocol","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1288,"col":2},"params":[],"computed":false,"optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"interface","name":"WebSocketCloseInfo","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1291,"col":0},"declarationKind":"declare","interfaceDef":{"extends":[],"methods":[],"properties":[{"name":"code","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1292,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"number","kind":"keyword","keyword":"number"},"typeParams":[]},{"name":"reason","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1293,"col":2},"params":[],"computed":false,"optional":true,"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"typeParams":[]}],"callSignatures":[],"indexSignatures":[],"typeParams":[]}},{"kind":"class","name":"WebSocketStream","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1296,"col":0},"declarationKind":"declare","classDef":{"isAbstract":false,"constructors":[{"accessibility":null,"name":"constructor","params":[{"kind":"identifier","name":"url","optional":false,"tsType":{"repr":"string","kind":"keyword","keyword":"string"}},{"kind":"identifier","name":"options","optional":true,"tsType":{"repr":"WebSocketStreamOptions","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketStreamOptions"}}}],"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1297,"col":2}}],"properties":[{"tsType":{"repr":"string","kind":"keyword","keyword":"string"},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"url","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1298,"col":2}},{"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketConnection","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketConnection"}}],"typeName":"Promise"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"connection","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1299,"col":2}},{"tsType":{"repr":"Promise","kind":"typeRef","typeRef":{"typeParams":[{"repr":"WebSocketCloseInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketCloseInfo"}}],"typeName":"Promise"}},"readonly":false,"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"closed","location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1300,"col":2}}],"indexSignatures":[],"methods":[{"accessibility":null,"optional":false,"isAbstract":false,"isStatic":false,"name":"close","kind":"method","functionDef":{"params":[{"kind":"identifier","name":"closeInfo","optional":true,"tsType":{"repr":"WebSocketCloseInfo","kind":"typeRef","typeRef":{"typeParams":null,"typeName":"WebSocketCloseInfo"}}}],"returnType":{"repr":"void","kind":"keyword","keyword":"void"},"isAsync":false,"isGenerator":false,"typeParams":[]},"location":{"filename":"https://raw.githubusercontent.com/denoland/deno/v1.23.2/cli/dts/lib.deno.unstable.d.ts","line":1301,"col":2}}],"extends":null,"implements":[],"typeParams":[],"superTypeParams":[]}}]